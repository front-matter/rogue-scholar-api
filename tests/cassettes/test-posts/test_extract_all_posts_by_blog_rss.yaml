interactions:
- request:
    body: '{}'
    headers:
      accept:
      - application/vnd.pgrst.object+json
      accept-encoding:
      - gzip, deflate
      accept-profile:
      - public
      connection:
      - keep-alive
      content-length:
      - '2'
      content-profile:
      - public
      content-type:
      - application/json
      host:
      - db.rogue-scholar.org
      user-agent:
      - python-httpx/0.24.1
      x-client-info:
      - supabase-py/1.2.0
    method: GET
    uri: https://db.rogue-scholar.org/rest/v1/blogs?select=id%2C%20slug%2C%20feed_url%2C%20current_feed_url%2C%20home_page_url%2C%20archive_prefix%2C%20feed_format%2C%20modified_at%2C%20use_mastodon%2C%20generator%2C%20favicon%2C%20title%2C%20category%2C%20status%2C%20user_id%2C%20authors%2C%20plan%2C%20use_api%2C%20relative_url%2C%20filter&slug=eq.tarleb
  response:
    content: '{"id":"7gyq558","slug":"tarleb","feed_url":"https://tarleb.com/index.xml","current_feed_url":null,"home_page_url":"https://tarleb.com/index.html","archive_prefix":null,"feed_format":"application/rss+xml","modified_at":"2023-03-24T00:00:00+00:00","use_mastodon":false,"generator":"Quarto
      1.2.475","favicon":null,"title":"tarleb","category":"computerAndInformationSciences","status":"active","user_id":"dead81b3-8a8b-45c9-85fe-f01bb3948c77","authors":null,"plan":"Starter","use_api":null,"relative_url":null,"filter":null}'
    headers:
      Access-Control-Allow-Origin:
      - '*'
      CF-Cache-Status:
      - DYNAMIC
      CF-Ray:
      - 817ad89c5c5ccb19-DUS
      Connection:
      - keep-alive
      Content-Location:
      - /blogs?select=id%2C%20slug%2C%20feed_url%2C%20current_feed_url%2C%20home_page_url%2C%20archive_prefix%2C%20feed_format%2C%20modified_at%2C%20use_mastodon%2C%20generator%2C%20favicon%2C%20title%2C%20category%2C%20status%2C%20user_id%2C%20authors%2C%20plan%2C%20use_api%2C%20relative_url%2C%20filter&slug=eq.tarleb
      Content-Profile:
      - public
      Content-Range:
      - 0-0/*
      Content-Type:
      - application/vnd.pgrst.object+json; charset=utf-8
      Date:
      - Tue, 17 Oct 2023 19:11:13 GMT
      Server:
      - cloudflare
      Strict-Transport-Security:
      - max-age=2592000; includeSubDomains
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      Via:
      - kong/2.8.1
      X-Kong-Proxy-Latency:
      - '1'
      X-Kong-Upstream-Latency:
      - '5'
      alt-svc:
      - h3=":443"; ma=86400
      sb-gateway-version:
      - '1'
    http_version: HTTP/1.1
    status_code: 200
- request:
    body: null
    headers:
      A-Im:
      - feed
      Accept:
      - application/atom+xml,application/rdf+xml,application/rss+xml,application/x-netcdf,application/xml;q=0.9,text/xml;q=0.2,*/*;q=0.1
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - close
      Host:
      - tarleb.com
      User-Agent:
      - feedparser/6.0.10 +https://github.com/kurtmckee/feedparser/
    method: GET
    uri: https://tarleb.com/index.xml
  response:
    body:
      string: !!binary |
        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
        Pacx8XvHef5g6z8Bec7l0N+RAgA=
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - '*'
      Age:
      - '0'
      Cache-Control:
      - max-age=600
      Connection:
      - close
      Content-Encoding:
      - gzip
      Content-Length:
      - '39350'
      Content-Type:
      - application/xml
      Date:
      - Tue, 17 Oct 2023 19:11:13 GMT
      ETag:
      - W/"64205d75-291df"
      Last-Modified:
      - Sun, 26 Mar 2023 14:57:57 GMT
      Server:
      - GitHub.com
      Vary:
      - Accept-Encoding
      Via:
      - 1.1 varnish
      X-Cache:
      - HIT
      X-Cache-Hits:
      - '1'
      X-Fastly-Request-ID:
      - 2d96e7e823a84c776acf9d62fde7e65b770bf41c
      X-GitHub-Request-Id:
      - C440:E42E:176744A:17AC74D:652EDB86
      X-Served-By:
      - cache-ams21063-AMS
      X-Timer:
      - S1697569874.830993,VS0,VE106
      expires:
      - Tue, 17 Oct 2023 19:17:50 GMT
      x-proxy-cache:
      - MISS
    status:
      code: 200
      message: OK
- request:
    body: null
    headers: {}
    method: GET
    uri: https://tarleb.com/index.xml
  response:
    body:
      string: "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rss  xmlns:atom=\"http://www.w3.org/2005/Atom\"
        \n      xmlns:media=\"http://search.yahoo.com/mrss/\" \n      xmlns:content=\"http://purl.org/rss/1.0/modules/content/\"
        \n      xmlns:dc=\"http://purl.org/dc/elements/1.1/\" \n      version=\"2.0\">\n<channel>\n<title>tarleb</title>\n<link>https://tarleb.com/index.html</link>\n<atom:link
        href=\"https://tarleb.com/index.xml\" rel=\"self\" type=\"application/rss+xml\"/>\n<description>tarleb&#39;s
        blog</description>\n<generator>quarto-1.2.475</generator>\n<lastBuildDate>Fri,
        24 Mar 2023 00:00:00 GMT</lastBuildDate>\n<item>\n  <title>Typst Musings</title>\n
        \ <dc:creator>Albert Krewinkel</dc:creator>\n  <link>https://tarleb.com/posts/typst-musings/index.html</link>\n
        \ <description><![CDATA[ \n\n\n\n<p><a href=\"https://typst.app\">Typst</a>,
        the new writing tool, was open sourced a couple of days ago. This is right
        up my alley of course, and I have a couple of thoughts on it, which I share
        here.</p>\n<section id=\"what-is-it\" class=\"level2\">\n<h2 class=\"anchored\"
        data-anchor-id=\"what-is-it\">What is it?</h2>\n<p>Typst is a writing tool
        that\u2019s described as a LaTeX alternative: it takes plain-text markup as
        input and can produce nice looking PDFs from that. The open-sourcing of the
        code created a lot of excitement and interest, with the <a href=\"https://github.com/typst/typst\">GitHub
        repository</a> getting starred over 9,000 times in just a few days.</p>\n<p>The
        tool comes with fresh and interesting ideas, impressive technology, and a
        good bit of hype\u2014so let\u2019s take a closer look.</p>\n</section>\n<section
        id=\"how-does-it-work\" class=\"level2\">\n<h2 class=\"anchored\" data-anchor-id=\"how-does-it-work\">How
        does it work?</h2>\n<p>Typst is written in <a href=\"https://www.rust-lang.org/\">Rust</a>,
        a comparatively low-level programming language that fixes many shortcomings
        of other languages operating in the same domain. One interesting feature of
        Rust that Typst makes use of is compilation to web assembly, which allows
        us to run Rust programs in the browser. This is how Typst can do the blazing
        fast PDF generation <em>in the browser!</em></p>\n<p>Of course this only works
        if it is Rust all the way down, which has important consequences. My first
        thought when I looked at the code was that it suffered from some serious <a
        href=\"https://en.wikipedia.org/wiki/Not_invented_here\">nih</a> syndrome:
        basically the whole stack is built on libraries written by the Typst team,
        even when high-qualitify open source libraries were available and could have
        been used with Rust.</p>\n<p>But, while nih still seems relevant here and
        there, the majority of libraries make sense when viewed through the lens of
        wasm-compilation. My understanding is that it\u2019s not always easy to compile
        C libraries to wasm. And with a complex system like Typst, it is often essential
        to have full control over the underlying libraries. So I think most choices
        are quite reasonable.</p>\n</section>\n<section id=\"what-makes-it-popular\"
        class=\"level2\">\n<h2 class=\"anchored\" data-anchor-id=\"what-makes-it-popular\">What
        makes it popular?</h2>\n<p>The Typst announcements on sites like <a href=\"https://news.ycombinator.com/item?id=35250210\">Hacker
        News</a> and <a href=\"https://lobste.rs/s/ko1yjj/typst_new_markup_based_typesetting\">lobste.rs</a>
        ranked \u2116\u20091, and the tool was mentioned in basically every social
        media circle and chat that I happen to be part of. There\u2019s clearly <em>a
        lot</em> of interest in a modernized version of LaTeX. Good ol\u2019 TeX and
        it\u2019s children have been around for a long while, and have essentially
        held the monopoly on PDF production for typographically advanced documents
        (tools like HTML-to-PDF converters like <a href=\"https://weasyprint.org/\">WeasyPrint</a>
        notwithstanding).</p>\n<p>But the need for a nicer PDF generator is probably
        not the only reason why Typst gained so much traction. I believe that a lot
        of interest from the programmer community is fueled by the technological choices:
        Rust has the aura of a new and shiny tool that <a href=\"https://stackoverflow.blog/2023/01/26/comparing-tag-trends-with-our-most-loved-programming-languages/\">everyone
        would like to use</a>, <em>especially</em> the regulars on the aforementioned
        sites, who share an interest in the latest tools. An otherwise equivalent
        project written in a \u201Cboring\u201D language like Python would likely
        have sparked less interest.</p>\n<p>I find it also important to note that
        Typst comes with <em>extensive documentation</em> that makes it easy to dive
        right in. It is far too common in the programming world to release some cool
        new tool into the wild, while treating documentation as an unimportant afterthought.
        Yes, I\u2019m guilty of that, too. Even the best tool can be unusable when
        its docs are missing or sparse. Typst didn\u2019t make this mistake, and I
        think it paid off.</p>\n</section>\n<section id=\"personal-opinions\" class=\"level2\">\n<h2
        class=\"anchored\" data-anchor-id=\"personal-opinions\">Personal opinions</h2>\n<p>This
        wouldn\u2019t be a proper \u201Cold man shakes fist at the clouds\u201D tech
        blog post if it didn\u2019t come with a number of \u201CI see room for improvements\u201D
        comments. Here we go.</p>\n<section id=\"scripting\" class=\"level3\">\n<h3
        class=\"anchored\" data-anchor-id=\"scripting\">Scripting</h3>\n<p>One of
        my main concerns is the scripting language: It seems well designed, but I\u2019m
        not convinced that it was necessary to create a completely new language. I
        actually believe that something like Lua, which is established<sup>1</sup>
        but flexlible, would have worked well here. But what\u2019s more is that,
        if we accept that it was necessary to have a custom language, I would have
        preferred one that isn\u2019t Turing complete, i.e., one where we can be sure
        that document rendering will terminate. Something like <a href=\"https://dhall-lang.org/\">Dhall</a>.</p>\n<p>As
        it currently stands we can neither reuse pre-existing code, nor do we have
        a guarantee that the document will stop evaluating at some point. It feels
        like a missed opportunity.</p>\n</section>\n<section id=\"notebooks\" class=\"level3\">\n<h3
        class=\"anchored\" data-anchor-id=\"notebooks\">Notebooks</h3>\n<p>Notebooks
        are a great tool to improve reproducibility in science writing. The code for
        analyses is collocated with the descriptive text in a single place. The data
        is closely linked to the final tables and graphics. It is one of the great
        features of <a href=\"https://quarto.org/\">Quarto</a>, <a href=\"https://jupyter.org/\">Jupyter</a>,
        <a href=\"https://orgmode.org/\">Org</a>, <a href=\"https://stenci.la/\">Stencila</a>,
        Mathematica, and so on, which makes them well suited for scientific writing
        in fields like medicine, psychology, and the natural sciences.</p>\n<p>This
        could be an <a href=\"https://github.com/typst/typst/issues/117\">issue</a>
        for Typst, but I believe that it won\u2019t be a problem when Typst is used
        in combination with other tools. John MacFarlane (of <a href=\"https://commonmark.org\">CommonMark</a>
        and <a href=\"https://pandoc.org/\">pandoc</a> fame) has <a href=\"https://github.com/jgm/pandoc/issues/8713\">started
        work</a> on a Typst pandoc writer, which will convert existing Markdown documents
        to Typst, and could enable the use of Typst as PDF generator while still writing
        Markdown and Python code in Quarto.</p>\n</section>\n<section id=\"accessibility-and-metadata\"
        class=\"level3\">\n<h3 class=\"anchored\" data-anchor-id=\"accessibility-and-metadata\">Accessibility
        and metadata</h3>\n<p>It\u2019s good practice to make PDFs accessible, which
        requires adding semantic information to a PDF instead of \u201Cjust\u201D
        placing characters on a page. Accessibility is even a legal requirement for
        government-issued documents in many countries. There are standards like PDF/A-1a
        and PDF/UA that ensure people with disabilities can access the information
        contained in the PDF. This is currently not supperted in Typst. LaTeX is still
        trying to catch up there, too, while <a href=\"https://wiki.contextgarden.net/\">ConTeXt</a>
        and <a href=\"https://speedata.de/\">speedata</a> are doing well, for example.</p>\n</section>\n</section>\n<section
        id=\"predictions\" class=\"level2\">\n<h2 class=\"anchored\" data-anchor-id=\"predictions\">Predictions</h2>\n<p>I
        believe Typst will succeed, but not as a full-fledged writing tool. The greatest
        value I see is in the <strong>responsive, interactive, and even collaborative
        styling of PDFs</strong>. That feature is truly unique and sets Typst appart
        from all other software out there. The tool obviously has the potential to
        reach the critical mass of contributors to become a sustainable open source
        project, and the tech choices help to attract more developers. Last but not
        least, the app is shiny, works well, and makes people want to use it.</p>\n<p>At
        the same time, I believe that the Typst writing app won\u2019t take hold in
        scientific writing. Most of the current enthusiasm is contained to technical
        circles, and scientists don\u2019t have strong reasons to switch yet. To the
        contrary, journals expect paper submissions to be done in Word or LaTeX, not
        PDF. This won\u2019t change anytime soon. Typst will have to insert itself
        into the current publishing landscape, and that\u2019s not a trivial task.</p>\n<p>For
        example, <a href=\"https://sciflow.net/\">SciFlow</a> and <a href=\"https://overleaf.com/\">Overleaf</a>
        already exist, cover most of the market needs, have a solid headstart, and
        \u2013 this is the important part \u2013 are well aligned with the needs of
        science publishers. Any new tool has to compete with them. Also, let\u2019s
        not forget all the other tools that I mentioned above.</p>\n<p>Regardless,
        I\u2019m optimistic that Typst can carve out its own business niche to occupy.
        For example, hardly any of my points above matter in print publishing. An
        indie book publisher that allows authors to use Typst for layouting would
        be amazing.</p>\n<p>I hope that the Typst team\u2019s hard work will pay off,
        and I will continue to follow their progress with great interest.</p>\n</section>\n<section
        id=\"acknowledgements\" class=\"level2\">\n<h2 class=\"anchored\" data-anchor-id=\"acknowledgements\">Acknowledgements</h2>\n<p>Heart-felt
        thanks to <a href=\"https://hachyderm.io/@maegul\">@maegul@hachyderm.io</a>
        for the insightful feedback on an earlier version of this post, and to <a
        href=\"https://ilonasilverwood.github.io/\">Ilona Silverwood</a> for her skillful
        editing. This post became much better thanks to their input.</p>\n</section>\n<section
        id=\"updates\" class=\"level2\">\n<h2 class=\"anchored\" data-anchor-id=\"updates\">Updates</h2>\n<p>An
        earlier version listed <a href=\"https://www.authorea.com/\">Authorea</a>
        as an authoring tool, but the platform has shifted focus since I last looked
        at it, so I\u2019ve removed it.</p>\n\n\n</section>\n\n\n<div id=\"quarto-appendix\"
        class=\"default\"><section id=\"footnotes\" class=\"footnotes footnotes-end-of-document\"><h2
        class=\"anchored quarto-appendix-heading\">Footnotes</h2>\n\n<ol>\n<li id=\"fn1\"><p>I
        consider <a href=\"https://lua.org/\">Lua</a> to be <em>the</em> language
        of publishing tools. It fuels <a href=\"https://pandoc.org/\">pandoc</a>,
        <a href=\"https://quarto.org/\">Quarto</a>, <a href=\"https://wiki.contextgarden.net/\">ConTeXt</a>,
        <a href=\"http://luatex.org/\">LuaLaTeX</a>, <a href=\"https://speedata.de/\">speedata</a>,
        <a href=\"https://sile-typesetter.org/\">SILE</a>, and probably a few more.\u21A9\uFE0E</p></li>\n</ol>\n</section></div>
        ]]></description>\n  <category>PDF</category>\n  <guid>https://tarleb.com/posts/typst-musings/index.html</guid>\n
        \ <pubDate>Fri, 24 Mar 2023 00:00:00 GMT</pubDate>\n</item>\n<item>\n  <title>Auto-numbered
        list continuations</title>\n  <dc:creator>Albert Krewinkel</dc:creator>\n
        \ <link>https://tarleb.com/posts/list-continuation/index.html</link>\n  <description><![CDATA[
        \n\n\n\n<p>Pandoc\u2019s Markdown allows for \u201Cfancy lists\u201D, i.e.,
        lists with different styles used for the marker of ordered list items.</p>\n<p>E.g.,
        the list</p>\n<div class=\"sourceCode\" id=\"cb1\" style=\"background: #f1f3f5;\"><pre
        class=\"sourceCode markdown code-with-copy\"><code class=\"sourceCode markdown\"><span
        id=\"cb1-1\">(I)  primus</span>\n<span id=\"cb1-2\">(#)  secundus</span>\n<span
        id=\"cb1-3\">(#)  tertius</span></code></pre></div>\n<p>uses uppercase roman
        numerals and double parentheses for the markers. It gets rendered as</p>\n<blockquote
        class=\"blockquote\">\n<ol type=\"I\">\n<li>primus</li>\n<li>secundus</li>\n<li>tertius</li>\n</ol>\n</blockquote>\n<section
        id=\"continuations\" class=\"level2\">\n<h2 class=\"anchored\" data-anchor-id=\"continuations\">Continuations</h2>\n<p>The
        fancy lists feature also allows to continue lists after an intermediate paragraph:</p>\n<div
        class=\"sourceCode\" id=\"cb2\" style=\"background: #f1f3f5;\"><pre class=\"sourceCode
        markdown code-with-copy\"><code class=\"sourceCode markdown\"><span id=\"cb2-1\">i.
        \  one</span>\n<span id=\"cb2-2\">#.   another</span>\n<span id=\"cb2-3\"></span>\n<span
        id=\"cb2-4\">Interruption; not part of any list.</span>\n<span id=\"cb2-5\"></span>\n<span
        id=\"cb2-6\">iii. continue</span>\n<span id=\"cb2-7\">#.   keep counting</span></code></pre></div>\n<p>This
        becomes</p>\n<blockquote class=\"blockquote\">\n<ol type=\"i\">\n<li>one</li>\n<li>another</li>\n</ol>\n<p>Interruption;
        not part of any list.</p>\n<ol start=\"3\" type=\"i\">\n<li>continue</li>\n<li>keep
        counting</li>\n</ol>\n</blockquote>\n<p>While very convenient, this requires
        us to carefully keep book of the number of items in previous parts, or risk
        the item numbering to become inconsistent. Imagine having to find and update
        all other list parts after adding a single item somewhere. Tedious work, that
        gets tiresome quickly.</p>\n</section>\n<section id=\"convention\" class=\"level2\">\n<h2
        class=\"anchored\" data-anchor-id=\"convention\">Convention</h2>\n<p>Wanting
        none of this, we magicked a method that allows us to mark a list as a continuation.
        This way, we can search for those lists with a Lua filter and let pandoc do
        the counting and numbering for us.</p>\n<p>Our convention is this: any list
        that starts with a number of 90 or above is treated as the continuation of
        a previous list. Why 90? Because it\u2019s large, but still easy to express
        using roman numerals, should one be inclined to use those.</p>\n<div class=\"sourceCode\"
        id=\"cb3\" style=\"background: #f1f3f5;\"><pre class=\"sourceCode markdown
        code-with-copy\"><code class=\"sourceCode markdown\"><span id=\"cb3-1\">i.
        \ primus</span>\n<span id=\"cb3-2\">ii. secundus</span>\n<span id=\"cb3-3\"></span>\n<span
        id=\"cb3-4\">Lorem ipsum.</span>\n<span id=\"cb3-5\"></span>\n<span id=\"cb3-6\">xc.
        alius item</span>\n<span id=\"cb3-7\">#.  ut custodians iens</span></code></pre></div>\n</section>\n<section
        id=\"lua-doing-the-counting\" class=\"level2\">\n<h2 class=\"anchored\" data-anchor-id=\"lua-doing-the-counting\">Lua
        doing the counting</h2>\n<p>The next step is to let pandoc do the counting
        with the help of a Lua filter. In its simplest form, the filter will step
        through all ordered lists in the document, remember the number of items it
        has encountered, and renumber any list whose start is above our chosen threshold.</p>\n<div
        class=\"sourceCode\" id=\"cb4\" style=\"background: #f1f3f5;\"><pre class=\"sourceCode
        lua code-with-copy\"><code class=\"sourceCode lua\"><span id=\"cb4-1\"><span
        class=\"kw\" style=\"color: #003B4F;\">local</span> next_start <span class=\"op\"
        style=\"color: #5E5E5E;\">=</span> <span class=\"dv\" style=\"color: #AD0000;\">1</span></span>\n<span
        id=\"cb4-2\"></span>\n<span id=\"cb4-3\"><span class=\"kw\" style=\"color:
        #003B4F;\">function</span> OrderedList <span class=\"op\" style=\"color: #5E5E5E;\">(</span>ol<span
        class=\"op\" style=\"color: #5E5E5E;\">)</span></span>\n<span id=\"cb4-4\">
        \ <span class=\"cf\" style=\"color: #003B4F;\">if</span> ol<span class=\"op\"
        style=\"color: #5E5E5E;\">.</span>start <span class=\"op\" style=\"color:
        #5E5E5E;\">&gt;=</span> <span class=\"dv\" style=\"color: #AD0000;\">90</span>
        <span class=\"cf\" style=\"color: #003B4F;\">then</span></span>\n<span id=\"cb4-5\">
        \   ol<span class=\"op\" style=\"color: #5E5E5E;\">.</span>start <span class=\"op\"
        style=\"color: #5E5E5E;\">=</span> next_start</span>\n<span id=\"cb4-6\">
        \   next_start <span class=\"op\" style=\"color: #5E5E5E;\">=</span> next_start
        <span class=\"op\" style=\"color: #5E5E5E;\">+</span> <span class=\"op\" style=\"color:
        #5E5E5E;\">#</span>ol<span class=\"op\" style=\"color: #5E5E5E;\">.</span>content</span>\n<span
        id=\"cb4-7\">  <span class=\"cf\" style=\"color: #003B4F;\">else</span></span>\n<span
        id=\"cb4-8\">    next_start <span class=\"op\" style=\"color: #5E5E5E;\">=</span>
        <span class=\"op\" style=\"color: #5E5E5E;\">#</span>ol<span class=\"op\"
        style=\"color: #5E5E5E;\">.</span>content <span class=\"op\" style=\"color:
        #5E5E5E;\">+</span> <span class=\"dv\" style=\"color: #AD0000;\">1</span></span>\n<span
        id=\"cb4-9\">  <span class=\"cf\" style=\"color: #003B4F;\">end</span></span>\n<span
        id=\"cb4-10\">  <span class=\"cf\" style=\"color: #003B4F;\">return</span>
        ol</span>\n<span id=\"cb4-11\"><span class=\"kw\" style=\"color: #003B4F;\">end</span></span></code></pre></div>\n<p>Applied
        to the example above, the filter produces the desired result:</p>\n<blockquote
        class=\"blockquote\">\n<ol type=\"i\">\n<li>primus</li>\n<li>secundus</li>\n</ol>\n<p>Lorem
        ipsum.</p>\n<ol start=\"3\" type=\"i\">\n<li>alius item</li>\n<li>ut custodians
        iens</li>\n</ol>\n</blockquote>\n</section>\n<section id=\"refinements\" class=\"level2\">\n<h2
        class=\"anchored\" data-anchor-id=\"refinements\">Refinements</h2>\n<p>This
        is fairly good already. But what happens if there are <em>other</em> lists
        appearing in the intermediate blocks?</p>\n<pre><code>1. First item\n\n- Nested
        list:\n\n    a. alfa\n    b. bravo\n    c. charlie\n\nWhich list will be continued?\n\n99.
        ???</code></pre>\n<p>With the current state of our filter, the last item will
        be numbered <code>d.</code>, which is most likely not what we want. So let\u2019s
        make the filter sensitive to the list style; only a list with the matching
        style will be continued.</p>\n<p>The style and delimiter of ordered list markers
        can be accessed via the element\u2019s <code>style</code> and <code>delimiter</code>
        property, respectively. We use those values to construct a string key under
        which the start number of the next continuation is stored in table <code>next_starts</code>.</p>\n<div
        class=\"sourceCode\" id=\"cb6\" style=\"background: #f1f3f5;\"><pre class=\"sourceCode
        lua code-with-copy\"><code class=\"sourceCode lua\"><span id=\"cb6-1\"><span
        class=\"kw\" style=\"color: #003B4F;\">local</span> next_starts <span class=\"op\"
        style=\"color: #5E5E5E;\">=</span> <span class=\"op\" style=\"color: #5E5E5E;\">{}</span></span>\n<span
        id=\"cb6-2\"></span>\n<span id=\"cb6-3\"><span class=\"kw\" style=\"color:
        #003B4F;\">function</span> OrderedList <span class=\"op\" style=\"color: #5E5E5E;\">(</span>ol<span
        class=\"op\" style=\"color: #5E5E5E;\">)</span></span>\n<span id=\"cb6-4\">
        \ <span class=\"kw\" style=\"color: #003B4F;\">local</span> key <span class=\"op\"
        style=\"color: #5E5E5E;\">=</span> ol<span class=\"op\" style=\"color: #5E5E5E;\">.</span>style
        <span class=\"op\" style=\"color: #5E5E5E;\">..</span> <span class=\"st\"
        style=\"color: #20794D;\">'|'</span> <span class=\"op\" style=\"color: #5E5E5E;\">..</span>
        ol<span class=\"op\" style=\"color: #5E5E5E;\">.</span>delimiter</span>\n<span
        id=\"cb6-5\">  <span class=\"cf\" style=\"color: #003B4F;\">if</span> ol<span
        class=\"op\" style=\"color: #5E5E5E;\">.</span>start <span class=\"op\" style=\"color:
        #5E5E5E;\">&gt;=</span> <span class=\"dv\" style=\"color: #AD0000;\">90</span>
        <span class=\"cf\" style=\"color: #003B4F;\">then</span></span>\n<span id=\"cb6-6\">
        \   ol<span class=\"op\" style=\"color: #5E5E5E;\">.</span>start <span class=\"op\"
        style=\"color: #5E5E5E;\">=</span> next_starts<span class=\"op\" style=\"color:
        #5E5E5E;\">[</span>key<span class=\"op\" style=\"color: #5E5E5E;\">]</span>
        <span class=\"kw\" style=\"color: #003B4F;\">or</span> <span class=\"dv\"
        style=\"color: #AD0000;\">1</span></span>\n<span id=\"cb6-7\">    next_starts<span
        class=\"op\" style=\"color: #5E5E5E;\">[</span>key<span class=\"op\" style=\"color:
        #5E5E5E;\">]</span> <span class=\"op\" style=\"color: #5E5E5E;\">=</span>
        ol<span class=\"op\" style=\"color: #5E5E5E;\">.</span>start <span class=\"op\"
        style=\"color: #5E5E5E;\">+</span> <span class=\"op\" style=\"color: #5E5E5E;\">#</span>ol<span
        class=\"op\" style=\"color: #5E5E5E;\">.</span>content</span>\n<span id=\"cb6-8\">
        \ <span class=\"cf\" style=\"color: #003B4F;\">else</span></span>\n<span id=\"cb6-9\">
        \   next_starts<span class=\"op\" style=\"color: #5E5E5E;\">[</span>key<span
        class=\"op\" style=\"color: #5E5E5E;\">]</span> <span class=\"op\" style=\"color:
        #5E5E5E;\">=</span> <span class=\"op\" style=\"color: #5E5E5E;\">#</span>ol<span
        class=\"op\" style=\"color: #5E5E5E;\">.</span>content <span class=\"op\"
        style=\"color: #5E5E5E;\">+</span> <span class=\"dv\" style=\"color: #AD0000;\">1</span></span>\n<span
        id=\"cb6-10\">  <span class=\"cf\" style=\"color: #003B4F;\">end</span></span>\n<span
        id=\"cb6-11\"></span>\n<span id=\"cb6-12\">  <span class=\"cf\" style=\"color:
        #003B4F;\">return</span> ol</span>\n<span id=\"cb6-13\"><span class=\"kw\"
        style=\"color: #003B4F;\">end</span></span></code></pre></div>\n<p>This way
        we can keep track of multiple lists, distinguishing between lists by using
        the style of their markers. The above now gets output as</p>\n<blockquote
        class=\"blockquote\">\n<ol type=\"1\">\n<li>First item</li>\n</ol>\n<ul>\n<li><p>Nested
        list:</p>\n<ol type=\"a\">\n<li>alfa</li>\n<li>bravo</li>\n<li>charlie</li>\n</ol></li>\n</ul>\n<p>Which
        list will be continued?</p>\n<ol start=\"2\" type=\"1\">\n<li>???</li>\n</ol>\n</blockquote>\n<p>Just
        what we want. Happy list writing!</p>\n\n\n</section>\n\n ]]></description>\n
        \ <category>Markdown</category>\n  <category>pandoc</category>\n  <category>filter</category>\n
        \ <guid>https://tarleb.com/posts/list-continuation/index.html</guid>\n  <pubDate>Mon,
        28 Nov 2022 00:00:00 GMT</pubDate>\n</item>\n<item>\n  <title>Semantic line
        breaks</title>\n  <dc:creator>Albert Krewinkel</dc:creator>\n  <link>https://tarleb.com/posts/semantic-line-breaks/index.html</link>\n
        \ <description><![CDATA[ \n\n\n\n<p>Line breaks usually have no semantic meaning
        within a Markdown paragraph. However, using line breaks to mark the end of
        a sentece can help with productivity for various reasons.<sup>1</sup> Documents
        with one sentence per line are also called \u201Cventilated prose\u201D, and
        the <a href=\"https://writetheasciidocs.netlify.app\">Write the {Ascii}Docs</a>
        website has a <a href=\"https://writetheasciidocs.netlify.app/ventilated-prose\">good
        article on that topic</a>.</p>\n<p>A question came up in a Slack channel,
        asking whether it was possible to convert existing Markdown docs to this style.
        Naturally, the answer is \u201Cpandoc can do that\u201D, but that isn\u2019t
        obvious here.</p>\n<p>The solution that I came up with is centered around
        pandoc\u2019s <em>SoftBreak</em> AST element. Pandoc uses SoftBreak elements
        internally to mark the place where line breaks occured in the input, but only
        if those breaks should be treated like spaces in most situations. The way
        to make those breaks visible in the output is to call pandoc with <code>--wrap=preserve</code>
        \u2013 only then will a line break in the input result in a break in the output
        in the same location.</p>\n<pre><code>$ printf 'Hello\\npandoc' | pandoc --to=markdown\n\u21D2
        Hello pandoc\n\n$ printf 'Hello\\npandoc' | pandoc --to=markdown --wrap=preserve\n\u21D2
        Hello\n\u21D2 pandoc</code></pre>\n<p>We are going to use SoftBreak for semantic
        line breaks, so the first step is to get rid of the SoftBreak elements created
        during parsing. A Lua filter can do so with</p>\n<div class=\"sourceCode\"
        id=\"cb2\" style=\"background: #f1f3f5;\"><pre class=\"sourceCode lua code-with-copy\"><code
        class=\"sourceCode lua\"><span id=\"cb2-1\"><span class=\"cn\" style=\"color:
        #8f5902;\">S</span>oftBreak <span class=\"op\" style=\"color: #5E5E5E;\">=</span>
        <span class=\"kw\" style=\"color: #003B4F;\">function</span> <span class=\"op\"
        style=\"color: #5E5E5E;\">()</span> <span class=\"cf\" style=\"color: #003B4F;\">return</span>
        pandoc<span class=\"op\" style=\"color: #5E5E5E;\">.</span>Space<span class=\"op\"
        style=\"color: #5E5E5E;\">()</span> <span class=\"kw\" style=\"color: #003B4F;\">end</span></span></code></pre></div>\n<p>Then
        we check for strings that end with a period and are followed by a space. The
        space in such a combination is then turned into a SoftBreak.</p>\n<div class=\"sourceCode\"
        id=\"cb3\" style=\"background: #f1f3f5;\"><pre class=\"sourceCode lua code-with-copy\"><code
        class=\"sourceCode lua\"><span id=\"cb3-1\"><span class=\"kw\" style=\"color:
        #003B4F;\">local</span> <span class=\"kw\" style=\"color: #003B4F;\">function</span>
        semantic_line_feeds <span class=\"op\" style=\"color: #5E5E5E;\">(</span>el<span
        class=\"op\" style=\"color: #5E5E5E;\">)</span></span>\n<span id=\"cb3-2\">
        \ <span class=\"kw\" style=\"color: #003B4F;\">local</span> inlines <span
        class=\"op\" style=\"color: #5E5E5E;\">=</span> el<span class=\"op\" style=\"color:
        #5E5E5E;\">.</span>content</span>\n<span id=\"cb3-3\">  <span class=\"cf\"
        style=\"color: #003B4F;\">for</span> i <span class=\"op\" style=\"color: #5E5E5E;\">=</span>
        <span class=\"dv\" style=\"color: #AD0000;\">2</span><span class=\"op\" style=\"color:
        #5E5E5E;\">,</span> <span class=\"op\" style=\"color: #5E5E5E;\">#</span>inlines
        <span class=\"cf\" style=\"color: #003B4F;\">do</span></span>\n<span id=\"cb3-4\">
        \   <span class=\"cf\" style=\"color: #003B4F;\">if</span> inlines<span class=\"op\"
        style=\"color: #5E5E5E;\">[</span>i<span class=\"op\" style=\"color: #5E5E5E;\">].</span>t
        <span class=\"op\" style=\"color: #5E5E5E;\">==</span> <span class=\"st\"
        style=\"color: #20794D;\">'Space'</span> <span class=\"kw\" style=\"color:
        #003B4F;\">and</span></span>\n<span id=\"cb3-5\">       inlines<span class=\"op\"
        style=\"color: #5E5E5E;\">[</span>i<span class=\"op\" style=\"color: #5E5E5E;\">-</span><span
        class=\"dv\" style=\"color: #AD0000;\">1</span><span class=\"op\" style=\"color:
        #5E5E5E;\">].</span>t <span class=\"op\" style=\"color: #5E5E5E;\">==</span>
        <span class=\"st\" style=\"color: #20794D;\">'Str'</span> <span class=\"kw\"
        style=\"color: #003B4F;\">and</span></span>\n<span id=\"cb3-6\">       inlines<span
        class=\"op\" style=\"color: #5E5E5E;\">[</span>i<span class=\"op\" style=\"color:
        #5E5E5E;\">-</span><span class=\"dv\" style=\"color: #AD0000;\">1</span><span
        class=\"op\" style=\"color: #5E5E5E;\">].</span>text<span class=\"op\" style=\"color:
        #5E5E5E;\">:</span><span class=\"fu\" style=\"color: #4758AB;\">match</span>
        <span class=\"st\" style=\"color: #20794D;\">'%.$'</span> <span class=\"cf\"
        style=\"color: #003B4F;\">then</span></span>\n<span id=\"cb3-7\">      inlines<span
        class=\"op\" style=\"color: #5E5E5E;\">[</span>i<span class=\"op\" style=\"color:
        #5E5E5E;\">]</span> <span class=\"op\" style=\"color: #5E5E5E;\">=</span>
        pandoc<span class=\"op\" style=\"color: #5E5E5E;\">.</span>SoftBreak<span
        class=\"op\" style=\"color: #5E5E5E;\">()</span></span>\n<span id=\"cb3-8\">
        \   <span class=\"cf\" style=\"color: #003B4F;\">end</span></span>\n<span
        id=\"cb3-9\">  <span class=\"cf\" style=\"color: #003B4F;\">end</span></span>\n<span
        id=\"cb3-10\">  <span class=\"cf\" style=\"color: #003B4F;\">return</span>
        el</span>\n<span id=\"cb3-11\"><span class=\"kw\" style=\"color: #003B4F;\">end</span></span>\n<span
        id=\"cb3-12\"></span>\n<span id=\"cb3-13\"><span class=\"cf\" style=\"color:
        #003B4F;\">return</span> <span class=\"op\" style=\"color: #5E5E5E;\">{</span></span>\n<span
        id=\"cb3-14\">  <span class=\"co\" style=\"color: #5E5E5E;\">-- remove soft
        breaks inserted during parsing.</span></span>\n<span id=\"cb3-15\">  <span
        class=\"op\" style=\"color: #5E5E5E;\">{</span><span class=\"cn\" style=\"color:
        #8f5902;\">S</span>oftBreak <span class=\"op\" style=\"color: #5E5E5E;\">=</span>
        <span class=\"kw\" style=\"color: #003B4F;\">function</span> <span class=\"op\"
        style=\"color: #5E5E5E;\">()</span> <span class=\"cf\" style=\"color: #003B4F;\">return</span>
        pandoc<span class=\"op\" style=\"color: #5E5E5E;\">.</span>Space<span class=\"op\"
        style=\"color: #5E5E5E;\">()</span> <span class=\"kw\" style=\"color: #003B4F;\">end</span><span
        class=\"op\" style=\"color: #5E5E5E;\">},</span></span>\n<span id=\"cb3-16\">
        \ <span class=\"co\" style=\"color: #5E5E5E;\">-- insert semantic soft breaks</span></span>\n<span
        id=\"cb3-17\">  <span class=\"op\" style=\"color: #5E5E5E;\">{</span><span
        class=\"cn\" style=\"color: #8f5902;\">P</span>ara <span class=\"op\" style=\"color:
        #5E5E5E;\">=</span> semantic_line_feeds<span class=\"op\" style=\"color: #5E5E5E;\">,</span>
        <span class=\"cn\" style=\"color: #8f5902;\">P</span>lain <span class=\"op\"
        style=\"color: #5E5E5E;\">=</span> semantic_line_feeds<span class=\"op\" style=\"color:
        #5E5E5E;\">},</span></span>\n<span id=\"cb3-18\"><span class=\"op\" style=\"color:
        #5E5E5E;\">}</span></span></code></pre></div>\n<p>This filter can then be
        combined with the <code>--wrap=preserve</code> option to get the desired semantic
        line breaks.</p>\n<div class=\"sourceCode\" id=\"cb4\" style=\"background:
        #f1f3f5;\"><pre class=\"sourceCode bash code-with-copy\"><code class=\"sourceCode
        bash\"><span id=\"cb4-1\"><span class=\"bu\" style=\"color: null;\">printf</span>
        <span class=\"st\" style=\"color: #20794D;\">'This. And that.'</span> <span
        class=\"kw\" style=\"color: #003B4F;\">|</span> <span class=\"ex\" style=\"color:
        null;\">pandoc</span> <span class=\"at\" style=\"color: #657422;\">-L</span>
        semlf.lua <span class=\"at\" style=\"color: #657422;\">--wrap</span><span
        class=\"op\" style=\"color: #5E5E5E;\">=</span>preserve</span>\n<span id=\"cb4-2\"><span
        class=\"ex\" style=\"color: null;\">\u21D2</span> This.</span>\n<span id=\"cb4-3\"><span
        class=\"ex\" style=\"color: null;\">\u21D2</span> And that.</span></code></pre></div>\n<p>There,
        mission accomplished.<sup>2</sup></p>\n\n\n\n\n<div id=\"quarto-appendix\"
        class=\"default\"><section id=\"footnotes\" class=\"footnotes footnotes-end-of-document\"><h2
        class=\"anchored quarto-appendix-heading\">Footnotes</h2>\n\n<ol>\n<li id=\"fn1\"><p>It\u2019s
        not my cup of tea, but I can see why people might like the concept.\u21A9\uFE0E</p></li>\n<li
        id=\"fn2\"><p>There are some cases in which the filter does not give the correct
        result, for example when using American-style punctuation after quotes, or
        when a full sentence is emphasized. It should be possible to fix the filter
        for these edge cases, but it doesn\u2019t seem worth the effort: the presented
        solution should work fine for 95&nbsp;% of all use cases.\u21A9\uFE0E</p></li>\n</ol>\n</section></div>
        ]]></description>\n  <category>Markdown</category>\n  <category>pandoc</category>\n
        \ <guid>https://tarleb.com/posts/semantic-line-breaks/index.html</guid>\n
        \ <pubDate>Sun, 30 Oct 2022 00:00:00 GMT</pubDate>\n</item>\n<item>\n  <title>Install
        pandoc in custom Docker images</title>\n  <dc:creator>Albert Krewinkel</dc:creator>\n
        \ <link>https://tarleb.com/posts/tip-install-in-docker/index.html</link>\n
        \ <description><![CDATA[ \n\n\n\n<p>When pandoc is used in larger pipelines,
        e.g.&nbsp;in combination with <a href=\"https://sphinx-doc.org\">Sphinx</a>,
        it can be useful to pack everything up into one neat container. One option
        is to base the container on a pandoc image like <code>pandoc/core</code>,
        but this may be difficult due to other dependencies. In this case, the easiest
        option is to do this:</p>\n<div class=\"sourceCode\" id=\"cb1\" style=\"background:
        #f1f3f5;\"><pre class=\"sourceCode dockerfile code-with-copy\"><code class=\"sourceCode
        dockerfile\"><span id=\"cb1-1\"><span class=\"kw\" style=\"color: #003B4F;\">COPY</span>
        <span class=\"op\" style=\"color: #5E5E5E;\">--from=pandoc/minimal:2.19.2</span>
        /pandoc /usr/bin/pandoc</span></code></pre></div>\n<p>The snippet, when added
        to a Dockerfile, copies a statically compiled executable from an official
        build to <code>/usr/bin/pandoc</code>. The static pandoc binary can run on
        all Linux distributions, so it does not matter what distro the custom build
        is based on.</p>\n<p>The documentation for the <a href=\"https://hub.docker.com/r/pandoc/minimal\"
        class=\"uri\">https://hub.docker.com/r/pandoc/minimal</a> has more info, including
        a list of supported versions (tags).</p>\n\n\n\n ]]></description>\n  <category>pandoc</category>\n
        \ <category>tip</category>\n  <category>Docker</category>\n  <guid>https://tarleb.com/posts/tip-install-in-docker/index.html</guid>\n
        \ <pubDate>Wed, 07 Sep 2022 00:00:00 GMT</pubDate>\n</item>\n<item>\n  <title>Document
        font</title>\n  <dc:creator>Albert Krewinkel</dc:creator>\n  <link>https://tarleb.com/posts/tip-document-font/index.html</link>\n
        \ <description><![CDATA[ \n\n\n\n<p>Setting the document font this way works
        for ConTeXt, LaTeX, and HTML output. The fonts used in docx or odt output
        must be controlled with the reference document instead.</p>\n<p>The default
        LaTeX engine is pdflatex, which only supports TeX\u2019s own font format and
        cannot use the TrueType or OpenType fonts installed on the system. However,
        XeLaTeX was written with that in mind; switching to that engine allows to
        specify any font available on the system.</p>\n<p>A good source for free fonts
        is the <a href=\"https://fonts.google.com\">Google Fonts</a> repository.</p>\n\n\n\n
        ]]></description>\n  <category>pandoc</category>\n  <category>tip</category>\n
        \ <category>PDF</category>\n  <category>HTML</category>\n  <guid>https://tarleb.com/posts/tip-document-font/index.html</guid>\n
        \ <pubDate>Wed, 07 Sep 2022 00:00:00 GMT</pubDate>\n  <media:content url=\"https://tarleb.com/images/pandoc-logo.png\"
        medium=\"image\" type=\"image/png\" height=\"144\" width=\"144\"/>\n</item>\n<item>\n
        \ <title>Haskell usedata objects</title>\n  <dc:creator>Albert Krewinkel</dc:creator>\n
        \ <link>https://tarleb.com/posts/haskell-lua-objects/index.html</link>\n  <description><![CDATA[
        \n\n\n\n<p>When extending pandoc (or Quarto) with Lua filters, we interact
        with so-called Lua userdata objects. These objects are used to wrap document
        AST elements, making them accessible from Lua scripts. They mostly behave
        like normal Lua tables. This post is intended as a quick overview, listing
        interesting properties of userdata objects.</p>\n<section id=\"userdata-objects\"
        class=\"level2\">\n<h2 class=\"anchored\" data-anchor-id=\"userdata-objects\">Userdata
        objects</h2>\n<p>Haskell-generated userdata objects have three main components:
        a type <em>name</em>, <em>properties</em>, and <em>methods</em>:</p>\n<section
        id=\"type-name\" class=\"level3\">\n<h3 class=\"anchored\" data-anchor-id=\"type-name\">Type
        name</h3>\n<p>The <em>name</em> can be retrieved with <code>pandoc.utils.type</code>.
        It should be treated as a read-only constant. Internally, the <em>name</em>
        is used as a type tag, which is important when retrieving an object from a
        Lua script back into the main program. It is possible to access the name through
        the debug interface, e.g.,</p>\n<div class=\"sourceCode\" id=\"cb1\" style=\"background:
        #f1f3f5;\"><pre class=\"sourceCode lua code-with-copy\"><code class=\"sourceCode
        lua\"><span id=\"cb1-1\"><span class=\"kw\" style=\"color: #003B4F;\">function</span>
        typename <span class=\"op\" style=\"color: #5E5E5E;\">(</span>x<span class=\"op\"
        style=\"color: #5E5E5E;\">)</span></span>\n<span id=\"cb1-2\">  <span class=\"cf\"
        style=\"color: #003B4F;\">return</span> <span class=\"fu\" style=\"color:
        #4758AB;\">debug.getmetatable</span><span class=\"op\" style=\"color: #5E5E5E;\">(</span>x<span
        class=\"op\" style=\"color: #5E5E5E;\">).</span><span class=\"cn\" style=\"color:
        #8f5902;\">__</span>name</span>\n<span id=\"cb1-3\"><span class=\"kw\" style=\"color:
        #003B4F;\">end</span></span></code></pre></div>\n<p>The above <code>typename</code>
        function is actually a bit faster than <code>pandoc.utils.type</code>. It
        can improve performance when accessing this info in a tight loop, but its
        use is not recommended.</p>\n</section>\n<section id=\"properties\" class=\"level3\">\n<h3
        class=\"anchored\" data-anchor-id=\"properties\">Properties</h3>\n<p><em>Properties</em>,
        e.g., the <code>content</code> fields of <em>Para</em> elements, are \u201Clazy\u201D:
        the property value is marshaled to Lua when the property is accessed for the
        first time. We are usually interested in no more than one or two element properties,
        so this is a big performance improvement for most scripts. Lazy properties
        are especially useful with large objects like <em>Pandoc</em>, which would
        otherwise take a long time to marshal and unmarshal with all their child elements.</p>\n<p>However,
        this lazy marshaling is slower if all properties will be accessed anyway.
        If there are performance issues due to lazy properties, then please let me
        know, and I\u2019ll try to find a fix.</p>\n</section>\n<section id=\"methods\"
        class=\"level3\">\n<h3 class=\"anchored\" data-anchor-id=\"methods\">Methods</h3>\n<p><em>Methods</em>
        are wrapped Haskell functions: when calling a method, the arguments are unmarshaled
        back into Haskell objects, which are then passed to the wrapped function and
        processed in Haskell. The computation\u2019s result is then pushed back to
        Lua.</p>\n<p>This may sound weirdly complicated. While <em>it is</em> slow
        for very simple functions (like <code>pandoc.utils.type</code>), it\u2019s
        very fast and convenient for complex methods like <code>Pandoc:walk</code>:
        objects with lazy properties are fast to unmarshal, the main Haskell code
        is fast, and it frees us from having to re-implement Haskell algorithms in
        Lua.</p>\n</section>\n<section id=\"iterating\" class=\"level3\">\n<h3 class=\"anchored\"
        data-anchor-id=\"iterating\">Iterating</h3>\n<p>The properties and methods
        are listed when iterating with <code>pairs</code>. The iteration order is
        defined at compile time, with properties listed first, followed by methods.
        We usually try to keep each of these lists sorted alphabetically, but there
        may be exceptions.</p>\n<p>Calling <code>pairs</code> on a Haskell userdata
        object will always succeed, even if it has neither methods nor properties;
        the result will be the empty iterator in that case.</p>\n</section>\n<section
        id=\"aliases\" class=\"level3\">\n<h3 class=\"anchored\" data-anchor-id=\"aliases\">Aliases</h3>\n<p>Some
        objects also have property aliases: E.g., <code>div.classes</code> is really
        just an alias for <code>div.attr.classes</code>. Both entries point to the
        same list object. Aliases are not included in the iterator generated by <code>pairs</code>.
        See the internals on how to get a hold of them.</p>\n</section>\n<section
        id=\"list-behavior\" class=\"level3\">\n<h3 class=\"anchored\" data-anchor-id=\"list-behavior\">List
        behavior</h3>\n<p>Userdata objects can be made to behave like lists, but iterating
        over those \u201Clists\u201D is comparatively slow. That\u2019s why the only
        object that uses this feature is <code>PANDOC_VERSION</code>: for example,
        we can write <code>PANDOC_VERSION[2] &gt;= 19</code> to check <em>just</em>
        the major version.<sup>1</sup></p>\n</section>\n<section id=\"internals\"
        class=\"level3\">\n<h3 class=\"anchored\" data-anchor-id=\"internals\">Internals</h3>\n<p>Each
        type has a metatable, which defines its behavior. Most users should not need
        to access the metatable, so the <code>getmetatable</code> function returns
        <code>true</code> instead of the actual metatable when called on a Haskell
        userdata object. As we\u2019ve seen with type names, It\u2019s still possible
        to inspect the userdata metatable with the help of <code>debug.getmetatable</code>.</p>\n<p>The
        metatable has four interesting fields: <code>methods</code>, <code>aliases</code>,
        <code>getters</code>, and <code>setters</code>. The fields contain just what
        you\u2019d expect.</p>\n<p>E.g., we can inspect the list of aliases defined
        for Inline objects with</p>\n<div class=\"sourceCode\" id=\"cb2\" style=\"background:
        #f1f3f5;\"><pre class=\"sourceCode lua code-with-copy\"><code class=\"sourceCode
        lua\"><span id=\"cb2-1\"><span class=\"kw\" style=\"color: #003B4F;\">local</span>
        <span class=\"cn\" style=\"color: #8f5902;\">I</span>nlineMT <span class=\"op\"
        style=\"color: #5E5E5E;\">=</span> <span class=\"fu\" style=\"color: #4758AB;\">debug.getmetatable</span><span
        class=\"op\" style=\"color: #5E5E5E;\">(</span>pandoc<span class=\"op\" style=\"color:
        #5E5E5E;\">.</span>Str <span class=\"st\" style=\"color: #20794D;\">''</span><span
        class=\"op\" style=\"color: #5E5E5E;\">)</span></span>\n<span id=\"cb2-2\"><span
        class=\"cf\" style=\"color: #003B4F;\">for</span> name<span class=\"op\" style=\"color:
        #5E5E5E;\">,</span> keys <span class=\"kw\" style=\"color: #003B4F;\">in</span>
        <span class=\"fu\" style=\"color: #4758AB;\">pairs</span><span class=\"op\"
        style=\"color: #5E5E5E;\">(</span><span class=\"cn\" style=\"color: #8f5902;\">I</span>nlineMT<span
        class=\"op\" style=\"color: #5E5E5E;\">.</span>aliases<span class=\"op\" style=\"color:
        #5E5E5E;\">)</span> <span class=\"cf\" style=\"color: #003B4F;\">do</span></span>\n<span
        id=\"cb2-3\">  <span class=\"co\" style=\"color: #5E5E5E;\">-- print the alias
        name and the alias value</span></span>\n<span id=\"cb2-4\">  <span class=\"fu\"
        style=\"color: #4758AB;\">print</span><span class=\"op\" style=\"color: #5E5E5E;\">(</span>name<span
        class=\"op\" style=\"color: #5E5E5E;\">,</span> <span class=\"st\" style=\"color:
        #20794D;\">'is an alias for'</span><span class=\"op\" style=\"color: #5E5E5E;\">,</span>
        <span class=\"fu\" style=\"color: #4758AB;\">table.concat</span><span class=\"op\"
        style=\"color: #5E5E5E;\">(</span>keys<span class=\"op\" style=\"color: #5E5E5E;\">,</span>
        <span class=\"st\" style=\"color: #20794D;\">'.'</span><span class=\"op\"
        style=\"color: #5E5E5E;\">))</span></span>\n<span id=\"cb2-5\"><span class=\"cf\"
        style=\"color: #003B4F;\">end</span></span></code></pre></div>\n<p>Do not
        rely on the internal structure, and do not modify the metatable. Here be dragons.</p>\n\n\n</section>\n</section>\n\n\n<div
        id=\"quarto-appendix\" class=\"default\"><section id=\"footnotes\" class=\"footnotes
        footnotes-end-of-document\"><h2 class=\"anchored quarto-appendix-heading\">Footnotes</h2>\n\n<ol>\n<li
        id=\"fn1\"><p>This feature exists only to ensure backwards compatibility.
        It is better to do comparisons in like <code>PANDOC_VERSION &gt;= '2.19'</code>
        instead.\u21A9\uFE0E</p></li>\n</ol>\n</section></div> ]]></description>\n
        \ <category>Haskell</category>\n  <category>Lua</category>\n  <category>pandoc</category>\n
        \ <category>Quarto</category>\n  <guid>https://tarleb.com/posts/haskell-lua-objects/index.html</guid>\n
        \ <pubDate>Wed, 07 Sep 2022 00:00:00 GMT</pubDate>\n</item>\n<item>\n  <title>Generating
        a sitemap with Quarto</title>\n  <dc:creator>Albert Krewinkel</dc:creator>\n
        \ <link>https://tarleb.com/posts/quarto-sitemap/index.html</link>\n  <description><![CDATA[
        \n\n\n\n<p>Sitemaps are an easy way to list all pages that a search engine
        should crawl and index. Quarto supports the standard, XML based <a href=\"https://www.sitemaps.org/protocol.html\">Sitemap
        Protocol</a>, although that fact is a bit hidden in the docs.</p>\n<p>Quarto
        will automatically produce a sitemap if the website\u2019s URL is given as
        <code>site-url</code> property:</p>\n<div class=\"sourceCode\" id=\"cb1\"
        style=\"background: #f1f3f5;\"><pre class=\"sourceCode yaml code-with-copy\"><code
        class=\"sourceCode yaml\"><span id=\"cb1-1\"><span class=\"fu\" style=\"color:
        #4758AB;\">website</span><span class=\"kw\" style=\"color: #003B4F;\">:</span></span>\n<span
        id=\"cb1-2\"><span class=\"at\" style=\"color: #657422;\">  </span><span class=\"fu\"
        style=\"color: #4758AB;\">title</span><span class=\"kw\" style=\"color: #003B4F;\">:</span><span
        class=\"at\" style=\"color: #657422;\"> tarleb</span></span>\n<span id=\"cb1-3\"><span
        class=\"at\" style=\"color: #657422;\">  </span><span class=\"fu\" style=\"color:
        #4758AB;\">site-url</span><span class=\"kw\" style=\"color: #003B4F;\">:</span><span
        class=\"at\" style=\"color: #657422;\"> </span><span class=\"st\" style=\"color:
        #20794D;\">'https://tarleb.com'</span></span>\n<span id=\"cb1-4\"><span class=\"at\"
        style=\"color: #657422;\">  </span><span class=\"fu\" style=\"color: #4758AB;\">site-path</span><span
        class=\"kw\" style=\"color: #003B4F;\">:</span><span class=\"at\" style=\"color:
        #657422;\"> </span><span class=\"st\" style=\"color: #20794D;\">'/'</span></span></code></pre></div>\n<p>The
        URL will contain a colon <code>:</code>, which is why the YAML value must
        be put in quotes.</p>\n<p>You\u2019ll find the <code>sitemap.xml</code> file
        in your <code>_site</code> folder after re-rendering your pages with <code>quarto
        render</code>.</p>\n\n\n\n ]]></description>\n  <category>quarto</category>\n
        \ <guid>https://tarleb.com/posts/quarto-sitemap/index.html</guid>\n  <pubDate>Wed,
        24 Aug 2022 00:00:00 GMT</pubDate>\n</item>\n<item>\n  <title>Pandoc resources</title>\n
        \ <dc:creator>Albert Krewinkel</dc:creator>\n  <link>https://tarleb.com/posts/pandoc-resources/index.html</link>\n
        \ <description><![CDATA[ \n\n\n\n<p>These are the resources that I\u2019d
        want to have if I was to learn about <a href=\"https://pandoc.org/\">pandoc
        (the universal document converter)</a> all over again:</p>\n<section id=\"installing\"
        class=\"level2\">\n<h2 class=\"anchored\" data-anchor-id=\"installing\">Installing</h2>\n<dl>\n<dt><a
        href=\"https://github.com/jgm/pandoc/releases/latest\">latest release</a></dt>\n<dd>\nThe
        GitHub release page has installers for Windows, macOS, and Linux.\n</dd>\n<dt><a
        href=\"https://hub.docker.com/u/pandoc\">Docker images</a></dt>\n<dd>\n<p>There
        are three types of pandoc Docker images:</p>\n<ul>\n<li><a href=\"https://hub.docker.com/r/pandoc/minimal\">minimal</a>
        \u2013 very small, just the bare pandoc binary;</li>\n<li><a href=\"https://hub.docker.com/r/pandoc/core\">core</a>
        \u2013 includes pandoc-crossref and helpers programs, e.g. those used by pandoc
        for SVG image conversion;</li>\n<li><a href=\"https://hub.docker.com/r/pandoc/latex\">latex</a>
        \u2013 like core, plus TeXLive with all packages required by the default template.</li>\n</ul>\n<p>These
        images can be used as an alternative to a system-wide installation. The image
        repository descriptions also explain how the images can be used.</p>\n</dd>\n</dl>\n</section>\n<section
        id=\"documentation\" class=\"level2\">\n<h2 class=\"anchored\" data-anchor-id=\"documentation\">Documentation</h2>\n<dl>\n<dt><a
        href=\"https://pandoc.org/MANUAL.html\">manual</a></dt>\n<dd>\n<p>The <a href=\"https://pandoc.org/MANUAL.html\">official
        pandoc manual</a>. When in doubt, this should always be the first resource
        to check. It covers all command line options, defaults files settings, format
        extensions, etc.</p>\n<p>Note that this always documents the latest pandoc
        version. If something isn\u2019t working as documented, you may need to update.</p>\n</dd>\n<dt><a
        href=\"https://pandoc.org/faqs.html\">FAQs</a></dt>\n<dd>\nFrequently Asked
        Questions; click on the questions to see the answer.\n</dd>\n<dt><a href=\"https://github.com/jgm/pandoc/wiki\">Wiki</a></dt>\n<dd>\nPandoc\u2019s
        GitHub wiki; contains many additional resources, links, and tips.\n</dd>\n<dt><a
        href=\"https://pandoc.org/lua-filters\">Lua filters</a></dt>\n<dd>\nHow to
        modify a document programmatically; also documents all constructors and utility
        functions exposed by pandoc.\n</dd>\n<dt><a href=\"https://pandoc.org/custom-readers\">Custom
        reader</a></dt>\n<dd>\nInterface that allows to write parsers for otherwise
        unsupported formats.\n</dd>\n<dt><a href=\"https://pandoc.org/custom-writers\">Custom
        writers</a></dt>\n<dd>\nInterface that allows to use pandoc to convert to
        a custom output format.\n</dd>\n<dt>Format-specific documentation</dt>\n<dd>\n<p>The
        support for some formats is tune-able enough to warrant additional documentation.</p>\n<ul>\n<li><a
        href=\"https://pandoc.org/epub.html\">EPUB</a> \u2013 How to make an ebook</li>\n<li><a
        href=\"https://pandoc.org/org.html\">Org</a> \u2013 Emacs Org-mode</li>\n<li><a
        href=\"https://pandoc.org/jats.html\">JATS</a> \u2013 The Journal Article
        Tag Set</li>\n</ul>\n</dd>\n</dl>\n</section>\n<section id=\"getting-help\"
        class=\"level2\">\n<h2 class=\"anchored\" data-anchor-id=\"getting-help\">Getting
        help</h2>\n<p>Please make sure to search the web before posting.</p>\n<dl>\n<dt><a
        href=\"https://groups.google.com/g/pandoc-discuss\">pandoc-discuss</a></dt>\n<dd>\n<p>Official
        pandoc mailing list; usually the best way to get help. The main developers
        and many seasoned users lurk here and answer questions.</p>\n<p>The web interface
        makes it seem like a Google account is required to post, but this isn\u2019t
        so: Write a mail to <span class=\"obfuscated-mail-address\" data-user=\"pandoc-discuss+subscribe\"
        data-domain=\"googlegroups.com\"><em>obfuscated mail address</em></span> to
        subscribe to the list with any mail address.</p>\n</dd>\n<dt><a href=\"https://stackoverflow.com/tags/pandoc/\">StackOverflow</a></dt>\n<dd>\nPost
        here to reach a more programming oriented group of people. Please <em>do not</em>
        cross-post, many people that follow the <a href=\"https://stackoverflow.com/tags/pandoc/\">pandoc
        tag</a> have also subscribed to the mailing list.\n</dd>\n<dt><a href=\"https://tex.stackexchange.com/\">TeX/LaTeX
        Stack Exchange</a></dt>\n<dd>\nThis is a good place to ask for help when pandoc
        is used to generate PDFs via LaTeX. Be sure to include the (relevant parts)
        of the generated LaTeX output in your question, as most people there do not
        use pandoc. Some even seem to actively dislike it, so be prepared.\n</dd>\n</dl>\n</section>\n<section
        id=\"misc\" class=\"level2\">\n<h2 class=\"anchored\" data-anchor-id=\"misc\">Misc</h2>\n<dl>\n<dt><a
        href=\"https://fosstodon.org/@pandoc\">pandoc in the fediverse</a></dt>\n<dd>\nI
        use this Mastodon account to post small tips and updates.\n</dd>\n<dt><a href=\"https://quarto.org\">Quarto</a></dt>\n<dd>\nScientific
        and technical publishing system based on pandoc.\n</dd>\n<dt><a href=\"https://zettlr.com\">Zettlr</a></dt>\n<dd>\nMarkdown
        editor with \u201Czettelkasten\u201D functionality.\n</dd>\n</dl>\n</section>\n<section
        id=\"edits\" class=\"level2\">\n<h2 class=\"anchored\" data-anchor-id=\"edits\">Edits</h2>\n<ul>\n<li><em>2022-12-09</em>:
        Added Mastodon account in favor of Twitter; the account on the latter platform
        is no longer updated.</li>\n</ul>\n\n\n</section>\n\n ]]></description>\n
        \ <category>pandoc</category>\n  <guid>https://tarleb.com/posts/pandoc-resources/index.html</guid>\n
        \ <pubDate>Tue, 23 Aug 2022 00:00:00 GMT</pubDate>\n  <media:content url=\"https://tarleb.com/posts/pandoc-resources/pandoc.png\"
        medium=\"image\" type=\"image/png\" height=\"144\" width=\"144\"/>\n</item>\n<item>\n
        \ <title>Quarto Website with GitHub Actions</title>\n  <dc:creator>Albert
        Krewinkel</dc:creator>\n  <link>https://tarleb.com/posts/quarto-with-gh-pages/index.html</link>\n
        \ <description><![CDATA[ \n\n\n\n<p><a href=\"https://quarto.org\">Quarto</a>
        makes it very easy to publish a website via GitHub Pages: It is as simple
        as running <code>quarto publish gh-pages</code>. Here we explore a slightly
        different method that uses a GitHub Action to publish the website automatically
        every time it is updated.</p>\n<section id=\"classic-github-pages\" class=\"level2\">\n<h2
        class=\"anchored\" data-anchor-id=\"classic-github-pages\">Classic GitHub
        Pages</h2>\n<p>The classic way to publish a website via GitHub pages is to
        maintain a separate branch <code>gh-pages</code>. The branch is used to store
        the rendered HTML pages, and GitHub will publish the branch\u2019s contents
        as website everytime that branch is updated.</p>\n<p>Quarto uses this mechanism
        when called with</p>\n<div class=\"sourceCode\" id=\"cb1\" style=\"background:
        #f1f3f5;\"><pre class=\"sourceCode bash code-with-copy\"><code class=\"sourceCode
        bash\"><span id=\"cb1-1\"><span class=\"ex\" style=\"color: null;\">quarto</span>
        publish gh-pages</span></code></pre></div>\n<p>We can combine this with GitHub
        Actions easily, ensuring that the site is updated every time new content is
        pushed to the main branch.</p>\n<div class=\"sourceCode\" id=\"cb2\" style=\"background:
        #f1f3f5;\"><pre class=\"sourceCode yaml code-with-copy\"><code class=\"sourceCode
        yaml\"><span id=\"cb2-1\"><span class=\"co\" style=\"color: #5E5E5E;\"># file:
        .github/workflows/publish.yml</span></span>\n<span id=\"cb2-2\"><span class=\"fu\"
        style=\"color: #4758AB;\">name</span><span class=\"kw\" style=\"color: #003B4F;\">:</span><span
        class=\"at\" style=\"color: #657422;\"> Publish Website</span></span>\n<span
        id=\"cb2-3\"></span>\n<span id=\"cb2-4\"><span class=\"co\" style=\"color:
        #5E5E5E;\"># Allow one concurrent deployment</span></span>\n<span id=\"cb2-5\"><span
        class=\"fu\" style=\"color: #4758AB;\">concurrency</span><span class=\"kw\"
        style=\"color: #003B4F;\">:</span></span>\n<span id=\"cb2-6\"><span class=\"at\"
        style=\"color: #657422;\">  </span><span class=\"fu\" style=\"color: #4758AB;\">group</span><span
        class=\"kw\" style=\"color: #003B4F;\">:</span><span class=\"at\" style=\"color:
        #657422;\"> </span><span class=\"st\" style=\"color: #20794D;\">\"pages\"</span></span>\n<span
        id=\"cb2-7\"><span class=\"at\" style=\"color: #657422;\">  </span><span class=\"fu\"
        style=\"color: #4758AB;\">cancel-in-progress</span><span class=\"kw\" style=\"color:
        #003B4F;\">:</span><span class=\"at\" style=\"color: #657422;\"> </span><span
        class=\"ch\" style=\"color: #20794D;\">true</span></span>\n<span id=\"cb2-8\"></span>\n<span
        id=\"cb2-9\"><span class=\"fu\" style=\"color: #4758AB;\">on</span><span class=\"kw\"
        style=\"color: #003B4F;\">:</span></span>\n<span id=\"cb2-10\"><span class=\"at\"
        style=\"color: #657422;\">  </span><span class=\"fu\" style=\"color: #4758AB;\">push</span><span
        class=\"kw\" style=\"color: #003B4F;\">:</span></span>\n<span id=\"cb2-11\"><span
        class=\"at\" style=\"color: #657422;\">    </span><span class=\"fu\" style=\"color:
        #4758AB;\">branches</span><span class=\"kw\" style=\"color: #003B4F;\">:</span><span
        class=\"at\" style=\"color: #657422;\"> </span><span class=\"kw\" style=\"color:
        #003B4F;\">[</span><span class=\"st\" style=\"color: #20794D;\">'main'</span><span
        class=\"kw\" style=\"color: #003B4F;\">]</span></span>\n<span id=\"cb2-12\"></span>\n<span
        id=\"cb2-13\"><span class=\"fu\" style=\"color: #4758AB;\">jobs</span><span
        class=\"kw\" style=\"color: #003B4F;\">:</span></span>\n<span id=\"cb2-14\"><span
        class=\"at\" style=\"color: #657422;\">  </span><span class=\"fu\" style=\"color:
        #4758AB;\">quarto-publish</span><span class=\"kw\" style=\"color: #003B4F;\">:</span></span>\n<span
        id=\"cb2-15\"><span class=\"at\" style=\"color: #657422;\">    </span><span
        class=\"fu\" style=\"color: #4758AB;\">name</span><span class=\"kw\" style=\"color:
        #003B4F;\">:</span><span class=\"at\" style=\"color: #657422;\"> Publish with
        Quarto</span></span>\n<span id=\"cb2-16\"><span class=\"at\" style=\"color:
        #657422;\">    </span><span class=\"fu\" style=\"color: #4758AB;\">runs-on</span><span
        class=\"kw\" style=\"color: #003B4F;\">:</span><span class=\"at\" style=\"color:
        #657422;\"> ubuntu-latest</span></span>\n<span id=\"cb2-17\"><span class=\"at\"
        style=\"color: #657422;\">    </span><span class=\"fu\" style=\"color: #4758AB;\">steps</span><span
        class=\"kw\" style=\"color: #003B4F;\">:</span></span>\n<span id=\"cb2-18\"><span
        class=\"at\" style=\"color: #657422;\">      </span><span class=\"kw\" style=\"color:
        #003B4F;\">-</span><span class=\"at\" style=\"color: #657422;\"> </span><span
        class=\"fu\" style=\"color: #4758AB;\">name</span><span class=\"kw\" style=\"color:
        #003B4F;\">:</span><span class=\"at\" style=\"color: #657422;\"> Checkout
        repository</span></span>\n<span id=\"cb2-19\"><span class=\"at\" style=\"color:
        #657422;\">        </span><span class=\"fu\" style=\"color: #4758AB;\">uses</span><span
        class=\"kw\" style=\"color: #003B4F;\">:</span><span class=\"at\" style=\"color:
        #657422;\"> actions/checkout@v3</span></span>\n<span id=\"cb2-20\"><span class=\"at\"
        style=\"color: #657422;\">      </span><span class=\"kw\" style=\"color: #003B4F;\">-</span><span
        class=\"at\" style=\"color: #657422;\"> </span><span class=\"fu\" style=\"color:
        #4758AB;\">name</span><span class=\"kw\" style=\"color: #003B4F;\">:</span><span
        class=\"at\" style=\"color: #657422;\"> Install Quarto</span></span>\n<span
        id=\"cb2-21\"><span class=\"at\" style=\"color: #657422;\">        </span><span
        class=\"fu\" style=\"color: #4758AB;\">uses</span><span class=\"kw\" style=\"color:
        #003B4F;\">:</span><span class=\"at\" style=\"color: #657422;\"> quarto-dev/quarto-actions/setup@v2</span></span>\n<span
        id=\"cb2-22\"><span class=\"at\" style=\"color: #657422;\">      </span><span
        class=\"kw\" style=\"color: #003B4F;\">-</span><span class=\"at\" style=\"color:
        #657422;\"> </span><span class=\"fu\" style=\"color: #4758AB;\">name</span><span
        class=\"kw\" style=\"color: #003B4F;\">:</span><span class=\"at\" style=\"color:
        #657422;\"> Publish to GitHub Pages</span></span>\n<span id=\"cb2-23\"><span
        class=\"at\" style=\"color: #657422;\">        </span><span class=\"fu\" style=\"color:
        #4758AB;\">uses</span><span class=\"kw\" style=\"color: #003B4F;\">:</span><span
        class=\"at\" style=\"color: #657422;\"> quarto-dev/quarto-actions/publish@v2</span></span>\n<span
        id=\"cb2-24\"><span class=\"at\" style=\"color: #657422;\">        </span><span
        class=\"fu\" style=\"color: #4758AB;\">with</span><span class=\"kw\" style=\"color:
        #003B4F;\">:</span></span>\n<span id=\"cb2-25\"><span class=\"at\" style=\"color:
        #657422;\">          </span><span class=\"fu\" style=\"color: #4758AB;\">target</span><span
        class=\"kw\" style=\"color: #003B4F;\">:</span><span class=\"at\" style=\"color:
        #657422;\"> gh-pages</span></span></code></pre></div>\n<p>The <code>quart-dev/quart-actions/publish</code>
        action calls <code>quarto publish</code> internally. This is short, to the
        point, and won\u2019t interfere with local calls to <code>quarto publish gh-pages</code>.</p>\n</section>\n<section
        id=\"actions-only-pages-beta\" class=\"level2\">\n<h2 class=\"anchored\" data-anchor-id=\"actions-only-pages-beta\">Actions-only
        Pages (Beta)</h2>\n<p>GitHub recently added support for GitHub Pages that
        do not require an extra <code>gh-pages</code> branch. Instead, the website
        is compiled and pushed directly from an action.</p>\n<p>This takes slightly
        more code to set up, as the action must be granted the necessary permissions.
        However, it is still fairly short and quick to do.</p>\n<div class=\"sourceCode\"
        id=\"cb3\" style=\"background: #f1f3f5;\"><pre class=\"sourceCode yaml code-with-copy\"><code
        class=\"sourceCode yaml\"><span id=\"cb3-1\"><span class=\"co\" style=\"color:
        #5E5E5E;\"># file: .github/workflows/publish.yml</span></span>\n<span id=\"cb3-2\"><span
        class=\"fu\" style=\"color: #4758AB;\">name</span><span class=\"kw\" style=\"color:
        #003B4F;\">:</span><span class=\"at\" style=\"color: #657422;\"> Publish Website</span></span>\n<span
        id=\"cb3-3\"></span>\n<span id=\"cb3-4\"><span class=\"co\" style=\"color:
        #5E5E5E;\"># Allow one concurrent deployment</span></span>\n<span id=\"cb3-5\"><span
        class=\"fu\" style=\"color: #4758AB;\">concurrency</span><span class=\"kw\"
        style=\"color: #003B4F;\">:</span></span>\n<span id=\"cb3-6\"><span class=\"at\"
        style=\"color: #657422;\">  </span><span class=\"fu\" style=\"color: #4758AB;\">group</span><span
        class=\"kw\" style=\"color: #003B4F;\">:</span><span class=\"at\" style=\"color:
        #657422;\"> </span><span class=\"st\" style=\"color: #20794D;\">\"pages\"</span></span>\n<span
        id=\"cb3-7\"><span class=\"at\" style=\"color: #657422;\">  </span><span class=\"fu\"
        style=\"color: #4758AB;\">cancel-in-progress</span><span class=\"kw\" style=\"color:
        #003B4F;\">:</span><span class=\"at\" style=\"color: #657422;\"> </span><span
        class=\"ch\" style=\"color: #20794D;\">true</span></span>\n<span id=\"cb3-8\"></span>\n<span
        id=\"cb3-9\"><span class=\"co\" style=\"color: #5E5E5E;\"># Sets permissions
        of the GITHUB_TOKEN to allow deployment to GitHub Pages</span></span>\n<span
        id=\"cb3-10\"><span class=\"fu\" style=\"color: #4758AB;\">permissions</span><span
        class=\"kw\" style=\"color: #003B4F;\">:</span></span>\n<span id=\"cb3-11\"><span
        class=\"at\" style=\"color: #657422;\">  </span><span class=\"fu\" style=\"color:
        #4758AB;\">contents</span><span class=\"kw\" style=\"color: #003B4F;\">:</span><span
        class=\"at\" style=\"color: #657422;\"> read</span></span>\n<span id=\"cb3-12\"><span
        class=\"at\" style=\"color: #657422;\">  </span><span class=\"fu\" style=\"color:
        #4758AB;\">pages</span><span class=\"kw\" style=\"color: #003B4F;\">:</span><span
        class=\"at\" style=\"color: #657422;\"> write</span></span>\n<span id=\"cb3-13\"><span
        class=\"at\" style=\"color: #657422;\">  </span><span class=\"fu\" style=\"color:
        #4758AB;\">id-token</span><span class=\"kw\" style=\"color: #003B4F;\">:</span><span
        class=\"at\" style=\"color: #657422;\"> write</span></span>\n<span id=\"cb3-14\"></span>\n<span
        id=\"cb3-15\"><span class=\"fu\" style=\"color: #4758AB;\">on</span><span
        class=\"kw\" style=\"color: #003B4F;\">:</span></span>\n<span id=\"cb3-16\"><span
        class=\"at\" style=\"color: #657422;\">  </span><span class=\"fu\" style=\"color:
        #4758AB;\">push</span><span class=\"kw\" style=\"color: #003B4F;\">:</span></span>\n<span
        id=\"cb3-17\"><span class=\"at\" style=\"color: #657422;\">    </span><span
        class=\"fu\" style=\"color: #4758AB;\">branches</span><span class=\"kw\" style=\"color:
        #003B4F;\">:</span><span class=\"at\" style=\"color: #657422;\"> </span><span
        class=\"kw\" style=\"color: #003B4F;\">[</span><span class=\"st\" style=\"color:
        #20794D;\">'main'</span><span class=\"kw\" style=\"color: #003B4F;\">]</span></span>\n<span
        id=\"cb3-18\"></span>\n<span id=\"cb3-19\"><span class=\"fu\" style=\"color:
        #4758AB;\">jobs</span><span class=\"kw\" style=\"color: #003B4F;\">:</span></span>\n<span
        id=\"cb3-20\"><span class=\"at\" style=\"color: #657422;\">  </span><span
        class=\"fu\" style=\"color: #4758AB;\">quarto</span><span class=\"kw\" style=\"color:
        #003B4F;\">:</span></span>\n<span id=\"cb3-21\"><span class=\"at\" style=\"color:
        #657422;\">    </span><span class=\"fu\" style=\"color: #4758AB;\">runs-on</span><span
        class=\"kw\" style=\"color: #003B4F;\">:</span><span class=\"at\" style=\"color:
        #657422;\"> ubuntu-latest</span></span>\n<span id=\"cb3-22\"><span class=\"at\"
        style=\"color: #657422;\">    </span><span class=\"fu\" style=\"color: #4758AB;\">environment</span><span
        class=\"kw\" style=\"color: #003B4F;\">:</span></span>\n<span id=\"cb3-23\"><span
        class=\"at\" style=\"color: #657422;\">      </span><span class=\"fu\" style=\"color:
        #4758AB;\">name</span><span class=\"kw\" style=\"color: #003B4F;\">:</span><span
        class=\"at\" style=\"color: #657422;\"> github-pages</span></span>\n<span
        id=\"cb3-24\"><span class=\"at\" style=\"color: #657422;\">      </span><span
        class=\"fu\" style=\"color: #4758AB;\">url</span><span class=\"kw\" style=\"color:
        #003B4F;\">:</span><span class=\"at\" style=\"color: #657422;\"> ${{ steps.deployment.outputs.page_url
        }}</span></span>\n<span id=\"cb3-25\"><span class=\"at\" style=\"color: #657422;\">
        \   </span><span class=\"fu\" style=\"color: #4758AB;\">steps</span><span
        class=\"kw\" style=\"color: #003B4F;\">:</span></span>\n<span id=\"cb3-26\"><span
        class=\"at\" style=\"color: #657422;\">      </span><span class=\"kw\" style=\"color:
        #003B4F;\">-</span><span class=\"at\" style=\"color: #657422;\"> </span><span
        class=\"fu\" style=\"color: #4758AB;\">name</span><span class=\"kw\" style=\"color:
        #003B4F;\">:</span><span class=\"at\" style=\"color: #657422;\"> Checkout
        repository</span></span>\n<span id=\"cb3-27\"><span class=\"at\" style=\"color:
        #657422;\">        </span><span class=\"fu\" style=\"color: #4758AB;\">uses</span><span
        class=\"kw\" style=\"color: #003B4F;\">:</span><span class=\"at\" style=\"color:
        #657422;\"> actions/checkout@v3</span></span>\n<span id=\"cb3-28\"><span class=\"at\"
        style=\"color: #657422;\">      </span><span class=\"kw\" style=\"color: #003B4F;\">-</span><span
        class=\"at\" style=\"color: #657422;\"> </span><span class=\"fu\" style=\"color:
        #4758AB;\">name</span><span class=\"kw\" style=\"color: #003B4F;\">:</span><span
        class=\"at\" style=\"color: #657422;\"> Install Quarto</span></span>\n<span
        id=\"cb3-29\"><span class=\"at\" style=\"color: #657422;\">        </span><span
        class=\"fu\" style=\"color: #4758AB;\">uses</span><span class=\"kw\" style=\"color:
        #003B4F;\">:</span><span class=\"at\" style=\"color: #657422;\"> quarto-dev/quarto-actions/setup@v2</span></span>\n<span
        id=\"cb3-30\"><span class=\"at\" style=\"color: #657422;\">      </span><span
        class=\"kw\" style=\"color: #003B4F;\">-</span><span class=\"at\" style=\"color:
        #657422;\"> </span><span class=\"fu\" style=\"color: #4758AB;\">name</span><span
        class=\"kw\" style=\"color: #003B4F;\">:</span><span class=\"at\" style=\"color:
        #657422;\"> Setup Pages</span></span>\n<span id=\"cb3-31\"><span class=\"at\"
        style=\"color: #657422;\">        </span><span class=\"fu\" style=\"color:
        #4758AB;\">uses</span><span class=\"kw\" style=\"color: #003B4F;\">:</span><span
        class=\"at\" style=\"color: #657422;\"> actions/configure-pages@v1</span></span>\n<span
        id=\"cb3-32\"><span class=\"at\" style=\"color: #657422;\">      </span><span
        class=\"kw\" style=\"color: #003B4F;\">-</span><span class=\"at\" style=\"color:
        #657422;\"> </span><span class=\"fu\" style=\"color: #4758AB;\">name</span><span
        class=\"kw\" style=\"color: #003B4F;\">:</span><span class=\"at\" style=\"color:
        #657422;\"> Render Website</span></span>\n<span id=\"cb3-33\"><span class=\"at\"
        style=\"color: #657422;\">        </span><span class=\"fu\" style=\"color:
        #4758AB;\">run</span><span class=\"kw\" style=\"color: #003B4F;\">:</span><span
        class=\"at\" style=\"color: #657422;\"> quarto render</span></span>\n<span
        id=\"cb3-34\"><span class=\"at\" style=\"color: #657422;\">      </span><span
        class=\"kw\" style=\"color: #003B4F;\">-</span><span class=\"at\" style=\"color:
        #657422;\"> </span><span class=\"fu\" style=\"color: #4758AB;\">name</span><span
        class=\"kw\" style=\"color: #003B4F;\">:</span><span class=\"at\" style=\"color:
        #657422;\"> Upload artifact</span></span>\n<span id=\"cb3-35\"><span class=\"at\"
        style=\"color: #657422;\">        </span><span class=\"fu\" style=\"color:
        #4758AB;\">uses</span><span class=\"kw\" style=\"color: #003B4F;\">:</span><span
        class=\"at\" style=\"color: #657422;\"> actions/upload-pages-artifact@v1</span></span>\n<span
        id=\"cb3-36\"><span class=\"at\" style=\"color: #657422;\">        </span><span
        class=\"fu\" style=\"color: #4758AB;\">with</span><span class=\"kw\" style=\"color:
        #003B4F;\">:</span></span>\n<span id=\"cb3-37\"><span class=\"at\" style=\"color:
        #657422;\">          </span><span class=\"fu\" style=\"color: #4758AB;\">path</span><span
        class=\"kw\" style=\"color: #003B4F;\">:</span><span class=\"at\" style=\"color:
        #657422;\"> </span><span class=\"st\" style=\"color: #20794D;\">'_site'</span></span>\n<span
        id=\"cb3-38\"><span class=\"at\" style=\"color: #657422;\">      </span><span
        class=\"kw\" style=\"color: #003B4F;\">-</span><span class=\"at\" style=\"color:
        #657422;\"> </span><span class=\"fu\" style=\"color: #4758AB;\">name</span><span
        class=\"kw\" style=\"color: #003B4F;\">:</span><span class=\"at\" style=\"color:
        #657422;\"> Deploy to GitHub Pages</span></span>\n<span id=\"cb3-39\"><span
        class=\"at\" style=\"color: #657422;\">        </span><span class=\"fu\" style=\"color:
        #4758AB;\">id</span><span class=\"kw\" style=\"color: #003B4F;\">:</span><span
        class=\"at\" style=\"color: #657422;\"> deployment</span></span>\n<span id=\"cb3-40\"><span
        class=\"at\" style=\"color: #657422;\">        </span><span class=\"fu\" style=\"color:
        #4758AB;\">uses</span><span class=\"kw\" style=\"color: #003B4F;\">:</span><span
        class=\"at\" style=\"color: #657422;\"> actions/deploy-pages@main</span></span></code></pre></div>\n<p>Now
        we must change the setting to use the new publishing workflow:</p>\n<p>Under
        <em>Settings</em> \u2192 <em>Pages</em> \u2192 <em>Build and deployment</em>
        the source must be switched to \u201CGitHub Action\u201D:</p>\n<div class=\"quarto-figure
        quarto-figure-center\">\n<figure class=\"figure\">\n<p><img src=\"https://tarleb.com/posts/quarto-with-gh-pages/pages-settings.png\"
        class=\"img-fluid figure-img\"></p>\n<p></p><figcaption class=\"figure-caption\">Required
        setting to enable the new method</figcaption><p></p>\n</figure>\n</div>\n<p>The
        <code>gh-pages</code> branch is no longer needed and can be deleted.</p>\n</section>\n<section
        id=\"trade-offs\" class=\"level2\">\n<h2 class=\"anchored\" data-anchor-id=\"trade-offs\">Trade-offs</h2>\n<p>The
        branch-based method for GitHub pages always felt slightly inelegant. I prefer
        the new method, as it does not require an extra branch and feels much cleaner.
        We lose the ability to update the website via <code>quarto publish</code>,
        but as I usually rely on GitHub Actions to perform the updates, it doesn\u2019t
        affect me much: <code>git push</code> has the same effect. However, it seems
        important to be aware of this trade-off.</p>\n\n\n</section>\n\n ]]></description>\n
        \ <category>quarto</category>\n  <guid>https://tarleb.com/posts/quarto-with-gh-pages/index.html</guid>\n
        \ <pubDate>Mon, 08 Aug 2022 00:00:00 GMT</pubDate>\n  <media:content url=\"https://tarleb.com/posts/quarto-with-gh-pages/pages-settings.png\"
        medium=\"image\" type=\"image/png\" height=\"93\" width=\"144\"/>\n</item>\n<item>\n
        \ <title>Santa\u2019s Little Lua Scripts</title>\n  <dc:creator>Albert Krewinkel</dc:creator>\n
        \ <link>https://tarleb.com/posts/santas-little-lua-scripts/index.html</link>\n
        \ <description><![CDATA[ \n\n\n\n<p>Santa sighted deeply as worry and uncertainty
        gave way, leaving a feeling of relieve and accomplishment. The year was one
        of the worst he\u2019d seen so far. Large numbers of his helpers were moving
        from the North Pole to Antarctica to satisfy their ambient temperature preferences.
        There would be many telecommuting Elves this year, and each helper enjoyed
        additional autonomy. Tying everything together was a challenge. But he had
        succeeded: the wishes processing program was finished, and the elves would
        be able to help Santa from the comfort of their new homes.</p>\n<section id=\"wishes\"
        class=\"level2\">\n<h2 class=\"anchored\" data-anchor-id=\"wishes\">Wishes</h2>\n<p>The
        part of the wishes system that Santa had been working on was focused on classic
        toys: wooden bricks, dolls, and train sets.</p>\n<div class=\"sourceCode\"
        id=\"cb1\" style=\"background: #f1f3f5;\"><pre class=\"sourceCode haskell
        code-with-copy\"><code class=\"sourceCode haskell\"><span id=\"cb1-1\"><span
        class=\"kw\" style=\"color: #003B4F;\">data</span> <span class=\"dt\" style=\"color:
        #AD0000;\">Toy</span> <span class=\"ot\" style=\"color: #003B4F;\">=</span>
        <span class=\"dt\" style=\"color: #AD0000;\">Bricks</span> <span class=\"op\"
        style=\"color: #5E5E5E;\">|</span> <span class=\"dt\" style=\"color: #AD0000;\">TrainSet</span>
        <span class=\"op\" style=\"color: #5E5E5E;\">|</span> <span class=\"dt\" style=\"color:
        #AD0000;\">Doll</span> <span class=\"kw\" style=\"color: #003B4F;\">deriving</span>
        <span class=\"dt\" style=\"color: #AD0000;\">Show</span></span></code></pre></div>\n<p>The
        system also kept track of basic data about the children:</p>\n<div class=\"sourceCode\"
        id=\"cb2\" style=\"background: #f1f3f5;\"><pre class=\"sourceCode haskell
        code-with-copy\"><code class=\"sourceCode haskell\"><span id=\"cb2-1\"><span
        class=\"kw\" style=\"color: #003B4F;\">data</span> <span class=\"dt\" style=\"color:
        #AD0000;\">Behavior</span> <span class=\"ot\" style=\"color: #003B4F;\">=</span>
        <span class=\"dt\" style=\"color: #AD0000;\">Nice</span> <span class=\"op\"
        style=\"color: #5E5E5E;\">|</span> <span class=\"dt\" style=\"color: #AD0000;\">Naughty</span>
        <span class=\"kw\" style=\"color: #003B4F;\">deriving</span> (<span class=\"dt\"
        style=\"color: #AD0000;\">Eq</span>, <span class=\"dt\" style=\"color: #AD0000;\">Show</span>)</span>\n<span
        id=\"cb2-2\"></span>\n<span id=\"cb2-3\"><span class=\"kw\" style=\"color:
        #003B4F;\">data</span> <span class=\"dt\" style=\"color: #AD0000;\">Child</span>
        <span class=\"ot\" style=\"color: #003B4F;\">=</span> <span class=\"dt\" style=\"color:
        #AD0000;\">Child</span></span>\n<span id=\"cb2-4\">  {<span class=\"ot\" style=\"color:
        #003B4F;\"> childName     ::</span> <span class=\"dt\" style=\"color: #AD0000;\">Text</span></span>\n<span
        id=\"cb2-5\">  ,<span class=\"ot\" style=\"color: #003B4F;\"> childBehavior
        ::</span> <span class=\"dt\" style=\"color: #AD0000;\">Behavior</span></span>\n<span
        id=\"cb2-6\">  } <span class=\"kw\" style=\"color: #003B4F;\">deriving</span>
        (<span class=\"dt\" style=\"color: #AD0000;\">Show</span>)</span></code></pre></div>\n<p>Children
        and toys were tied together in a wish.</p>\n<div class=\"sourceCode\" id=\"cb3\"
        style=\"background: #f1f3f5;\"><pre class=\"sourceCode haskell code-with-copy\"><code
        class=\"sourceCode haskell\"><span id=\"cb3-1\"><span class=\"kw\" style=\"color:
        #003B4F;\">data</span> <span class=\"dt\" style=\"color: #AD0000;\">Wish</span>
        <span class=\"ot\" style=\"color: #003B4F;\">=</span> <span class=\"dt\" style=\"color:
        #AD0000;\">Wish</span></span>\n<span id=\"cb3-2\">  {<span class=\"ot\" style=\"color:
        #003B4F;\"> wishingChild ::</span> <span class=\"dt\" style=\"color: #AD0000;\">Child</span></span>\n<span
        id=\"cb3-3\">  ,<span class=\"ot\" style=\"color: #003B4F;\"> wishedToy    ::</span>
        <span class=\"dt\" style=\"color: #AD0000;\">Toy</span></span>\n<span id=\"cb3-4\">
        \ } <span class=\"kw\" style=\"color: #003B4F;\">deriving</span> (<span class=\"dt\"
        style=\"color: #AD0000;\">Show</span>)</span></code></pre></div>\n<p>It was
        most elegant. The problem for Santa was that the Elves, being independent
        and autonomous workers, needed to access and process the data in very custom
        ways. Unfortunately for him, very few Elves had a Haskell build environment
        installed, so he had to distribute the binary. Writing a completely custom
        processing language seemed like an enormous rabbit hole.</p>\n</section>\n<section
        id=\"lua\" class=\"level2\">\n<h2 class=\"anchored\" data-anchor-id=\"lua\">Lua</h2>\n<p>Fortunately,
        Santa had a better idea: <a href=\"https://lua.org/\">Lua</a>, an embeddable
        scripting language. He had been using it for some projects<sup>1</sup> and
        also made use of it in <a href=\"https://pandoc.org/lua-filters.html\">pandoc</a>,
        which he used to answer his mails. Santa would just need to expose the relevant
        parts of the Haskell system, so the Elves could access and script it as their
        hearts desired. He looked for a library, found <a href=\"https://github.com/hslua/hslua\">HsLua</a>,
        and got to work.</p>\n</section>\n<section id=\"exposing-data\" class=\"level2\">\n<h2
        class=\"anchored\" data-anchor-id=\"exposing-data\">Exposing data</h2>\n<p>Lua
        has a simple, yet powerful, stack-based <a href=\"https://www.lua.org/manual/5.4/manual.html#4\">API</a>.
        The first step towards exposing Haskell data was to push them to the Lua stack.
        Keeping things simple, Santa chose strings to represent toys:</p>\n<div class=\"sourceCode\"
        id=\"cb4\" style=\"background: #f1f3f5;\"><pre class=\"sourceCode haskell
        code-with-copy\"><code class=\"sourceCode haskell\"><span id=\"cb4-1\"><span
        class=\"ot\" style=\"color: #003B4F;\">pushToy ::</span> <span class=\"dt\"
        style=\"color: #AD0000;\">Toy</span> <span class=\"ot\" style=\"color: #003B4F;\">-&gt;</span>
        <span class=\"dt\" style=\"color: #AD0000;\">Lua</span> ()</span>\n<span id=\"cb4-2\">pushToy
        <span class=\"ot\" style=\"color: #003B4F;\">=</span> pushString <span class=\"op\"
        style=\"color: #5E5E5E;\">.</span> <span class=\"fu\" style=\"color: #4758AB;\">show</span></span></code></pre></div>\n<p>Lua
        offers only a single construct to structure data: tables. So that\u2019s what
        Child and Wish were represented with.</p>\n<div class=\"sourceCode\" id=\"cb5\"
        style=\"background: #f1f3f5;\"><pre class=\"sourceCode haskell code-with-copy\"><code
        class=\"sourceCode haskell\"><span id=\"cb5-1\"><span class=\"ot\" style=\"color:
        #003B4F;\">pushChild ::</span> <span class=\"dt\" style=\"color: #AD0000;\">Child</span>
        <span class=\"ot\" style=\"color: #003B4F;\">-&gt;</span> <span class=\"dt\"
        style=\"color: #AD0000;\">Lua</span> ()</span>\n<span id=\"cb5-2\">pushChild
        (<span class=\"dt\" style=\"color: #AD0000;\">Child</span> name behavior)
        <span class=\"ot\" style=\"color: #003B4F;\">=</span> <span class=\"kw\" style=\"color:
        #003B4F;\">do</span></span>\n<span id=\"cb5-3\">  <span class=\"co\" style=\"color:
        #5E5E5E;\">-- create new Lua table on the stack</span></span>\n<span id=\"cb5-4\">
        \ newtable</span>\n<span id=\"cb5-5\">  <span class=\"co\" style=\"color:
        #5E5E5E;\">-- push string to stack</span></span>\n<span id=\"cb5-6\">  pushText
        name</span>\n<span id=\"cb5-7\">  <span class=\"co\" style=\"color: #5E5E5E;\">--
        table now in position 2; assign string to field in table</span></span>\n<span
        id=\"cb5-8\">  setfield (nth <span class=\"dv\" style=\"color: #AD0000;\">2</span>)
        <span class=\"st\" style=\"color: #20794D;\">\"name\"</span></span>\n<span
        id=\"cb5-9\"></span>\n<span id=\"cb5-10\">  <span class=\"co\" style=\"color:
        #5E5E5E;\">-- push boolean to stack</span></span>\n<span id=\"cb5-11\">  pushBool
        (behavior <span class=\"op\" style=\"color: #5E5E5E;\">==</span> <span class=\"dt\"
        style=\"color: #AD0000;\">Nice</span>)</span>\n<span id=\"cb5-12\">  setfield
        (nth <span class=\"dv\" style=\"color: #AD0000;\">2</span>) <span class=\"st\"
        style=\"color: #20794D;\">\"nice\"</span></span>\n<span id=\"cb5-13\"></span>\n<span
        id=\"cb5-14\"><span class=\"ot\" style=\"color: #003B4F;\">pushWish ::</span>
        <span class=\"dt\" style=\"color: #AD0000;\">Wish</span> <span class=\"ot\"
        style=\"color: #003B4F;\">-&gt;</span> <span class=\"dt\" style=\"color: #AD0000;\">Lua</span>
        ()</span>\n<span id=\"cb5-15\">pushWish (<span class=\"dt\" style=\"color:
        #AD0000;\">Wish</span> child toy) <span class=\"ot\" style=\"color: #003B4F;\">=</span>
        <span class=\"kw\" style=\"color: #003B4F;\">do</span></span>\n<span id=\"cb5-16\">
        \ newtable</span>\n<span id=\"cb5-17\">  pushChild child</span>\n<span id=\"cb5-18\">
        \ setfield (nth <span class=\"dv\" style=\"color: #AD0000;\">2</span>) <span
        class=\"st\" style=\"color: #20794D;\">\"child\"</span></span>\n<span id=\"cb5-19\">
        \ pushToy toy</span>\n<span id=\"cb5-20\">  setfield (nth <span class=\"dv\"
        style=\"color: #AD0000;\">2</span>) <span class=\"st\" style=\"color: #20794D;\">\"toy\"</span></span></code></pre></div>\n</section>\n<section
        id=\"running-scripts\" class=\"level2\">\n<h2 class=\"anchored\" data-anchor-id=\"running-scripts\">Running
        scripts</h2>\n<p>Santa\u2019s goal for now was to allow his Elves to filter
        the list of wishes so each finds the ones relevant to them. For example, if
        an Elf only cares about wishes for train sets from children who were nice,
        then they should be able to use a script to filter those wishes out.</p>\n<div
        class=\"sourceCode\" id=\"cb6\" style=\"background: #f1f3f5;\"><pre class=\"sourceCode
        lua code-with-copy\"><code class=\"sourceCode lua\"><span id=\"cb6-1\"><span
        class=\"cf\" style=\"color: #003B4F;\">return</span> <span class=\"kw\" style=\"color:
        #003B4F;\">function</span> <span class=\"op\" style=\"color: #5E5E5E;\">(</span>wish<span
        class=\"op\" style=\"color: #5E5E5E;\">)</span></span>\n<span id=\"cb6-2\">
        \ <span class=\"cf\" style=\"color: #003B4F;\">return</span> wish<span class=\"op\"
        style=\"color: #5E5E5E;\">.</span>child<span class=\"op\" style=\"color: #5E5E5E;\">.</span>nice
        <span class=\"kw\" style=\"color: #003B4F;\">and</span></span>\n<span id=\"cb6-3\">
        \   wish<span class=\"op\" style=\"color: #5E5E5E;\">.</span>toy <span class=\"op\"
        style=\"color: #5E5E5E;\">==</span> <span class=\"st\" style=\"color: #20794D;\">'TrainSet'</span></span>\n<span
        id=\"cb6-4\"><span class=\"kw\" style=\"color: #003B4F;\">end</span></span></code></pre></div>\n<p>The
        script returns a (lambda) function that serves as a predicate for wishes.
        The function can be thought of having the type <code>Wish -&gt; IO Bool</code>.
        Santa needed to turn the Lua lambda function into an actual Haskell function
        <code>runPredicate :: Wish -&gt; Lua Bool</code>. If Santa assumed that the
        lambda function was at the top of the Lua stack, then he could push a <code>Wish</code>
        value to the Lua stack, call the function, and retrieve the result value from
        the stack.</p>\n<div class=\"sourceCode\" id=\"cb7\" style=\"background: #f1f3f5;\"><pre
        class=\"sourceCode haskell code-with-copy\"><code class=\"sourceCode haskell\"><span
        id=\"cb7-1\"><span class=\"ot\" style=\"color: #003B4F;\">runPredicate ::</span>
        <span class=\"dt\" style=\"color: #AD0000;\">Wish</span> <span class=\"ot\"
        style=\"color: #003B4F;\">-&gt;</span> <span class=\"dt\" style=\"color: #AD0000;\">Lua</span>
        <span class=\"dt\" style=\"color: #AD0000;\">Bool</span></span>\n<span id=\"cb7-2\">runPredicate
        wish <span class=\"ot\" style=\"color: #003B4F;\">=</span> <span class=\"kw\"
        style=\"color: #003B4F;\">do</span></span>\n<span id=\"cb7-3\">  <span class=\"co\"
        style=\"color: #5E5E5E;\">-- Assume filter function is at the top of the stack;</span></span>\n<span
        id=\"cb7-4\">  <span class=\"co\" style=\"color: #5E5E5E;\">-- create a copy
        so we can re-use it.</span></span>\n<span id=\"cb7-5\">  pushvalue top</span>\n<span
        id=\"cb7-6\">  pushWish wish</span>\n<span id=\"cb7-7\">  <span class=\"co\"
        style=\"color: #5E5E5E;\">-- Call the function. There is one argument on the
        stack,</span></span>\n<span id=\"cb7-8\">  <span class=\"co\" style=\"color:
        #5E5E5E;\">-- and we expect one result to be returned.</span></span>\n<span
        id=\"cb7-9\">  call (<span class=\"dt\" style=\"color: #AD0000;\">NumArgs</span>
        <span class=\"dv\" style=\"color: #AD0000;\">1</span>) (<span class=\"dt\"
        style=\"color: #AD0000;\">NumResults</span> <span class=\"dv\" style=\"color:
        #AD0000;\">1</span>)</span>\n<span id=\"cb7-10\">  toboolean top <span class=\"op\"
        style=\"color: #5E5E5E;\">&lt;*</span> pop <span class=\"dv\" style=\"color:
        #AD0000;\">1</span></span></code></pre></div>\n<p>What remained was loading
        the Elves\u2019 script files. Santa did this with <a href=\"https://hackage.haskell.org/package/hslua/docs/Foreign-Lua-Core.html#v:dofile\"><code>dofile</code></a>
        of type <code>FilePath -&gt; Lua Status</code>. The predicate then ends up
        on the top of the Lua stack, and can be called through <code>runPredicate</code>,
        e.g.&nbsp;to select a subset of wishes via <a href=\"https://hackage.haskell.org/package/base/docs/Control-Monad.html#v:filterM\"><code>filterM</code></a>.</p>\n<div
        class=\"sourceCode\" id=\"cb8\" style=\"background: #f1f3f5;\"><pre class=\"sourceCode
        haskell code-with-copy\"><code class=\"sourceCode haskell\"><span id=\"cb8-1\"><span
        class=\"ot\" style=\"color: #003B4F;\">main ::</span> <span class=\"dt\" style=\"color:
        #AD0000;\">IO</span> ()</span>\n<span id=\"cb8-2\">main <span class=\"ot\"
        style=\"color: #003B4F;\">=</span> <span class=\"kw\" style=\"color: #003B4F;\">do</span></span>\n<span
        id=\"cb8-3\">  filterFile <span class=\"ot\" style=\"color: #003B4F;\">&lt;-</span>
        <span class=\"fu\" style=\"color: #4758AB;\">fmap</span> (<span class=\"op\"
        style=\"color: #5E5E5E;\">!!</span> <span class=\"dv\" style=\"color: #AD0000;\">0</span>)
        getArgs <span class=\"co\" style=\"color: #5E5E5E;\">-- get first argument</span></span>\n<span
        id=\"cb8-4\">  result <span class=\"ot\" style=\"color: #003B4F;\">&lt;-</span>
        run <span class=\"op\" style=\"color: #5E5E5E;\">$</span> <span class=\"kw\"
        style=\"color: #003B4F;\">do</span></span>\n<span id=\"cb8-5\">    _status
        <span class=\"ot\" style=\"color: #003B4F;\">&lt;-</span> dofile filterFile</span>\n<span
        id=\"cb8-6\">    filterM runPredicate wishes</span>\n<span id=\"cb8-7\">  <span
        class=\"fu\" style=\"color: #4758AB;\">print</span> result</span></code></pre></div>\n<p>Santa
        tested his creation on a short list of wishes</p>\n<div class=\"sourceCode\"
        id=\"cb9\" style=\"background: #f1f3f5;\"><pre class=\"sourceCode haskell
        code-with-copy\"><code class=\"sourceCode haskell\"><span id=\"cb9-1\"><span
        class=\"ot\" style=\"color: #003B4F;\">wishes ::</span> [<span class=\"dt\"
        style=\"color: #AD0000;\">Wish</span>]</span>\n<span id=\"cb9-2\">wishes <span
        class=\"ot\" style=\"color: #003B4F;\">=</span></span>\n<span id=\"cb9-3\">
        \ [ <span class=\"dt\" style=\"color: #AD0000;\">Wish</span> (<span class=\"dt\"
        style=\"color: #AD0000;\">Child</span> <span class=\"st\" style=\"color: #20794D;\">\"Theodor\"</span>
        <span class=\"dt\" style=\"color: #AD0000;\">Nice</span>) <span class=\"dt\"
        style=\"color: #AD0000;\">Bricks</span></span>\n<span id=\"cb9-4\">  , <span
        class=\"dt\" style=\"color: #AD0000;\">Wish</span> (<span class=\"dt\" style=\"color:
        #AD0000;\">Child</span> <span class=\"st\" style=\"color: #20794D;\">\"Philine\"</span>
        <span class=\"dt\" style=\"color: #AD0000;\">Nice</span>) <span class=\"dt\"
        style=\"color: #AD0000;\">TrainSet</span></span>\n<span id=\"cb9-5\">  , <span
        class=\"dt\" style=\"color: #AD0000;\">Wish</span> (<span class=\"dt\" style=\"color:
        #AD0000;\">Child</span> <span class=\"st\" style=\"color: #20794D;\">\"Steve\"</span>
        <span class=\"dt\" style=\"color: #AD0000;\">Naughty</span>) <span class=\"dt\"
        style=\"color: #AD0000;\">Doll</span></span>\n<span id=\"cb9-6\">  ]</span></code></pre></div>\n<p>by
        running <code>runhaskell wish-filter predicate.lua</code>. To his uttermost
        satisfaction, the terminal echoed the right information back to him.</p>\n<pre><code>[Wish
        {wishingChild = Child {childName = \"Philine\", childBehavior = Nice}, wishedToy
        = TrainSet}]</code></pre>\n<p>He reclined in his chair, shut down his device,
        and enjoyed a double chocolate chip cookie of which he felt very deserving
        now.</p>\n<hr>\n<p>Santa\u2019s full code, as presented here, is available
        as part of the examples at <a href=\"https://github.com/hslua/hslua\" class=\"uri\">https://github.com/hslua/hslua</a>.</p>\n\n\n</section>\n\n\n<div
        id=\"quarto-appendix\" class=\"default\"><section id=\"footnotes\" class=\"footnotes
        footnotes-end-of-document\"><h2 class=\"anchored quarto-appendix-heading\">Footnotes</h2>\n\n<ol>\n<li
        id=\"fn1\"><p>Santa learned about Lua from his game-devs. Now he uses it to
        keep his security teams on their toes with <a href=\"https://nmap.org\">nmap</a>
        and <a href=\"https://wireshark.org/\">Wireshark</a>; many of the North Pole\u2019s
        servers contain custom Lua scripts, too (<a href=\"https://redis.io/commands/eval\">redis</a>,
        <a href=\"https://github.com/openresty\">nginx/OpenResty</a>, <a href=\"https://www.haproxy.com/blog/5-ways-to-extend-haproxy-with-lua/\">HAProxy</a>,
        <a href=\"https://doc.powerdns.com/authoritative/lua-records/index.html\">PowerDNS</a>).\u21A9\uFE0E</p></li>\n</ol>\n</section></div>
        ]]></description>\n  <category>lua</category>\n  <category>hslua</category>\n
        \ <category>example</category>\n  <guid>https://tarleb.com/posts/santas-little-lua-scripts/index.html</guid>\n
        \ <pubDate>Sun, 06 Dec 2020 00:00:00 GMT</pubDate>\n</item>\n<item>\n  <title>PDF
        Version of the Lua Manual</title>\n  <dc:creator>Albert Krewinkel</dc:creator>\n
        \ <link>https://tarleb.com/posts/pdf-of-the-lua-manual/index.html</link>\n
        \ <description><![CDATA[ \n\n\n\n<p>A question came up on the Lua mailing
        list, asking whether there was a PDF version of the <a href=\"https://lua.org/manual/5.4/manual.html\">Lua
        manual</a>. This is, of course, the home domain of pandoc, and I got nerd-sniped
        into producing a PDF (and ePUB) version of the manual.</p>\n<p>This is a good
        opportunity to showcase some pandoc features. The post describes the process
        of going from an HTML web page to a PDF file via LaTeX and pandoc. We will
        see how to</p>\n<ol type=\"1\">\n<li>quickly convert documents with pandoc;</li>\n<li>use
        Lua filters to improve the result by modifying the document; and</li>\n<li>fine-tune
        the output by setting appropriate pandoc options.</li>\n</ol>\n<section id=\"invoking-pandoc\"
        class=\"level2\">\n<h2 class=\"anchored\" data-anchor-id=\"invoking-pandoc\">Invoking
        pandoc</h2>\n<p>The first step is to call pandoc on the Lua manual website.
        Even when keeping everything bare-bones, the result is already decent:</p>\n<pre><code>pandoc
        --pdf-engine=xelatex --output=lua-manual.pdf \\\n    \"https://lua.org/manual/5.4/manual.html\"</code></pre>\n<p>Produces</p>\n<div
        class=\"quarto-figure quarto-figure-center\">\n<figure class=\"figure\">\n<p><img
        src=\"https://tarleb.com/posts/pdf-of-the-lua-manual/lua-refman-naive.png\"
        class=\"img-fluid figure-img\"></p>\n<p></p><figcaption class=\"figure-caption\">First
        page of unoptimized PDF</figcaption><p></p>\n</figure>\n</div>\n<p>This requires
        a somewhat recent version of pandoc as well as XeLaTeX to be installed. It
        is possible to forgo the trouble of installing the requirements by using the
        <em>pandoc/latex</em> Docker image:</p>\n<pre><code>docker run --rm -v \"$PWD\":/data
        -u $(id -u):$(id -g) pandoc/latex:2.9.2.1 \\\n    --pdf-engine=xelatex --output=lua-manual.pdf
        \\\n    \"https://lua.org/manual/5.4/manual.html\"</code></pre>\n</section>\n<section
        id=\"replacing-characters\" class=\"level2\">\n<h2 class=\"anchored\" data-anchor-id=\"replacing-characters\">Replacing
        characters</h2>\n<p>The above commands will produce warnings about characters
        which are unavailable in the default fonts. We don\u2019t want characters
        to go missing, of course, so let\u2019s fix that first. The warnings are:</p>\n<pre><code>[WARNING]
        Missing character: There is no \u2264 (U+2264) in font [lmmono10-regular]:!\n[WARNING]
        Missing character: There is no \u2264 (U+2264) in font [lmmono10-regular]:!\n[WARNING]
        Missing character: There is no \u03C0 (U+03C0) in font [lmroman10-italic]:mapping=tex-text;!</code></pre>\n<p>Searching
        the page for <code>\u2264</code> shows that it is used in inline code, while
        <code>\u03C0</code> occurs as emphasized character in the description of <code>math.pi</code>.
        We could, of course, search for a font which has the appropriate glyphs and
        instruct pandoc/LaTeX to use it. But we\u2019ll go a different route.</p>\n<p>A
        good way to improve the result of a converstion is to use a pandoc <a href=\"https://pandoc.org/lua-filters.html\">Lua
        filter</a>. We create a file called <code>beautify-manual.lua</code> and pass
        it to pandoc via the <code>--lua-filter=beautify-manual.lua</code> command
        line option.</p>\n<p>Handling <code>\u2264</code> is straight forward, we
        just replace the char with the slightly uglier looking ASCII sequence <code>&lt;=</code>
        in all code elements.</p>\n<div class=\"sourceCode\" id=\"cb4\" style=\"background:
        #f1f3f5;\"><pre class=\"sourceCode lua code-with-copy\"><code class=\"sourceCode
        lua\"><span id=\"cb4-1\"><span class=\"kw\" style=\"color: #003B4F;\">function</span>
        Code <span class=\"op\" style=\"color: #5E5E5E;\">(</span>c<span class=\"op\"
        style=\"color: #5E5E5E;\">)</span></span>\n<span id=\"cb4-2\">  c<span class=\"op\"
        style=\"color: #5E5E5E;\">.</span>text <span class=\"op\" style=\"color: #5E5E5E;\">=</span>
        c<span class=\"op\" style=\"color: #5E5E5E;\">.</span>text<span class=\"op\"
        style=\"color: #5E5E5E;\">:</span><span class=\"fu\" style=\"color: #4758AB;\">gsub</span><span
        class=\"op\" style=\"color: #5E5E5E;\">(</span><span class=\"st\" style=\"color:
        #20794D;\">'\u2264'</span><span class=\"op\" style=\"color: #5E5E5E;\">,</span>
        <span class=\"st\" style=\"color: #20794D;\">'&lt;='</span><span class=\"op\"
        style=\"color: #5E5E5E;\">)</span></span>\n<span id=\"cb4-3\">  <span class=\"cf\"
        style=\"color: #003B4F;\">return</span> c</span>\n<span id=\"cb4-4\"><span
        class=\"kw\" style=\"color: #003B4F;\">end</span></span></code></pre></div>\n<p>While
        there is no italics version <code>\u03C0</code> in the default font, there
        <em>is</em> such a glyph in the default math font. Pandoc\u2019s internal
        representation for <em>\u03C0</em> is <code>Emph [Str \"\u03C0\"]</code>,
        which we replace with a math element holding the same content.</p>\n<div class=\"sourceCode\"
        id=\"cb5\" style=\"background: #f1f3f5;\"><pre class=\"sourceCode lua code-with-copy\"><code
        class=\"sourceCode lua\"><span id=\"cb5-1\"><span class=\"kw\" style=\"color:
        #003B4F;\">function</span> Emph <span class=\"op\" style=\"color: #5E5E5E;\">(</span>e<span
        class=\"op\" style=\"color: #5E5E5E;\">)</span></span>\n<span id=\"cb5-2\">
        \ <span class=\"kw\" style=\"color: #003B4F;\">local</span> s <span class=\"op\"
        style=\"color: #5E5E5E;\">=</span> e<span class=\"op\" style=\"color: #5E5E5E;\">.</span>content<span
        class=\"op\" style=\"color: #5E5E5E;\">[</span><span class=\"dv\" style=\"color:
        #AD0000;\">1</span><span class=\"op\" style=\"color: #5E5E5E;\">]</span></span>\n<span
        id=\"cb5-3\">  <span class=\"cf\" style=\"color: #003B4F;\">if</span> <span
        class=\"op\" style=\"color: #5E5E5E;\">#</span>e<span class=\"op\" style=\"color:
        #5E5E5E;\">.</span>content <span class=\"op\" style=\"color: #5E5E5E;\">==</span>
        <span class=\"dv\" style=\"color: #AD0000;\">1</span> <span class=\"kw\" style=\"color:
        #003B4F;\">and</span> s<span class=\"op\" style=\"color: #5E5E5E;\">.</span>tag
        <span class=\"op\" style=\"color: #5E5E5E;\">==</span> <span class=\"st\"
        style=\"color: #20794D;\">'Str'</span> <span class=\"kw\" style=\"color: #003B4F;\">and</span>
        s<span class=\"op\" style=\"color: #5E5E5E;\">.</span>text <span class=\"op\"
        style=\"color: #5E5E5E;\">==</span> <span class=\"st\" style=\"color: #20794D;\">'\u03C0'</span>
        <span class=\"cf\" style=\"color: #003B4F;\">then</span></span>\n<span id=\"cb5-4\">
        \   <span class=\"cf\" style=\"color: #003B4F;\">return</span> pandoc<span
        class=\"op\" style=\"color: #5E5E5E;\">.</span>Math<span class=\"op\" style=\"color:
        #5E5E5E;\">(</span><span class=\"st\" style=\"color: #20794D;\">'InlineMath'</span><span
        class=\"op\" style=\"color: #5E5E5E;\">,</span> <span class=\"st\" style=\"color:
        #20794D;\">'\u03C0'</span><span class=\"op\" style=\"color: #5E5E5E;\">)</span></span>\n<span
        id=\"cb5-5\">  <span class=\"cf\" style=\"color: #003B4F;\">end</span></span>\n<span
        id=\"cb5-6\"><span class=\"kw\" style=\"color: #003B4F;\">end</span></span></code></pre></div>\n<p>The
        document now compiles without warnings, and all characters are properly included.</p>\n</section>\n<section
        id=\"add-table-of-contents\" class=\"level2\">\n<h2 class=\"anchored\" data-anchor-id=\"add-table-of-contents\">Add
        Table of Contents</h2>\n<p>The Lua manual is long, often used as a reference,
        and, in its HTML version, comes with a table of contents on a separate page.
        The PDF, for it to be useful as a reference, should have a table of contents
        as well. Pandoc can be told to generate a table of contents by adding the
        <code>--toc</code> command line flag. The toc depth is controlled via <code>--toc-depth</code>;
        <code>2</code> is a good setting here. However, in this case, the result is
        neither pleasing nor informative:</p>\n<div class=\"quarto-figure quarto-figure-center\">\n<figure
        class=\"figure\">\n<p><img src=\"https://tarleb.com/posts/pdf-of-the-lua-manual/bad-toc.png\"
        class=\"img-fluid figure-img\"></p>\n<p></p><figcaption class=\"figure-caption\">Bad
        looking table of contents</figcaption><p></p>\n</figure>\n</div>\n<p>Something
        is terribly wrong. By inspecting the parsed document by running <code>pandoc
        --to=native \u2026</code>, we see that all <em>Header</em>s contain a <em>Span</em>.
        That span holds the actual contents. Apparently LaTeX does not like this and
        omits the content of the span when generating the toc.</p>\n<p>The span also
        has the id used by links to the header. Numbered sections start with the section
        number, which we\u2019d rather produce via pandoc.</p>\n<div class=\"sourceCode\"
        id=\"cb6\" style=\"background: #f1f3f5;\"><pre class=\"sourceCode lua code-with-copy\"><code
        class=\"sourceCode lua\"><span id=\"cb6-1\"><span class=\"kw\" style=\"color:
        #003B4F;\">function</span> Header <span class=\"op\" style=\"color: #5E5E5E;\">(</span>h<span
        class=\"op\" style=\"color: #5E5E5E;\">)</span></span>\n<span id=\"cb6-2\">
        \ <span class=\"co\" style=\"color: #5E5E5E;\">-- Unnumbered sections have
        the main contents as the first element.</span></span>\n<span id=\"cb6-3\">
        \ <span class=\"co\" style=\"color: #5E5E5E;\">-- Numbered sections start
        with the number and an em-dash, so</span></span>\n<span id=\"cb6-4\">  <span
        class=\"co\" style=\"color: #5E5E5E;\">-- the Span is the fifth element (Lua
        multipass).</span></span>\n<span id=\"cb6-5\">  <span class=\"kw\" style=\"color:
        #003B4F;\">local</span> span</span>\n<span id=\"cb6-6\">  <span class=\"cf\"
        style=\"color: #003B4F;\">if</span> h<span class=\"op\" style=\"color: #5E5E5E;\">.</span>content<span
        class=\"op\" style=\"color: #5E5E5E;\">[</span><span class=\"dv\" style=\"color:
        #AD0000;\">1</span><span class=\"op\" style=\"color: #5E5E5E;\">].</span>tag
        <span class=\"op\" style=\"color: #5E5E5E;\">==</span> <span class=\"st\"
        style=\"color: #20794D;\">'Str'</span> <span class=\"kw\" style=\"color: #003B4F;\">and</span>
        h<span class=\"op\" style=\"color: #5E5E5E;\">.</span>content<span class=\"op\"
        style=\"color: #5E5E5E;\">[</span><span class=\"dv\" style=\"color: #AD0000;\">1</span><span
        class=\"op\" style=\"color: #5E5E5E;\">].</span>text<span class=\"op\" style=\"color:
        #5E5E5E;\">:</span><span class=\"fu\" style=\"color: #4758AB;\">match</span>
        <span class=\"st\" style=\"color: #20794D;\">'[%d%.]+'</span> <span class=\"cf\"
        style=\"color: #003B4F;\">then</span></span>\n<span id=\"cb6-7\">    span
        <span class=\"op\" style=\"color: #5E5E5E;\">=</span> h<span class=\"op\"
        style=\"color: #5E5E5E;\">.</span>content<span class=\"op\" style=\"color:
        #5E5E5E;\">[</span><span class=\"dv\" style=\"color: #AD0000;\">5</span><span
        class=\"op\" style=\"color: #5E5E5E;\">]</span></span>\n<span id=\"cb6-8\">
        \ <span class=\"cf\" style=\"color: #003B4F;\">else</span></span>\n<span id=\"cb6-9\">
        \   span <span class=\"op\" style=\"color: #5E5E5E;\">=</span> h<span class=\"op\"
        style=\"color: #5E5E5E;\">.</span>content<span class=\"op\" style=\"color:
        #5E5E5E;\">[</span><span class=\"dv\" style=\"color: #AD0000;\">1</span><span
        class=\"op\" style=\"color: #5E5E5E;\">]</span></span>\n<span id=\"cb6-10\">
        \   h<span class=\"op\" style=\"color: #5E5E5E;\">.</span>classes<span class=\"op\"
        style=\"color: #5E5E5E;\">:</span><span class=\"fu\" style=\"color: #4758AB;\">insert</span><span
        class=\"op\" style=\"color: #5E5E5E;\">(</span><span class=\"st\" style=\"color:
        #20794D;\">'unnumbered'</span><span class=\"op\" style=\"color: #5E5E5E;\">)</span></span>\n<span
        id=\"cb6-11\">  <span class=\"cf\" style=\"color: #003B4F;\">end</span></span>\n<span
        id=\"cb6-12\"></span>\n<span id=\"cb6-13\">  h<span class=\"op\" style=\"color:
        #5E5E5E;\">.</span>identifier <span class=\"op\" style=\"color: #5E5E5E;\">=</span>
        span<span class=\"op\" style=\"color: #5E5E5E;\">.</span>identifier</span>\n<span
        id=\"cb6-14\">  h<span class=\"op\" style=\"color: #5E5E5E;\">.</span>content
        <span class=\"op\" style=\"color: #5E5E5E;\">=</span> span<span class=\"op\"
        style=\"color: #5E5E5E;\">.</span>content</span>\n<span id=\"cb6-15\"></span>\n<span
        id=\"cb6-16\">  <span class=\"cf\" style=\"color: #003B4F;\">return</span>
        h</span>\n<span id=\"cb6-17\"><span class=\"kw\" style=\"color: #003B4F;\">end</span></span></code></pre></div>\n<p>The
        filter also removes the section numbering. We add it back by passing <code>--number-sections</code>
        to pandoc.</p>\n<div class=\"quarto-figure quarto-figure-center\">\n<figure
        class=\"figure\">\n<p><img src=\"https://tarleb.com/posts/pdf-of-the-lua-manual/less-bad-toc.png\"
        class=\"img-fluid figure-img\"></p>\n<p></p><figcaption class=\"figure-caption\">less-bad
        table of contents</figcaption><p></p>\n</figure>\n</div>\n<p>Not bad.</p>\n</section>\n<section
        id=\"improve-title-and-metadata\" class=\"level2\">\n<h2 class=\"anchored\"
        data-anchor-id=\"improve-title-and-metadata\">Improve title and metadata</h2>\n<p>The
        PDF is already quite usable, let\u2019s prettify it a bit more: It would be
        important to properly list the authors in the title and metadata, remove the
        unnecessary first header, and maybe add the Lua logo to the title. All this
        is easiest when acting on the full document.</p>\n<div class=\"sourceCode\"
        id=\"cb7\" style=\"background: #f1f3f5;\"><pre class=\"sourceCode lua code-with-copy\"><code
        class=\"sourceCode lua\"><span id=\"cb7-1\"><span class=\"kw\" style=\"color:
        #003B4F;\">function</span> Pandoc <span class=\"op\" style=\"color: #5E5E5E;\">(</span>doc<span
        class=\"op\" style=\"color: #5E5E5E;\">)</span></span>\n<span id=\"cb7-2\">
        \ <span class=\"co\" style=\"color: #5E5E5E;\">-- comma separated authors</span></span>\n<span
        id=\"cb7-3\">  <span class=\"kw\" style=\"color: #003B4F;\">local</span> authors
        <span class=\"op\" style=\"color: #5E5E5E;\">=</span> doc<span class=\"op\"
        style=\"color: #5E5E5E;\">.</span>blocks<span class=\"op\" style=\"color:
        #5E5E5E;\">[</span><span class=\"dv\" style=\"color: #AD0000;\">2</span><span
        class=\"op\" style=\"color: #5E5E5E;\">]</span></span>\n<span id=\"cb7-4\">
        \ authors<span class=\"op\" style=\"color: #5E5E5E;\">.</span>content<span
        class=\"op\" style=\"color: #5E5E5E;\">:</span><span class=\"fu\" style=\"color:
        #4758AB;\">remove</span><span class=\"op\" style=\"color: #5E5E5E;\">(</span><span
        class=\"dv\" style=\"color: #AD0000;\">1</span><span class=\"op\" style=\"color:
        #5E5E5E;\">)</span>  <span class=\"co\" style=\"color: #5E5E5E;\">-- remove
        'by'</span></span>\n<span id=\"cb7-5\">  doc<span class=\"op\" style=\"color:
        #5E5E5E;\">.</span>meta<span class=\"op\" style=\"color: #5E5E5E;\">.</span>author
        <span class=\"op\" style=\"color: #5E5E5E;\">=</span> pandoc<span class=\"op\"
        style=\"color: #5E5E5E;\">.</span>List<span class=\"op\" style=\"color: #5E5E5E;\">()</span></span>\n<span
        id=\"cb7-6\">  <span class=\"cf\" style=\"color: #003B4F;\">for</span> author
        <span class=\"kw\" style=\"color: #003B4F;\">in</span> pandoc<span class=\"op\"
        style=\"color: #5E5E5E;\">.</span>utils<span class=\"op\" style=\"color: #5E5E5E;\">.</span>stringify<span
        class=\"op\" style=\"color: #5E5E5E;\">(</span>authors<span class=\"op\" style=\"color:
        #5E5E5E;\">):</span><span class=\"fu\" style=\"color: #4758AB;\">gmatch</span>
        <span class=\"st\" style=\"color: #20794D;\">'[^,]+'</span> <span class=\"cf\"
        style=\"color: #003B4F;\">do</span></span>\n<span id=\"cb7-7\">    doc<span
        class=\"op\" style=\"color: #5E5E5E;\">.</span>meta<span class=\"op\" style=\"color:
        #5E5E5E;\">.</span>author<span class=\"op\" style=\"color: #5E5E5E;\">:</span><span
        class=\"fu\" style=\"color: #4758AB;\">insert</span><span class=\"op\" style=\"color:
        #5E5E5E;\">(</span>author<span class=\"op\" style=\"color: #5E5E5E;\">)</span></span>\n<span
        id=\"cb7-8\">  <span class=\"cf\" style=\"color: #003B4F;\">end</span></span>\n<span
        id=\"cb7-9\"></span>\n<span id=\"cb7-10\">  <span class=\"co\" style=\"color:
        #5E5E5E;\">-- Remove unnecessary blocks</span></span>\n<span id=\"cb7-11\">
        \ doc<span class=\"op\" style=\"color: #5E5E5E;\">.</span>blocks<span class=\"op\"
        style=\"color: #5E5E5E;\">:</span><span class=\"fu\" style=\"color: #4758AB;\">remove</span><span
        class=\"op\" style=\"color: #5E5E5E;\">(</span><span class=\"dv\" style=\"color:
        #AD0000;\">4</span><span class=\"op\" style=\"color: #5E5E5E;\">)</span> <span
        class=\"co\" style=\"color: #5E5E5E;\">-- menubar</span></span>\n<span id=\"cb7-12\">
        \ doc<span class=\"op\" style=\"color: #5E5E5E;\">.</span>blocks<span class=\"op\"
        style=\"color: #5E5E5E;\">:</span><span class=\"fu\" style=\"color: #4758AB;\">remove</span><span
        class=\"op\" style=\"color: #5E5E5E;\">(</span><span class=\"dv\" style=\"color:
        #AD0000;\">2</span><span class=\"op\" style=\"color: #5E5E5E;\">)</span> <span
        class=\"co\" style=\"color: #5E5E5E;\">-- authors paragraph</span></span>\n<span
        id=\"cb7-13\">  doc<span class=\"op\" style=\"color: #5E5E5E;\">.</span>blocks<span
        class=\"op\" style=\"color: #5E5E5E;\">:</span><span class=\"fu\" style=\"color:
        #4758AB;\">remove</span><span class=\"op\" style=\"color: #5E5E5E;\">(</span><span
        class=\"dv\" style=\"color: #AD0000;\">1</span><span class=\"op\" style=\"color:
        #5E5E5E;\">)</span> <span class=\"co\" style=\"color: #5E5E5E;\">-- title
        header</span></span>\n<span id=\"cb7-14\"></span>\n<span id=\"cb7-15\">  <span
        class=\"co\" style=\"color: #5E5E5E;\">-- add subtitle image</span></span>\n<span
        id=\"cb7-16\">  doc<span class=\"op\" style=\"color: #5E5E5E;\">.</span>meta<span
        class=\"op\" style=\"color: #5E5E5E;\">.</span>subtitle <span class=\"op\"
        style=\"color: #5E5E5E;\">=</span> pandoc<span class=\"op\" style=\"color:
        #5E5E5E;\">.</span>MetaInlines<span class=\"op\" style=\"color: #5E5E5E;\">{</span></span>\n<span
        id=\"cb7-17\">    pandoc<span class=\"op\" style=\"color: #5E5E5E;\">.</span>RawInline<span
        class=\"op\" style=\"color: #5E5E5E;\">(</span><span class=\"st\" style=\"color:
        #20794D;\">'latex'</span><span class=\"op\" style=\"color: #5E5E5E;\">,</span>
        <span class=\"st\" style=\"color: #20794D;\">'</span><span class=\"sc\" style=\"color:
        #5E5E5E;\">\\\\</span><span class=\"st\" style=\"color: #20794D;\">vspace{1em}'</span><span
        class=\"op\" style=\"color: #5E5E5E;\">),</span></span>\n<span id=\"cb7-18\">
        \   pandoc<span class=\"op\" style=\"color: #5E5E5E;\">.</span>Image<span
        class=\"op\" style=\"color: #5E5E5E;\">(</span><span class=\"st\" style=\"color:
        #20794D;\">\"Lua logo\"</span><span class=\"op\" style=\"color: #5E5E5E;\">,</span>
        <span class=\"co\" style=\"color: #5E5E5E;\">-- \"https://www.lua.org/images/lua-logo.gif\")</span></span>\n<span
        id=\"cb7-19\">  <span class=\"op\" style=\"color: #5E5E5E;\">}</span></span>\n<span
        id=\"cb7-20\">  <span class=\"cf\" style=\"color: #003B4F;\">return</span>
        doc</span>\n<span id=\"cb7-21\"><span class=\"kw\" style=\"color: #003B4F;\">end</span></span></code></pre></div>\n</section>\n<section
        id=\"final-touch\" class=\"level2\">\n<h2 class=\"anchored\" data-anchor-id=\"final-touch\">Final
        touch</h2>\n<p>Finally, we may want the PDF to add a little more visible structure,
        e.g., starting top-level sections on their own page.</p>\n<p>The command used
        by pandoc to create the top level headings can be controlled with the <code>--top-level-division</code>
        option. Setting that option to <code>chapter</code> ensures that each major
        section starts on a new page. However, the default document class used by
        LaTeX doesn\u2019t allow chapters, so a different class has to be set with
        <code>--variable documentclass=report</code>.</p>\n</section>\n<section id=\"summary\"
        class=\"level2\">\n<h2 class=\"anchored\" data-anchor-id=\"summary\">Summary</h2>\n<p>For
        completeness, <a href=\"lua-manual-cleanup.lua\">here is the complete filter</a>,
        and this is the full pandoc command used to generate the PDF:</p>\n<div class=\"sourceCode\"
        id=\"cb8\" style=\"background: #f1f3f5;\"><pre class=\"sourceCode bash code-with-copy\"><code
        class=\"sourceCode bash\"><span id=\"cb8-1\"><span class=\"ex\" style=\"color:
        null;\">pandoc</span> <span class=\"dt\" style=\"color: #AD0000;\">\\</span></span>\n<span
        id=\"cb8-2\">  <span class=\"at\" style=\"color: #657422;\">--toc</span> <span
        class=\"dt\" style=\"color: #AD0000;\">\\</span></span>\n<span id=\"cb8-3\">
        \ <span class=\"at\" style=\"color: #657422;\">--toc-depth</span><span class=\"op\"
        style=\"color: #5E5E5E;\">=</span>2 <span class=\"dt\" style=\"color: #AD0000;\">\\</span></span>\n<span
        id=\"cb8-4\">  <span class=\"at\" style=\"color: #657422;\">--metadata</span><span
        class=\"op\" style=\"color: #5E5E5E;\">=</span>documentclass=report <span
        class=\"dt\" style=\"color: #AD0000;\">\\</span></span>\n<span id=\"cb8-5\">
        \ <span class=\"at\" style=\"color: #657422;\">--pdf-engine</span><span class=\"op\"
        style=\"color: #5E5E5E;\">=</span>xelatex <span class=\"dt\" style=\"color:
        #AD0000;\">\\</span></span>\n<span id=\"cb8-6\">  <span class=\"at\" style=\"color:
        #657422;\">--lua-filter</span><span class=\"op\" style=\"color: #5E5E5E;\">=</span>lua-manual-cleanup.lua
        <span class=\"dt\" style=\"color: #AD0000;\">\\</span></span>\n<span id=\"cb8-7\">
        \ <span class=\"at\" style=\"color: #657422;\">--number-sections</span> <span
        class=\"dt\" style=\"color: #AD0000;\">\\</span></span>\n<span id=\"cb8-8\">
        \ <span class=\"at\" style=\"color: #657422;\">--top-level-division</span><span
        class=\"op\" style=\"color: #5E5E5E;\">=</span>chapter <span class=\"dt\"
        style=\"color: #AD0000;\">\\</span></span>\n<span id=\"cb8-9\">  <span class=\"at\"
        style=\"color: #657422;\">--output</span><span class=\"op\" style=\"color:
        #5E5E5E;\">=</span>lua-5.4-manual.pdf <span class=\"dt\" style=\"color: #AD0000;\">\\</span></span>\n<span
        id=\"cb8-10\">  <span class=\"st\" style=\"color: #20794D;\">\"https://lua.org/manual/5.4/manual.html\"</span></span></code></pre></div>\n<p>One
        of the big advantages of pandoc is that it offers a lot of freedom. Since
        we already cleaned the content up, we can now also create other formats, like
        an ebook, just by changing the name of the output file. The final results
        are available below:</p>\n<ul>\n<li><a href=\"lua-5.4-manual.pdf\">Lua 5.4
        manual (PDF)</a></li>\n<li><a href=\"lua-5.4-manual.epub\">Lua 5.4 manual
        (EPUB)</a></li>\n</ul>\n\n\n</section>\n\n ]]></description>\n  <category>pandoc</category>\n
        \ <category>lua</category>\n  <category>pdf</category>\n  <guid>https://tarleb.com/posts/pdf-of-the-lua-manual/index.html</guid>\n
        \ <pubDate>Sat, 11 Jul 2020 00:00:00 GMT</pubDate>\n  <media:content url=\"https://tarleb.com/posts/pdf-of-the-lua-manual/lua-refman-naive.png\"
        medium=\"image\" type=\"image/png\" height=\"186\" width=\"144\"/>\n</item>\n<item>\n
        \ <title>Extending pandoc with Lua</title>\n  <dc:creator>Albert Krewinkel</dc:creator>\n
        \ <link>https://tarleb.com/posts/extending-pandoc-with-lua/index.html</link>\n
        \ <description><![CDATA[ \n\n\n\n<p>My first exposure to Lua has been as a
        pandoc user, and adding new Lua features to pandoc turned Lua into one of
        my favorite languages. In this post I will take a look at <a href=\"https://pandoc.org/\">pandoc</a>,
        the universal document converter, and explore how one can script and extend
        it with Lua. Pandoc includes a Lua interpreter since 2012, but the integration
        of Lua has been expanded significantly with the latest 2.0 release. My hope
        for this article is to highlight the beauty of these systems.</p>\n<section
        id=\"the-universal-document-converter\" class=\"level2\">\n<h2 class=\"anchored\"
        data-anchor-id=\"the-universal-document-converter\">The universal document
        converter</h2>\n<p><a href=\"https://pandoc.org/\">Pandoc</a> \u2013 written
        and maintained by <a href=\"https://johnmacfarlane.net\">John MacFarlane</a>
        \u2013 is an relatively old project. It has grown considerably since the first
        version was published in 2006: at the time of writing, pandoc can read 27
        different document formats and dialects, and can write 49 formats. Besides
        serving as a one-off document conversions tool, pandoc also frequently features
        as the central part of publishing pipelines. For example, Pandoc is used in
        <a href=\"https://github.com/mfenner/jekyll-pandoc\">static</a> <a href=\"https://jaspervdj.be/hakyll/\">site
        generators</a> and is frequently used <a href=\"https://programminghistorian.org/lessons/sustainable-authorship-in-plain-text-using-pandoc-and-markdown\">by
        academic writers</a>, due also to its excellent support for citations.</p>\n<p>As
        a brief example, consider the following commands which transform Markdown
        input into docx, HTML, or PDF:</p>\n<div class=\"sourceCode\" id=\"cb1\" style=\"background:
        #f1f3f5;\"><pre class=\"sourceCode bash code-with-copy\"><code class=\"sourceCode
        bash\"><span id=\"cb1-1\"><span class=\"co\" style=\"color: #5E5E5E;\"># command
        to convert a markdown file to docx</span></span>\n<span id=\"cb1-2\"><span
        class=\"ex\" style=\"color: null;\">pandoc</span> input-file.md <span class=\"at\"
        style=\"color: #657422;\">--output</span><span class=\"op\" style=\"color:
        #5E5E5E;\">=</span>output-file.docx</span>\n<span id=\"cb1-3\"></span>\n<span
        id=\"cb1-4\"><span class=\"co\" style=\"color: #5E5E5E;\"># convert to HTML</span></span>\n<span
        id=\"cb1-5\"><span class=\"ex\" style=\"color: null;\">pandoc</span> input-file.md
        <span class=\"at\" style=\"color: #657422;\">--standalone</span> <span class=\"at\"
        style=\"color: #657422;\">--output</span><span class=\"op\" style=\"color:
        #5E5E5E;\">=</span>output-file.html</span>\n<span id=\"cb1-6\"></span>\n<span
        id=\"cb1-7\"><span class=\"co\" style=\"color: #5E5E5E;\"># convert to PDF
        (via LaTeX)</span></span>\n<span id=\"cb1-8\"><span class=\"ex\" style=\"color:
        null;\">pandoc</span> input-file.md <span class=\"at\" style=\"color: #657422;\">--output</span><span
        class=\"op\" style=\"color: #5E5E5E;\">=</span>output-file.pdf</span></code></pre></div>\n<p>Many
        conversion tasks need to alter the default behavior or require special conversion
        features. This highlights the importance of good customization support for
        a conversion tool, one of the areas in which Lua shines.</p>\n<p>Pandoc is
        unusual for a Lua-extendable program, in that it is written in Haskell. Using
        Haskell is very productive, but is less suitable as an extension language:
        its concepts are often alien to users of other languages, and shipping a full
        Haskell interpreter with pandoc would result in considerable bloat. Lua is
        an excellent choice here, as it is lightweight, simple, and beautiful. It
        should be noted, however, that <a href=\"https://github.com/hslua\">bridging
        Haskell and Lua</a> is its own can of worms and worth a separate blog post.</p>\n</section>\n<section
        id=\"pandocs-document-ast\" class=\"level2\">\n<h2 class=\"anchored\" data-anchor-id=\"pandocs-document-ast\">Pandoc\u2019s
        document AST</h2>\n<p>An important factor in pandoc\u2019s immense transformation
        powers is its use of a unifying document representation: Every input is parsed
        into this document AST, which is then rendered in the desired output format.
        While a direct conversion between any of <em>n</em> input and <em>m</em> output
        formats would require <em>n </em> m* converters, using an intermediate representation
        reduces complexity to <em>n + m</em>.</p>\n<p>There are additional advantages
        to this: as we\u2019ll see, it becomes much simpler to work with a unified
        document representation than it would be to work with any of the input or
        output formats directly.</p>\n<p>There are four main types in pandoc\u2019s
        document model: inlines, blocks, document metadata, and the full document.</p>\n<ul>\n<li><p>Inline
        elements represent text and text markup. Examples are <em>Space</em> for inter-word
        spaces, <em>Str</em> for (usually non-whitespace) text, and <em>Emph</em>
        for emphasized text.</p></li>\n<li><p>Blocks are elements like paragraphs,
        lists, code listings, and headers. They are usually rendered in lines or blocks
        of their own; many block elements contain lists of inline elements.</p></li>\n<li><p>Meta
        information is a simple mapping from string keys to meta values. Meta values
        can be thought of as a special JSON or YAML object.</p></li>\n<li><p>Last
        but not least, the <em>Pandoc</em> type represents a full document. A <em>Pandoc</em>
        element consists of a lists of block elements, plus additional document metadata.</p></li>\n</ul>\n<p>Pandoc\u2019s
        Lua features revolve around modifying or converting these elements. The oldest
        use of Lua in pandoc enables the conversion of AST elements into strings as
        to output any document format.</p>\n</section>\n<section id=\"custom-writers\"
        class=\"level2\">\n<h2 class=\"anchored\" data-anchor-id=\"custom-writers\">Custom
        writers</h2>\n<p>Users can define custom writers in Lua to render any document
        format. Each of the aforementioned AST elements is transformed to a string
        by calling a Lua function of the same name as the element. E.g., this example
        demonstrates how emphasized text can be rendered as HTML:</p>\n<div class=\"sourceCode\"
        id=\"cb2\" style=\"background: #f1f3f5;\"><pre class=\"sourceCode lua code-with-copy\"><code
        class=\"sourceCode lua\"><span id=\"cb2-1\"><span class=\"kw\" style=\"color:
        #003B4F;\">function</span> Emph<span class=\"op\" style=\"color: #5E5E5E;\">(</span>content_string<span
        class=\"op\" style=\"color: #5E5E5E;\">)</span></span>\n<span id=\"cb2-2\">
        \ <span class=\"cf\" style=\"color: #003B4F;\">return</span> <span class=\"st\"
        style=\"color: #20794D;\">'&lt;em&gt;'</span> <span class=\"op\" style=\"color:
        #5E5E5E;\">..</span> content_string <span class=\"op\" style=\"color: #5E5E5E;\">..</span>
        <span class=\"st\" style=\"color: #20794D;\">'&lt;/em&gt;'</span></span>\n<span
        id=\"cb2-3\"><span class=\"kw\" style=\"color: #003B4F;\">end</span></span></code></pre></div>\n<p>A
        full custom writer is defined by specifying functions for all document AST
        elements. Example writers using this method include <a href=\"https://github.com/lilydjwg/2bbcode\">2bbcode</a>
        by <a href=\"https://github.com/lilydjwg\">@lilydjwg (\u4F9D \u4E91)</a>,
        as well as pandoc\u2019s <code>sample.lua</code>. The latter is a well documented
        starting point for authors of new custom writers. The file can be produced
        by calling <code>pandoc --print-default-data-file=sample.lua</code>.</p>\n<p>The
        <a href=\"https://pandoc-scholar.github.io/\">pandoc-scholar</a> project serves
        as an example for the power offered by custom writers. It is a publishing
        tool intended to <a href=\"https://doi.org/10.7717/peerj-cs.112\">help authors
        of scholarly articles</a> and was created with custom Lua writers. The tool
        leans on the custom writers feature in ways that writers were not intended
        to be used, which resulted in the development of lua filters.</p>\n</section>\n<section
        id=\"filters\" class=\"level2\">\n<h2 class=\"anchored\" data-anchor-id=\"filters\">Filters</h2>\n<p>An
        additional benefit of a unified document type is that the document can be
        modified programmatically, regardless of which input and output format is
        chosen. Pandoc provides two interfaces for this.</p>\n<section id=\"json-filters\"
        class=\"level3\">\n<h3 class=\"anchored\" data-anchor-id=\"json-filters\">JSON
        Filters</h3>\n<p>The first \u2013 very flexible \u2013 method is based on
        JSON. Pandoc can serialize the document to JSON; other programs <a href=\"https://pandoc.org/filters.html\">can
        read and modify</a> the document. The resulting document JSON is passed back
        to pandoc, thus allowing users to use any programming language capable of
        parsing JSON to alter the document. Many libraries for various languages have
        been implemented, including <a href=\"https://hackage.haskell.org/package/pandoc-types\">Haskell</a>,
        <a href=\"http://scorreia.com/software/panflute/\">Python</a>, <a href=\"https://heerdebeer.org/Software/markdown/paru/\">Ruby</a>,
        and <a href=\"https://www.npmjs.com/package/pandoc-filter\">JavaScript</a>.</p>\n<p>The
        flexibility of JSON filters can also be a disadvantage, as it requires additional
        software and usually the full installation of a scripting language\u2019s
        ecosystem. Pandoc is designed to work on all major platforms and without any
        dependencies on other libraries and binaries. Depending on additional software
        can be problematic, especially for non-technical users.</p>\n</section>\n<section
        id=\"lua-filters\" class=\"level3\">\n<h3 class=\"anchored\" data-anchor-id=\"lua-filters\">Lua
        filters</h3>\n<p>The <a href=\"https://pandoc.org/lua-filters.html\">Lua filter</a>
        system added in pandoc 2.0 not only solves the portability issue of JSON filters,
        but also offers better performance and more functionality. Document elements
        can be selectively serialized to Lua tables, modified using the full power
        of Lua, and will then be transferred back, thus replacing the previous values.</p>\n<p>Lua
        filters operate by calling filter functions on each element of the specified
        name. I.e., if a Lua filter contains a function with the same name as an AST
        element, then this function is called for all elements of the respective type.
        The serialized element is passed as input to the filter function, and the
        function\u2019s return value is deserialized and used to replace the input
        element. This method is as simple as it is flexible, and fits well with the
        concept of immutability which is prevalent in Haskell programs: pandoc ignores
        modifications to the serialized object itself, it will just use the filter
        function\u2019s return value.</p>\n<p>The following example filter transforms
        all text set in small caps into emphasized text:</p>\n<div class=\"sourceCode\"
        id=\"cb3\" style=\"background: #f1f3f5;\"><pre class=\"sourceCode lua code-with-copy\"><code
        class=\"sourceCode lua\"><span id=\"cb3-1\"><span class=\"kw\" style=\"color:
        #003B4F;\">function</span> SmallCaps <span class=\"op\" style=\"color: #5E5E5E;\">(</span>element<span
        class=\"op\" style=\"color: #5E5E5E;\">)</span></span>\n<span id=\"cb3-2\">
        \ <span class=\"cf\" style=\"color: #003B4F;\">return</span> pandoc<span class=\"op\"
        style=\"color: #5E5E5E;\">.</span>Emph<span class=\"op\" style=\"color: #5E5E5E;\">(</span>element<span
        class=\"op\" style=\"color: #5E5E5E;\">.</span>content<span class=\"op\" style=\"color:
        #5E5E5E;\">)</span></span>\n<span id=\"cb3-3\"><span class=\"kw\" style=\"color:
        #003B4F;\">end</span></span></code></pre></div>\n<p>The element constructor
        functions in module pandoc, like <code>pandoc.Emph</code> in the above example,
        are also the central step when transforming elements from their pandoc-internal
        representation to Lua values. This ensures consistency in the way element
        values are produced, whether during serialization or through a constructor
        call in the filter script. The current implementation uses only strings, tables,
        and some metatables when constructing element values, with the goal of marking
        these values easy and flexible to use.</p>\n</section>\n</section>\n<section
        id=\"lua-filter-example-macro-expander\" class=\"level2\">\n<h2 class=\"anchored\"
        data-anchor-id=\"lua-filter-example-macro-expander\">Lua filter example: macro
        expander</h2>\n<p>Below is the code for a simple macro expander using pandoc\u2019s
        Lua filter functionality. The expander replaces all macro occurrences in the
        given document. Macro definitions are hard-coded into the filter, but could
        as well be read from an external file.</p>\n<div class=\"sourceCode\" id=\"cb4\"
        style=\"background: #f1f3f5;\"><pre class=\"sourceCode lua code-with-copy\"><code
        class=\"sourceCode lua\"><span id=\"cb4-1\"><span class=\"co\" style=\"color:
        #5E5E5E;\">-- file: macro-expander.lua</span></span>\n<span id=\"cb4-2\"></span>\n<span
        id=\"cb4-3\"><span class=\"co\" style=\"color: #5E5E5E;\">-- Macro substitutions:
        contains macro identifier as</span></span>\n<span id=\"cb4-4\"><span class=\"co\"
        style=\"color: #5E5E5E;\">-- keys and the expanded inlines as values.</span></span>\n<span
        id=\"cb4-5\"><span class=\"kw\" style=\"color: #003B4F;\">local</span> macro_substs
        <span class=\"op\" style=\"color: #5E5E5E;\">=</span> <span class=\"op\" style=\"color:
        #5E5E5E;\">{</span></span>\n<span id=\"cb4-6\">  <span class=\"op\" style=\"color:
        #5E5E5E;\">[</span><span class=\"st\" style=\"color: #20794D;\">'{{hello}}'</span><span
        class=\"op\" style=\"color: #5E5E5E;\">]</span> <span class=\"op\" style=\"color:
        #5E5E5E;\">=</span> pandoc<span class=\"op\" style=\"color: #5E5E5E;\">.</span>Emph<span
        class=\"op\" style=\"color: #5E5E5E;\">{</span>pandoc<span class=\"op\" style=\"color:
        #5E5E5E;\">.</span>Str <span class=\"st\" style=\"color: #20794D;\">\"Hello,
        World!\"</span><span class=\"op\" style=\"color: #5E5E5E;\">}</span></span>\n<span
        id=\"cb4-7\"><span class=\"op\" style=\"color: #5E5E5E;\">}</span></span>\n<span
        id=\"cb4-8\"></span>\n<span id=\"cb4-9\"><span class=\"co\" style=\"color:
        #5E5E5E;\">-- Replace string with macro expansion, if any.</span></span>\n<span
        id=\"cb4-10\"><span class=\"kw\" style=\"color: #003B4F;\">function</span>
        Str <span class=\"op\" style=\"color: #5E5E5E;\">(</span>s<span class=\"op\"
        style=\"color: #5E5E5E;\">)</span></span>\n<span id=\"cb4-11\">  <span class=\"cf\"
        style=\"color: #003B4F;\">return</span> macro_substs<span class=\"op\" style=\"color:
        #5E5E5E;\">[</span>s<span class=\"op\" style=\"color: #5E5E5E;\">.</span>text<span
        class=\"op\" style=\"color: #5E5E5E;\">]</span> <span class=\"kw\" style=\"color:
        #003B4F;\">or</span> s</span>\n<span id=\"cb4-12\"><span class=\"kw\" style=\"color:
        #003B4F;\">end</span></span></code></pre></div>\n<p>The heart of the macro
        expander is the function <code>Str</code>. It is called on all simple strings
        in the document. The return value of this function is then read back into
        pandoc, replacing the original <code>Str</code> value.</p>\n<p>Assume a Markdown
        file <code>greeting.md</code>:</p>\n<pre><code>Greeting: {{hello}}</code></pre>\n<p>We
        can apply the macro expander by calling</p>\n<div class=\"sourceCode\" id=\"cb6\"
        style=\"background: #f1f3f5;\"><pre class=\"sourceCode bash code-with-copy\"><code
        class=\"sourceCode bash\"><span id=\"cb6-1\"><span class=\"ex\" style=\"color:
        null;\">pandoc</span> <span class=\"at\" style=\"color: #657422;\">--lua-filter</span>
        macro-expander.lua greeting.md</span></code></pre></div>\n<p>resulting in
        the expected expansion:</p>\n<blockquote class=\"blockquote\">\n<p>\nGreeting:
        <em>Hello, World!</em>\n</p>\n</blockquote>\n<p>The function <code>Str</code>
        could be shortened further by dropping the trailing <code>or s</code>:</p>\n<div
        class=\"sourceCode\" id=\"cb7\" style=\"background: #f1f3f5;\"><pre class=\"sourceCode
        lua code-with-copy\"><code class=\"sourceCode lua\"><span id=\"cb7-1\"><span
        class=\"kw\" style=\"color: #003B4F;\">function</span> Str <span class=\"op\"
        style=\"color: #5E5E5E;\">(</span>s<span class=\"op\" style=\"color: #5E5E5E;\">)</span>
        <span class=\"cf\" style=\"color: #003B4F;\">return</span> macro_substs<span
        class=\"op\" style=\"color: #5E5E5E;\">[</span>s<span class=\"op\" style=\"color:
        #5E5E5E;\">.</span>text<span class=\"op\" style=\"color: #5E5E5E;\">]</span>
        <span class=\"kw\" style=\"color: #003B4F;\">end</span></span></code></pre></div>\n<p>This
        is a convenience feature of pandoc filters: if the function returns no value
        (or <code>nil</code>), the original value is kept unchanged. This makes filter
        functions easier to write and speeds up filtering, as unchanged elements don\u2019t
        need to be deserialized again.</p>\n</section>\n<section id=\"whats-good-and-whats-next\"
        class=\"level2\">\n<h2 class=\"anchored\" data-anchor-id=\"whats-good-and-whats-next\">What\u2019s
        good, and what\u2019s next</h2>\n<p>Using pandoc with Lua is a fast, flexible,
        and platform independent way of augmenting pandoc with additional functionality.
        For me personally, having the full power of Lua at ones finger tips proved
        to be a lot of fun, while opening unexpected document processing possibilities.</p>\n<p>Pandoc
        and its Lua subsystem are under constant development. E.g., the next versions
        will feature more utility functions exposed via Lua modules. There is constant
        work to make more and more internal functions available. The next big goal
        is to grant scripting access to all format-output functions. However, this
        requires some changes to pandoc\u2019s internals. It remains a long way for
        pandoc to become a fully Lua-scriptable publishing platform.</p>\n<p>If you
        want to learn more about Lua filters, the <a href=\"https://pandoc.org/lua-filters.html\">Lua
        filter docs</a> is a good place to start. It includes up-to-date examples
        of Lua scripts, as well as a reference of all modules and functions accessible
        via Lua. Pandoc\u2019s <a href=\"https://pandoc.org/MANUAL.html\">user manual</a>
        is a good resource to learn about all of pandoc features and its command line
        options.</p>\n<p><a href=\"https://groups.google.com/forum/#!forum/pandoc-discuss\">Feedback</a>
        is always welcome!</p>\n</section>\n<section id=\"acknowledgements\" class=\"level2\">\n<h2
        class=\"anchored\" data-anchor-id=\"acknowledgements\">Acknowledgements</h2>\n<p>A
        big thank you to Jennifer K\xF6nig, Birgit Pohl, and John MacFarlane for their
        feedback on an earlier version of this post, and to all pandoc contributors
        and users, who make working on this project incredibly fun.</p>\n\n\n</section>\n\n
        ]]></description>\n  <category>pandoc</category>\n  <category>lua</category>\n
        \ <category>pandoc-filter</category>\n  <guid>https://tarleb.com/posts/extending-pandoc-with-lua/index.html</guid>\n
        \ <pubDate>Sat, 23 Dec 2017 00:00:00 GMT</pubDate>\n</item>\n<item>\n  <title>MetaNook2014
        \u2013 Command Line Talk</title>\n  <dc:creator>Albert Krewinkel</dc:creator>\n
        \ <link>https://tarleb.com/posts/nook-2014/index.html</link>\n  <description><![CDATA[
        \n\n\n\n<p>Last night was the night of this year\u2019s MetaNook. It was the
        fourth time that the local hackers, most notably <a href=\"https://metameute.de\">MetaMeute</a>
        and <a href=\"https://chaotikum.org\">Chaotikum</a>, joined forces to organize
        a night full of beginner-friendly introductions, advanced tech talks, and
        project presentations.</p>\n<p>My <a href=\"https://github.com/tarleb/shell-talk\">talk
        contribution</a> this year was a brief introduction in the \u201Cmagic\u201D
        of the command-line. The talk slides are adapted to the topic in that the
        presentation must be given from the command line. Each slide is just a function,
        the whole presentation environment is held together by scripts and other shell-equivalences
        of duckt-tape. Feedback from the thirty or-so attendees was mostly positive.</p>\n<p>It
        was a very fun experience over all, as usual.</p>\n\n\n\n ]]></description>\n
        \ <category>talk</category>\n  <category>command-line</category>\n  <guid>https://tarleb.com/posts/nook-2014/index.html</guid>\n
        \ <pubDate>Sat, 22 Nov 2014 00:00:00 GMT</pubDate>\n</item>\n<item>\n  <title>rt6_redirect:
        source isn\u2019t a valid nexthop for redirect target</title>\n  <dc:creator>Albert
        Krewinkel</dc:creator>\n  <link>https://tarleb.com/posts/rt6_redirect/index.html</link>\n
        \ <description><![CDATA[ \n\n\n\n<p>The zeitkraut server is configured to
        work with IPv6. For quite some time now, I\u2019ve been seeing some strange
        errors in my log files. If you\u2019ve been noticing something similar, here
        is what\u2019s going on and how to prevent the messages from appearing.</p>\n<section
        id=\"the-problem\" class=\"level2\">\n<h2 class=\"anchored\" data-anchor-id=\"the-problem\">The
        Problem</h2>\n<p>Everything works as expected, except for some weird messages
        in the logs:</p>\n<pre><code>rt6_redirect: source isn't a valid nexthop for
        redirect target</code></pre>\n<p>Not even <a href=\"https://startpage.com\">startpage</a>
        was of much help. Searching for the above line only lists only some <a href=\"http://ubuntuforums.org/archive/index.php/t-1947743.html\">unanswered</a>
        <a href=\"http://board.gulli.com/thread/1699675-rt6-redirect-source-isn-t-a-valid-nexthop/\">forum</a>
        questions and the kernel source code which is producing the message. Oh, and
        a somewhat unhelpful blog entry <a href=\"https://www.kernel-error.de/kernel-error-blog/189-rt6-redirect-source-isn-t-a-valid-nexthop-for-redirect-target\">telling</a>
        people to always use their routers link local address when routing. This is
        useless advice in my case, I don\u2019t <em>have</em> a link-local address
        of the router, only it\u2019s global address.</p>\n</section>\n<section id=\"the-cause\"
        class=\"level2\">\n<h2 class=\"anchored\" data-anchor-id=\"the-cause\">The
        Cause</h2>\n<p>I found a way to stop the message from appearing in my logs.
        On the way, I learned a bit more about IPv6 and improved server security on
        the way.</p>\n<p>IPv6 contains functionality to tell a computer about better
        routes to the target destination. A router may send ICMPv6 redirect packages
        (type 137 to be specific), informing neighboring computers about more effective
        ways to reach their targets. This makes the most sense when applied within
        an environment heavily relying on auto-configuration \u2013 like a dynamic
        internal company or home network. It makes a lot less sense for servers very
        stable network topologies.</p>\n<p>Attackers may try to exploit the redirect
        functionality by including themselves into the route to the target. The specification
        for those redirects includes some security-measures, requiring the attacker
        to correctly guess the server\u2019s current next hop. If the attackers get
        it wrong, the Linux kernel refuses to use the new routing information. This
        is most-likely what happens when you see the above log messages.</p>\n</section>\n<section
        id=\"the-solution\" class=\"level2\">\n<h2 class=\"anchored\" data-anchor-id=\"the-solution\">The
        Solution</h2>\n<p>Long talk short, the solution is to disable IPv6 redirecting:</p>\n<pre><code>sudo
        sysctl net.ipv6.conf.all.accept_redirects=0</code></pre>\n<p>My server is
        not a router, so there is no need to accept any kind of route changing messages
        from external sources. We can simply disable redirects, using above command.
        The change can be made permanent by setting the value in <code>/etc/sysctl.conf</code>.
        In fact, we can disable routing for both IPv4 and IPv6. Be careful though,
        you might happen to be in a network environment requiring you to accept redirect
        commands for some reason.</p>\n<p>If you are on Debian or similar distribution
        like Ubuntu, change the following lines in <code>/etc/sysctl.conf</code> from</p>\n<pre><code>#
        Do not accept ICMP redirects (prevent MITM attacks)\n#net.ipv4.conf.all.accept_redirects
        = 0\n#net.ipv6.conf.all.accept_redirects = 0\n# _or_\n# Accept ICMP redirects
        only for gateways listed in our default\n# gateway list (enabled by default)\n#
        net.ipv4.conf.all.secure_redirects = 1\n#\n# Do not send ICMP redirects (we
        are not a router)\n#net.ipv4.conf.all.send_redirects = 0\n#\n# Do not accept
        IP source route packets (we are not a router)\n#net.ipv4.conf.all.accept_source_route
        = 0\n#net.ipv6.conf.all.accept_source_route = 0</code></pre>\n<p>to</p>\n<pre><code>#
        Do not accept ICMP redirects (prevent MITM attacks)\nnet.ipv4.conf.all.accept_redirects
        = 0\nnet.ipv6.conf.all.accept_redirects = 0\n#\n# Do not send ICMP redirects
        (we are not a router)\nnet.ipv4.conf.all.send_redirects = 0\n#\n# Do not accept
        IP source route packets (we are not a router)\nnet.ipv4.conf.all.accept_source_route
        = 0\nnet.ipv6.conf.all.accept_source_route = 0</code></pre>\n<p>Running <code>sudo
        sysctl -p</code> loads the new settings.</p>\n</section>\n<section id=\"alternative-solution\"
        class=\"level2\">\n<h2 class=\"anchored\" data-anchor-id=\"alternative-solution\">Alternative
        Solution</h2>\n<p>Completely disabling redirects in the kernel should keep
        you reasonably secure. However, if you need redirects within your internal
        network, you could also block redirect packages reaching you through external
        interfaces. E.g., to block redirect packages coming in on eth1, one would
        issue</p>\n<pre><code>sudo ip6tables -A -i eth1 -p icmpv6 --icmpv6-type 137
        -j DROP</code></pre>\n<p>However, firewall configuration is a complex topic,
        so I\u2019m not going to go into details here.</p>\n<p>If you have any questions,
        corrections or comments on the matter, please drop me a line.</p>\n\n\n</section>\n\n
        ]]></description>\n  <category>security</category>\n  <category>sysadmin</category>\n
        \ <guid>https://tarleb.com/posts/rt6_redirect/index.html</guid>\n  <pubDate>Fri,
        01 Aug 2014 00:00:00 GMT</pubDate>\n</item>\n<item>\n  <title>How to configure
        zsh with vi bindings and nice shortcuts</title>\n  <dc:creator>Albert Krewinkel</dc:creator>\n
        \ <link>https://tarleb.com/posts/howto-zsh-vi-style/index.html</link>\n  <description><![CDATA[
        \n\n\n\n<p>Having a good working environment is vital for feeling comfortable
        being productive. This extends to computational tools and the <a href=\"https://en.wikipedia.org/wiki/command%20shell\">command
        shell</a> is an integral part of the daily work for many of us. It\u2019s
        a good idea to configure the shell\u2019s interface to be efficient and pleasant
        to use. Here we see how <code class=\"verbatim\">zsh</code>, arguably the
        best shell around, can be configured to suit the needs of people used to vi
        key bindings (which are arguably arguably superior and more ergonomical than
        the default emacs-style bindings)<sup>1</sup>.</p>\n<section id=\"using-vi-bindings-in-the-shell\"
        class=\"level2\">\n<h2 class=\"anchored\" data-anchor-id=\"using-vi-bindings-in-the-shell\">Using
        vi-bindings in the shell</h2>\n<p>The first step towards nice vi key bindings
        is almost too easy: The red pill takes the form of</p>\n<div class=\"sourceCode\"
        id=\"cb1\" style=\"background: #f1f3f5;\"><pre class=\"sourceCode bash code-with-copy\"><code
        class=\"sourceCode bash\"><span id=\"cb1-1\"><span class=\"ex\" style=\"color:
        null;\">bindkey</span> <span class=\"at\" style=\"color: #657422;\">-v</span></span></code></pre></div>\n<p>Type
        it into your prompt (and add it to your <code class=\"verbatim\">.zshrc</code>
        file) and emacs bindings are going bye-bye. <code class=\"verbatim\">Escape</code>
        will bring you to normal-mode, while <code>i</code>, <code>a</code>, <code>o</code>
        etc. will bring you back to insert-mode, just as with your favorite editor.
        Use <code>j</code> and <code>k</code> in normal-mode to go through your history
        and move around within the line with <code>h</code>, <code>l</code>, <code>w</code>,
        <code>b</code> and the like.</p>\n<p>This is a good start, let\u2019s see
        how we can bring it from \u201Cthis is nice\u201D to \u201Cthat\u2019s just
        awesome\u201D.</p>\n<p>First, we may want to keep some of the default key
        bindings in insert-mode since we\u2019ve grown accustomed to them. No missing
        out, let\u2019s put them back in:</p>\n<div class=\"sourceCode\" id=\"cb2\"
        style=\"background: #f1f3f5;\"><pre class=\"sourceCode bash code-with-copy\"><code
        class=\"sourceCode bash\"><span id=\"cb2-1\"><span class=\"co\" style=\"color:
        #5E5E5E;\"># Kill input from the current point to the end of line with Ctrl-k</span></span>\n<span
        id=\"cb2-2\"><span class=\"ex\" style=\"color: null;\">bindkey</span> <span
        class=\"st\" style=\"color: #20794D;\">'^k'</span> kill-line</span>\n<span
        id=\"cb2-3\"><span class=\"co\" style=\"color: #5E5E5E;\"># Search the history
        incremantally with Ctrl-r</span></span>\n<span id=\"cb2-4\"><span class=\"ex\"
        style=\"color: null;\">bindkey</span> <span class=\"st\" style=\"color: #20794D;\">'^r'</span>
        history-incremental-search-backward</span>\n<span id=\"cb2-5\"><span class=\"co\"
        style=\"color: #5E5E5E;\"># Insert and go through the \"last words\" of previous
        commands with Meta-.</span></span>\n<span id=\"cb2-6\"><span class=\"co\"
        style=\"color: #5E5E5E;\"># (or Escape-. for that matter).</span></span>\n<span
        id=\"cb2-7\"><span class=\"ex\" style=\"color: null;\">bindkey</span> <span
        class=\"st\" style=\"color: #20794D;\">'^[.'</span> insert-last-word</span>\n<span
        id=\"cb2-8\"><span class=\"co\" style=\"color: #5E5E5E;\"># Show the man-page
        or other helpful infos with Meta-h</span></span>\n<span id=\"cb2-9\"><span
        class=\"ex\" style=\"color: null;\">bindkey</span> <span class=\"st\" style=\"color:
        #20794D;\">'^[h'</span> run-help</span></code></pre></div>\n<p>You can take
        a look at the key bindings defined for emacs-mode by typing <code>bindkey
        -M emacs -L</code> and reuse the bindings you like. See the <code>zshzle</code>
        manpage for more pre-defined widgets for which you could define bindings.</p>\n</section>\n<section
        id=\"configuring-the-prompt-to-show-the-current-editing-mode\" class=\"level2\">\n<h2
        class=\"anchored\" data-anchor-id=\"configuring-the-prompt-to-show-the-current-editing-mode\">Configuring
        the prompt to show the current editing mode</h2>\n<p>So the key bindings are
        quite usable now, but it\u2019s a bit unfortunate that it is impossible to
        see if the shell is in insert- or normal-mode. There should be a mode indicator
        right in the shell prompt!</p>\n<div class=\"sourceCode\" id=\"cb3\" style=\"background:
        #f1f3f5;\"><pre class=\"sourceCode bash code-with-copy\"><code class=\"sourceCode
        bash\"><span id=\"cb3-1\"><span class=\"co\" style=\"color: #5E5E5E;\"># You
        may already have those in your .zshrc somewhere</span></span>\n<span id=\"cb3-2\"><span
        class=\"ex\" style=\"color: null;\">autoload</span> <span class=\"at\" style=\"color:
        #657422;\">-U</span> promptinit <span class=\"kw\" style=\"color: #003B4F;\">&amp;&amp;</span>
        <span class=\"ex\" style=\"color: null;\">promptinit</span></span>\n<span
        id=\"cb3-3\"><span class=\"ex\" style=\"color: null;\">autoload</span> <span
        class=\"at\" style=\"color: #657422;\">-U</span> colors     <span class=\"kw\"
        style=\"color: #003B4F;\">&amp;&amp;</span> <span class=\"ex\" style=\"color:
        null;\">colors</span></span>\n<span id=\"cb3-4\"></span>\n<span id=\"cb3-5\"><span
        class=\"ex\" style=\"color: null;\">setopt</span> prompt_subst</span>\n<span
        id=\"cb3-6\"></span>\n<span id=\"cb3-7\"><span class=\"co\" style=\"color:
        #5E5E5E;\"># Set the colors to your liking</span></span>\n<span id=\"cb3-8\"><span
        class=\"bu\" style=\"color: null;\">local</span> <span class=\"va\" style=\"color:
        #111111;\">vi_normal_marker</span><span class=\"op\" style=\"color: #5E5E5E;\">=</span><span
        class=\"st\" style=\"color: #20794D;\">\"[%{</span><span class=\"va\" style=\"color:
        #111111;\">$fg</span><span class=\"st\" style=\"color: #20794D;\">[green]%}%BN%b%{</span><span
        class=\"va\" style=\"color: #111111;\">$reset_color</span><span class=\"st\"
        style=\"color: #20794D;\">%}]\"</span></span>\n<span id=\"cb3-9\"><span class=\"bu\"
        style=\"color: null;\">local</span> <span class=\"va\" style=\"color: #111111;\">vi_insert_marker</span><span
        class=\"op\" style=\"color: #5E5E5E;\">=</span><span class=\"st\" style=\"color:
        #20794D;\">\"[%{</span><span class=\"va\" style=\"color: #111111;\">$fg</span><span
        class=\"st\" style=\"color: #20794D;\">[cyan]%}%BI%b%{</span><span class=\"va\"
        style=\"color: #111111;\">$reset_color</span><span class=\"st\" style=\"color:
        #20794D;\">%}]\"</span></span>\n<span id=\"cb3-10\"><span class=\"bu\" style=\"color:
        null;\">local</span> <span class=\"va\" style=\"color: #111111;\">vi_unknown_marker</span><span
        class=\"op\" style=\"color: #5E5E5E;\">=</span><span class=\"st\" style=\"color:
        #20794D;\">\"[%{</span><span class=\"va\" style=\"color: #111111;\">$fg</span><span
        class=\"st\" style=\"color: #20794D;\">[red]%}%BU%b%{</span><span class=\"va\"
        style=\"color: #111111;\">$reset_color</span><span class=\"st\" style=\"color:
        #20794D;\">%}]\"</span></span>\n<span id=\"cb3-11\"><span class=\"bu\" style=\"color:
        null;\">local</span> <span class=\"va\" style=\"color: #111111;\">vi_mode</span><span
        class=\"op\" style=\"color: #5E5E5E;\">=</span><span class=\"st\" style=\"color:
        #20794D;\">\"</span><span class=\"va\" style=\"color: #111111;\">$vi_insert_marker</span><span
        class=\"st\" style=\"color: #20794D;\">\"</span></span>\n<span id=\"cb3-12\"><span
        class=\"fu\" style=\"color: #4758AB;\">vi_mode_indicator ()</span> <span class=\"kw\"
        style=\"color: #003B4F;\">{</span></span>\n<span id=\"cb3-13\">  <span class=\"cf\"
        style=\"color: #003B4F;\">case</span> <span class=\"va\" style=\"color: #111111;\">${KEYMAP}</span>
        <span class=\"kw\" style=\"color: #003B4F;\">in</span></span>\n<span id=\"cb3-14\">
        \   <span class=\"kw\" style=\"color: #003B4F;\">(</span><span class=\"ss\"
        style=\"color: #20794D;\">vicmd</span><span class=\"kw\" style=\"color: #003B4F;\">)</span>
        \     <span class=\"bu\" style=\"color: null;\">echo</span> <span class=\"va\"
        style=\"color: #111111;\">$vi_normal_marker</span> <span class=\"cf\" style=\"color:
        #003B4F;\">;;</span></span>\n<span id=\"cb3-15\">    <span class=\"kw\" style=\"color:
        #003B4F;\">(</span><span class=\"ss\" style=\"color: #20794D;\">main</span><span
        class=\"kw\" style=\"color: #003B4F;\">|</span><span class=\"ss\" style=\"color:
        #20794D;\">viins</span><span class=\"kw\" style=\"color: #003B4F;\">)</span>
        <span class=\"bu\" style=\"color: null;\">echo</span> <span class=\"va\" style=\"color:
        #111111;\">$vi_insert_marker</span> <span class=\"cf\" style=\"color: #003B4F;\">;;</span></span>\n<span
        id=\"cb3-16\">    <span class=\"kw\" style=\"color: #003B4F;\">(</span><span
        class=\"pp\" style=\"color: #AD0000;\">*</span><span class=\"kw\" style=\"color:
        #003B4F;\">)</span>          <span class=\"bu\" style=\"color: null;\">echo</span>
        <span class=\"va\" style=\"color: #111111;\">$vi_unknown_marker</span> <span
        class=\"cf\" style=\"color: #003B4F;\">;;</span></span>\n<span id=\"cb3-17\">
        \ <span class=\"cf\" style=\"color: #003B4F;\">esac</span></span>\n<span id=\"cb3-18\"><span
        class=\"kw\" style=\"color: #003B4F;\">}</span></span>\n<span id=\"cb3-19\"></span>\n<span
        id=\"cb3-20\"><span class=\"co\" style=\"color: #5E5E5E;\"># Reset mode-marker
        and prompt whenever the keymap changes</span></span>\n<span id=\"cb3-21\"><span
        class=\"kw\" style=\"color: #003B4F;\">function</span><span class=\"fu\" style=\"color:
        #4758AB;\"> zle-line-init</span> <span class=\"ex\" style=\"color: null;\">zle-keymap-select</span>
        {</span>\n<span id=\"cb3-22\">  <span class=\"va\" style=\"color: #111111;\">vi_mode</span><span
        class=\"op\" style=\"color: #5E5E5E;\">=</span><span class=\"st\" style=\"color:
        #20794D;\">\"</span><span class=\"va\" style=\"color: #111111;\">$(</span><span
        class=\"ex\" style=\"color: null;\">vi_mode_indicator</span><span class=\"va\"
        style=\"color: #111111;\">)</span><span class=\"st\" style=\"color: #20794D;\">\"</span></span>\n<span
        id=\"cb3-23\">  <span class=\"ex\" style=\"color: null;\">zle</span> reset-prompt</span>\n<span
        id=\"cb3-24\"><span class=\"er\" style=\"color: #AD0000;\">}</span></span>\n<span
        id=\"cb3-25\"><span class=\"ex\" style=\"color: null;\">zle</span> <span class=\"at\"
        style=\"color: #657422;\">-N</span> zle-line-init</span>\n<span id=\"cb3-26\"><span
        class=\"ex\" style=\"color: null;\">zle</span> <span class=\"at\" style=\"color:
        #657422;\">-N</span> zle-keymap-select</span>\n<span id=\"cb3-27\"></span>\n<span
        id=\"cb3-28\"><span class=\"co\" style=\"color: #5E5E5E;\"># Multiline-prompts
        don't quite work with reset-prompt; we work around this by</span></span>\n<span
        id=\"cb3-29\"><span class=\"co\" style=\"color: #5E5E5E;\"># printing the
        first line(s) via a precmd which is executed before the prompt</span></span>\n<span
        id=\"cb3-30\"><span class=\"co\" style=\"color: #5E5E5E;\"># is printed.  The
        following can be integrated into PROMPT for single-line</span></span>\n<span
        id=\"cb3-31\"><span class=\"co\" style=\"color: #5E5E5E;\"># prompts.</span></span>\n<span
        id=\"cb3-32\"><span class=\"co\" style=\"color: #5E5E5E;\">#</span></span>\n<span
        id=\"cb3-33\"><span class=\"co\" style=\"color: #5E5E5E;\"># Colorize freely</span></span>\n<span
        id=\"cb3-34\"><span class=\"bu\" style=\"color: null;\">local</span> <span
        class=\"va\" style=\"color: #111111;\">user_host</span><span class=\"op\"
        style=\"color: #5E5E5E;\">=</span><span class=\"st\" style=\"color: #20794D;\">'%B%n%b@%m'</span></span>\n<span
        id=\"cb3-35\"><span class=\"bu\" style=\"color: null;\">local</span> <span
        class=\"va\" style=\"color: #111111;\">current_dir</span><span class=\"op\"
        style=\"color: #5E5E5E;\">=</span><span class=\"st\" style=\"color: #20794D;\">'%~'</span></span>\n<span
        id=\"cb3-36\"><span class=\"fu\" style=\"color: #4758AB;\">precmd ()</span>
        <span class=\"ex\" style=\"color: null;\">print</span> <span class=\"at\"
        style=\"color: #657422;\">-rP</span> <span class=\"st\" style=\"color: #20794D;\">\"</span><span
        class=\"va\" style=\"color: #111111;\">${user_host}</span><span class=\"st\"
        style=\"color: #20794D;\"> </span><span class=\"va\" style=\"color: #111111;\">${current_dir}</span><span
        class=\"st\" style=\"color: #20794D;\">\"</span></span>\n<span id=\"cb3-37\"></span>\n<span
        id=\"cb3-38\"><span class=\"bu\" style=\"color: null;\">local</span> <span
        class=\"va\" style=\"color: #111111;\">return_code</span><span class=\"op\"
        style=\"color: #5E5E5E;\">=</span><span class=\"st\" style=\"color: #20794D;\">\"%(?..%{</span><span
        class=\"va\" style=\"color: #111111;\">$fg</span><span class=\"st\" style=\"color:
        #20794D;\">[red]%}%? %{</span><span class=\"va\" style=\"color: #111111;\">$reset_color</span><span
        class=\"st\" style=\"color: #20794D;\">%})\"</span></span>\n<span id=\"cb3-39\"><span
        class=\"va\" style=\"color: #111111;\">PROMPT</span><span class=\"op\" style=\"color:
        #5E5E5E;\">=</span><span class=\"st\" style=\"color: #20794D;\">'${return_code}${vi_mode}
        %# '</span></span></code></pre></div>\n<p>This gives a prompt in the style
        of</p>\n<pre><code>user@host /current/working/path\n[I] %</code></pre>\n<p>where
        <code>[I]</code> is the insert-mode indicator and is changed to <code>[N]</code>
        when normal-mode is activated. Neat, isn\u2019t it?</p>\n</section>\n<section
        id=\"single--and-multi-key-shortcuts\" class=\"level2\">\n<h2 class=\"anchored\"
        data-anchor-id=\"single--and-multi-key-shortcuts\">Single- and multi-key shortcuts</h2>\n<p>This
        is all nice and dandy, but it\u2019s not quite like vim yet. How about those
        sweet bindings where pressing <code>jj</code> in quick succession brings us
        to normal-mode without having to press <code>Esc</code>? Setting it up is
        easy as pie.</p>\n<div class=\"sourceCode\" id=\"cb5\" style=\"background:
        #f1f3f5;\"><pre class=\"sourceCode bash code-with-copy\"><code class=\"sourceCode
        bash\"><span id=\"cb5-1\"><span class=\"co\" style=\"color: #5E5E5E;\"># Time
        in which two keys have to be pressed in order to be recognized as a</span></span>\n<span
        id=\"cb5-2\"><span class=\"co\" style=\"color: #5E5E5E;\"># single command
        (in centiseconds, set to 0.4 sec by default -- may be</span></span>\n<span
        id=\"cb5-3\"><span class=\"co\" style=\"color: #5E5E5E;\"># modified as needed).</span></span>\n<span
        id=\"cb5-4\"><span class=\"bu\" style=\"color: null;\">export</span> <span
        class=\"va\" style=\"color: #111111;\">KEYTIMEOUT</span><span class=\"op\"
        style=\"color: #5E5E5E;\">=</span>40</span>\n<span id=\"cb5-5\"><span class=\"ex\"
        style=\"color: null;\">bindkey</span> <span class=\"st\" style=\"color: #20794D;\">'jj'</span>
        vi-cmd-mode</span></code></pre></div>\n<p>We can also add two-key bindings
        to jump to the start and end of the line:</p>\n<div class=\"sourceCode\" id=\"cb6\"
        style=\"background: #f1f3f5;\"><pre class=\"sourceCode bash code-with-copy\"><code
        class=\"sourceCode bash\"><span id=\"cb6-1\"><span class=\"co\" style=\"color:
        #5E5E5E;\"># Bind to both possible orders in which the keys could be pressed.</span></span>\n<span
        id=\"cb6-2\"><span class=\"co\" style=\"color: #5E5E5E;\"># Move all the way
        to the left</span></span>\n<span id=\"cb6-3\"><span class=\"ex\" style=\"color:
        null;\">bindkey</span> <span class=\"st\" style=\"color: #20794D;\">';l'</span>
        end-of-line</span>\n<span id=\"cb6-4\"><span class=\"ex\" style=\"color: null;\">bindkey</span>
        <span class=\"st\" style=\"color: #20794D;\">'l;'</span> end-of-line</span>\n<span
        id=\"cb6-5\"><span class=\"co\" style=\"color: #5E5E5E;\"># Move all the way
        to the right</span></span>\n<span id=\"cb6-6\"><span class=\"ex\" style=\"color:
        null;\">bindkey</span> <span class=\"st\" style=\"color: #20794D;\">';h'</span>
        beginning-of-line</span>\n<span id=\"cb6-7\"><span class=\"ex\" style=\"color:
        null;\">bindkey</span> <span class=\"st\" style=\"color: #20794D;\">'h;'</span>
        beginning-of-line</span></code></pre></div>\n<p>Jumping to the beginning of
        the line is now as easy as pressing <code>;</code> and <code>h</code> at the
        same time. No need to switch to normal-mode and your fingers don\u2019t leave
        the your keyboard\u2019s home-row. Try it, it\u2019s great!</p>\n</section>\n<section
        id=\"more\" class=\"level2\">\n<h2 class=\"anchored\" data-anchor-id=\"more\">More</h2>\n<p>Customizations
        like this can make it much more pleasant to use the command line and boost
        your productivity. If the above is still not enough, here are some more ideas:</p>\n<ul>\n<li>Define
        custom keymaps, e.g.&nbsp;to control other programs such as <code>mpc</code>
        or <code>tmux</code>.</li>\n<li>Switch to said keymaps via some nice bindings.</li>\n<li>Show
        the status of version control systems and build environments in the prompt.</li>\n</ul>\n<p>If
        you don\u2019t feel like doing all the work yourself, I can heartly reommend
        you take a look at <a href=\"http://ohmyz.sh\">oh-my-zsh</a>. It offers a
        great collection of ideas to build on and some really cool ready-to-use plugins.
        Have fun!</p>\n\n\n</section>\n\n\n<div id=\"quarto-appendix\" class=\"default\"><section
        id=\"footnotes\" class=\"footnotes footnotes-end-of-document\"><h2 class=\"anchored
        quarto-appendix-heading\">Footnotes</h2>\n\n<ol>\n<li id=\"fn1\"><p>Emacs
        is a great program which I\u2019ve been using for years and continue to use
        daily, but vi bindings just make good things better. Thanks to <a href=\"https://gitorious.org/evil/pages/Home\">evil</a>,
        that\u2019s not a problem.\u21A9\uFE0E</p></li>\n</ol>\n</section></div> ]]></description>\n
        \ <category>command-line</category>\n  <category>key bindings</category>\n
        \ <guid>https://tarleb.com/posts/howto-zsh-vi-style/index.html</guid>\n  <pubDate>Sun,
        29 Jun 2014 00:00:00 GMT</pubDate>\n</item>\n<item>\n  <title>Exploring HTTP
        Headers with netcat</title>\n  <dc:creator>Albert Krewinkel</dc:creator>\n
        \ <link>https://tarleb.com/posts/exploring-http-headers/index.html</link>\n
        \ <description><![CDATA[ \n\n\n\n<p>One of the many great things about free
        and open source software and the whole GNU/Linux ecosystem are the simple
        yet powerful tools available. The possibilities enabled by almost trivial
        programs are incredible. A very positive side effect this has on me is that
        I like to go and explore technologies with the tools at my disposal. My latest
        experiments revolved around the HTTP protocol, specifically HTTP headers,
        and very basic open source networking tools.</p>\n<section id=\"the-hypertext-transfer-protocol\"
        class=\"level2\">\n<h2 class=\"anchored\" data-anchor-id=\"the-hypertext-transfer-protocol\">The
        HyperText Transfer Protocol</h2>\n<p>Webservers on the internet sending a
        website to a browser use the HyperText Transfer Protocol (HTTP) to do so.
        Along with the HTML data for the page itself, the server answer includes additional
        information: Response code, cookies, and how the browser or proxy server should
        handle the contents is transfered within the <em>HTTP header</em>. The ability
        of the headers to control state on the client side is what makes them so interesting
        and the reason why we are going to have a closer look at them.</p>\n</section>\n<section
        id=\"communicating-with-netcat\" class=\"level2\">\n<h2 class=\"anchored\"
        data-anchor-id=\"communicating-with-netcat\">Communicating with <code>netcat</code></h2>\n<p>Instead
        of building our own HTTP client and server implementations \u2013 that would
        be total overkill \u2013 we restrict the goal to a simple networking tool
        that can be made to receive, send and alter basic HTTP commands: <code>netcat</code>,
        the self-described TCP/IP swiss army knife, combined with basic shell scripts.</p>\n<p>We
        start by setting up a basic echoing server which sends everything back the
        same way it was received.</p>\n<pre class=\"shell\"><code>nc -l -p 8042 -e
        '/bin/cat'</code></pre>\n<p>Pointing the browser at <code>http://localhost:8042</code>,
        then killing the <code>netcat</code> process manually by hitting <code>Control-C</code>,
        we can see the headers we sent within our browser. Everything that is send
        to our simple server is put through the <code>cat</code> program, which just
        passes it on to STDOUT, which is then sent back to the connecting browser.
        The process has to be terminated manually, as it doesn\u2019t know when to
        stop listening for more input. It\u2019s crude, yet effective.</p>\n</section>\n<section
        id=\"shell-scripting-for-more-advanced-features\" class=\"level2\">\n<h2 class=\"anchored\"
        data-anchor-id=\"shell-scripting-for-more-advanced-features\">Shell Scripting
        for more advanced features</h2>\n<p>The above is neither comfortable to use
        nor very good to toy with, so we replace <code>cat</code> with a script of
        our own, we\u2019ll call it <code>exploring-http.sh</code>:</p>\n<pre class=\"shell\"><code>#!/bin/sh\n\n#
        Keep reading everything until we hit the first empty line\nread_headers ()\n{\n
        \   read i\n    while [ -n \"$i\" ] &amp;&amp;\n          [ \"$(echo -n \"\\r\\n\")\"
        != \"$i\" ] &amp;&amp;\n          [ \"$(echo -n \"\\n\")\" != \"$i\" ]\n    do\n
        \       echo \"$i\"\n        read i\n    done\n}\nrequest_headers=\"$(read_headers)\"\n\n#
        Get some response headers ready\nresponse_headers ()\n{\n    printf \"HTTP/1.1
        200 OK\\r\\n\"\n    printf \"Content-Type: text/plain\\r\\n\"\n    printf
        \"\\r\\n\"\n}\n\n# Send the response\nrespond ()\n{\n    local response_headers=\"$(response_headers)\"\n
        \   echo \"${response_headers}\"\n    echo \"Browser Request Headers\"\n    echo
        \"=======================\"\n    echo \"$request_headers\"\n    echo \"\\r\\n\"\n
        \   echo \"Server Response Headers\"\n    echo \"=======================\"\n
        \   echo \"${response_headers}\"\n}\n\nrespond</code></pre>\n<p>The request
        send by the browser is read till we reach the first black line, signaling
        the end of the request header. This time, we follow the protocol by prefixing
        the content with very simple response headers before sending it back to the
        browser. We also don\u2019t have to manually terminate our <code>netcat</code>
        server, it terminates after answering to the request. Starting it again after
        each request is tedious, so we automate it and put it into a loop, restarting
        the server immediately once it terminates.</p>\n<pre class=\"shell\"><code>sh
        -c 'while true; do nc -l -p 8042 -e exploring-http.sh; done'</code></pre>\n<p>Now
        we are free to experiment with HTTP headers and the way browser and server
        interact. For example, we can let the server add a <code>Last-Modified</code>
        header, the content of which should be sent back by the browser in the next
        request:</p>\n<pre class=\"shell\"><code>response_headers ()\n{\n    printf
        \"HTTP/1.1 200 OK\\r\\n\"\n    printf \"Content-Type: text/plain\\r\\n\"\n
        \   printf \"Last-Modified: $(date --rfc-2822)\\r\\n\"\n    printf \"\\r\\n\"\n}</code></pre>\n<p>Reloading
        twice, and the browser request will change to send an additional <code>If-Modified-Since</code>
        header.</p>\n</section>\n<section id=\"etags\" class=\"level2\">\n<h2 class=\"anchored\"
        data-anchor-id=\"etags\">ETags</h2>\n<p>The functionality of ETags, designed
        to communicate caching of old files, can be used follow users around without
        the need of cookies. Let\u2019s see if we can do this with our little server.</p>\n<p>The
        function generating the response headers is modified to extract any ETag supplied
        by the browser. If none exists, we generate a new one by hashing the number
        of nanoseconds passed since the beginning of the UNIX epoche. The parsed or
        newly generated etag is then sent back to the browser. We also add a few header
        to make sure the conents isn\u2019t cached. As a result, we should be able
        to track a user through his or her browser cache.</p>\n<pre class=\"shell\"><code>response_headers
        ()\n{\n    local etag\n    etag=$(echo \"${request_headers}\" | sed -ne 's/^\\(If-None-Match:
        \"\\([a-f0-9]*\\)\".*\\)/\\2/gp')\n    printf \"HTTP/1.1 200 OK\\r\\n\"\n
        \   printf \"Content-Type: text/plain\\r\\n\"\n    printf \"Last-Modified:
        $(date --rfc-2822)\\r\\n\"\n    printf \"ETag: \\\"${etag:-$(date +%s%N |
        md5sum | cut -d' ' -f1)}\\\"\\r\\n\"\n    printf \"Expires: Tue, 01 Jan 2013
        00:00:01 GMT\\r\\n\"\n    printf \"Cache-Control: max-age=0\\r\\n\"\n    printf
        \"Connection: keep-alive\\r\\n\"\n    printf \"\\r\\n\"\n}</code></pre>\n<p>We
        can test this by reloading our test page twice and\u2026 it works! We can
        reload as often as we want, the ETag header sent by the browser will not change
        unless we clear the browser\u2019s cache. A stealthy kind of user tracking
        can be simulated with just a few lines of shell script.</p>\n</section>\n<section
        id=\"conclusion\" class=\"level2\">\n<h2 class=\"anchored\" data-anchor-id=\"conclusion\">Conclusion</h2>\n<p>Even
        though we used nothing but simple command line tools and shell scripting,
        we managed to build a simple server and to experiment with the ways in which
        stateless servers and stateful browseres can effect each other through HTTP
        headers. Standard UNIX tools are very powerful by themselves; together with
        a tool like <code>netcat</code>, power and fun extend even into experiments
        with networking and default protocols.</p>\n\n\n</section>\n\n ]]></description>\n
        \ <category>command-line</category>\n  <category>network</category>\n  <guid>https://tarleb.com/posts/exploring-http-headers/index.html</guid>\n
        \ <pubDate>Tue, 05 Nov 2013 00:00:00 GMT</pubDate>\n</item>\n<item>\n  <title>Russian
        Process Roulette</title>\n  <dc:creator>Albert Krewinkel</dc:creator>\n  <link>https://tarleb.com/posts/russian-process-roulette/index.html</link>\n
        \ <description><![CDATA[ \n\n\n\n<p>A couple of friends and I just discussed
        the idea of Russian Process Roulette: Everybody starts a little program which
        kills processes at random. The winner is the one whose computer remains usable
        the longest. Is this crazy? Yes. Immature? Sure. Fun? Definitely. Adviced
        against to actually play unless the consequences are fully understood? That
        too.</p>\n<p>Playing the game is as simple as starting a command like the
        following:</p>\n<pre class=\"shell\"><code>while sleep 600; do kill -9 $(tr
        -cd \"[:digit:]\" &lt; /dev/urandom | head -c5); done</code></pre>\n<p>This
        one-liner will wake up every 10 minutes, generate a random 5-digit number
        and then kill the process with the corresponding process ID. It will run forever,
        until it is either stopped, kills itself or has successfully crashed the user\u2019s
        session.</p>\n<p>Of course, there are some problems with this code. The time
        at which the next process will be killed is predictable, making it easier
        to prepare for the eventuality of a dying process. Worse, the range of random
        process ids (0 to 99999) is about three times as large as the actual range
        of process ids on a typical linux system (0 to 32768). This lowers the chance
        of hitting a valid process ID quite a bit. So let\u2019s put our scripting-fu
        to some misguided use and \u201Coptimize\u201D the code.</p>\n<p>The first
        step is to write a function which gives uniformly distributed random numbers
        below a threshold.</p>\n<pre class=\"shell\"><code>random_number_below ()
        {\n  local upperbound=$1\n  local candidate=$(( $1 + 1 ))\n  local maxlen=$(printf
        $upperbound | wc -c)\n  while [ $candidate -gt $upperbound ]\n  do\n      candidate=$(tr
        -cd '[:digit:]' &lt; /dev/urandom | head -c \"$maxlen\" )\n  done\n  echo
        $candidate\n}</code></pre>\n<p>Our random number generator is very very wasteful
        in terms of processor cycles. Even more, if the output of <code>/dev/urandom</code>
        is truly random, the function were not even guaranteed to terminate in any
        specified time frame. But given the nature of the application we have in mind,
        both caveats are completely acceptable here. Candidate numbers are generated
        by reading random characters from the systems urandom device, throwing away
        every character that isn\u2019t a digit. After this, the candidate number
        is checked to make sure we haven\u2019t generated a number greater than the
        specified upper bound. If that should be the case, we run the whole procedure
        again. Otherwise, the random number is returned. While wasteful, this function
        produces an unbiased uniform distribution on the interval [0, upperbound].</p>\n<p>The
        second problem, regarding the range of possible process identifiers, is easier
        to fix. A little bit of searching reveals that the largest possible process
        identifier can be read from the file <code>/proc/sys/kernel/pid_max</code>.
        With this functionality in our hands, we can now write a \u201Cbetter\u201D
        Russian Process Roulette script.</p>\n<pre class=\"shell\"><code>while sleep
        $(random_number_below 999)\ndo\n    local maxpid=$(cat /proc/sys/kernel/pid_max)\n
        \   kill -9 $(random_number_below \"$maxpid\")\ndone</code></pre>\n<p>We should
        (<em>probably not</em>) run this as <code>root</code>, thereby making sure
        no process is safe from our \u201Cprocess gun\u201D.</p>\n<p>While the result
        of our efforts isn\u2019t necessarily useful, it is still a nice exercises
        in shell scripting. Our game remains destructive and immature, but the execution
        is slightly more sophisticated. Hope you like it.</p>\n\n\n\n ]]></description>\n
        \ <category>command-line</category>\n  <category>nonsense</category>\n  <guid>https://tarleb.com/posts/russian-process-roulette/index.html</guid>\n
        \ <pubDate>Fri, 27 Sep 2013 00:00:00 GMT</pubDate>\n</item>\n<item>\n  <title>Avoid
        Mail Harvesting through Address Munging</title>\n  <dc:creator>Albert Krewinkel</dc:creator>\n
        \ <link>https://tarleb.com/posts/avoiding-spam/index.html</link>\n  <description><![CDATA[
        \n\n\n\n<p>Spam just doesn\u2019t die. Every major mail provider has really
        good spam filters in place, as do the common mail clients. Nontheless, there
        seem to be enough people reading \u2013 and acting on \u2013 spam mail to
        make it a profitable business. No matter how much we hate it, we need to deal
        with spam.</p>\n<p>Better than having a good spam filter is not to be spammed
        in the first place. Since nobody can sent me unsolicited bulk mail if they
        don\u2019t know my mail address, keeping the mail address as private as possible
        is the way to go here. But what if we <em>want</em> our e-mail address to
        be public for other people to reach us? Adding minor obstacles to make it
        just a bit more difficult for spammers to get the address can be enough.</p>\n<section
        id=\"address-munging\" class=\"level2\">\n<h2 class=\"anchored\" data-anchor-id=\"address-munging\">Address
        Munging</h2>\n<p>The usual way for spammers to collect email addresses is
        to crawl websites and to harvest everything that looks like a valid mail address.
        A common defense is <a href=\"https://en.wikipedia.org/wiki/Address_munging\">address
        munging</a>, i.e.&nbsp;resolving to bogus comments, additional markup, images
        or javascript to hide mail addresses from automatic harvesters. I find the
        use of images or javascript problematic for various reasons and just dislike
        unnecessary comments. Luckily, HTML5 and CSS3 make it really easy to mangle
        addresses without using either of these methods.</p>\n</section>\n<section
        id=\"obfuscating-an-address-with-html5-css3\" class=\"level2\">\n<h2 class=\"anchored\"
        data-anchor-id=\"obfuscating-an-address-with-html5-css3\">Obfuscating an Address
        with HTML5 &amp; CSS3</h2>\n<p>Our approach here leverages the HTML5 <a href=\"http://www.w3.org/TR/html5/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes\"><code>data-*</code></a>
        attributes as well as the <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/::before\"><code>::before</code></a>
        and <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/::after\"><code>::after</code></a>
        pseudo-elements. The mail address is divided and stored in custom data attributes
        and displayed as pseudo-elements. The address is kept in the markup, the presentation
        is handled in the style sheet:</p>\n<p>HTML:</p>\n<div class=\"sourceCode\"
        id=\"cb1\" style=\"background: #f1f3f5;\"><pre class=\"sourceCode html code-with-copy\"><code
        class=\"sourceCode html\"><span id=\"cb1-1\"><span class=\"kw\" style=\"color:
        #003B4F;\">&lt;span</span> <span class=\"er\" style=\"color: #AD0000;\">data-user</span><span
        class=\"ot\" style=\"color: #003B4F;\">=</span><span class=\"st\" style=\"color:
        #20794D;\">\"john.doe\"</span></span>\n<span id=\"cb1-2\"><span class=\"ot\"
        style=\"color: #003B4F;\">      data-domain=</span><span class=\"st\" style=\"color:
        #20794D;\">\"example.com\"</span></span>\n<span id=\"cb1-3\"><span class=\"ot\"
        style=\"color: #003B4F;\">      class=</span><span class=\"st\" style=\"color:
        #20794D;\">\"obfuscated-mail-address\"</span><span class=\"kw\" style=\"color:
        #003B4F;\">&gt;</span><span class=\"co\" style=\"color: #5E5E5E;\">&lt;!--</span></span>\n<span
        id=\"cb1-4\"><span class=\"co\" style=\"color: #5E5E5E;\">--&gt;</span>@<span
        class=\"kw\" style=\"color: #003B4F;\">&lt;span&gt;</span>obfuscated email
        address<span class=\"kw\" style=\"color: #003B4F;\">&lt;/span&gt;&lt;/span&gt;</span></span></code></pre></div>\n<p>CSS:</p>\n<div
        class=\"sourceCode\" id=\"cb2\" style=\"background: #f1f3f5;\"><pre class=\"sourceCode
        css code-with-copy\"><code class=\"sourceCode css\"><span id=\"cb2-1\"><span
        class=\"fu\" style=\"color: #4758AB;\">.obfuscated-mail-address</span><span
        class=\"in\" style=\"color: #5E5E5E;\">::before</span> {</span>\n<span id=\"cb2-2\">
        \ <span class=\"kw\" style=\"color: #003B4F;\">content</span>: <span class=\"fu\"
        style=\"color: #4758AB;\">attr(</span>data-user<span class=\"fu\" style=\"color:
        #4758AB;\">)</span><span class=\"op\" style=\"color: #5E5E5E;\">;</span></span>\n<span
        id=\"cb2-3\">}</span>\n<span id=\"cb2-4\"><span class=\"fu\" style=\"color:
        #4758AB;\">.obfuscated-mail-address</span><span class=\"in\" style=\"color:
        #5E5E5E;\">::after</span> {</span>\n<span id=\"cb2-5\">  <span class=\"kw\"
        style=\"color: #003B4F;\">content</span>: <span class=\"fu\" style=\"color:
        #4758AB;\">attr(</span>data-domain<span class=\"fu\" style=\"color: #4758AB;\">)</span><span
        class=\"op\" style=\"color: #5E5E5E;\">;</span></span>\n<span id=\"cb2-6\">}</span>\n<span
        id=\"cb2-7\"><span class=\"fu\" style=\"color: #4758AB;\">.obfuscated-email-address</span>
        <span class=\"op\" style=\"color: #5E5E5E;\">&gt;</span> <span class=\"op\"
        style=\"color: #5E5E5E;\">*</span> {</span>\n<span id=\"cb2-8\">  <span class=\"kw\"
        style=\"color: #003B4F;\">display</span>: <span class=\"dv\" style=\"color:
        #AD0000;\">none</span><span class=\"op\" style=\"color: #5E5E5E;\">;</span></span>\n<span
        id=\"cb2-9\">}</span></code></pre></div>\n<p>The result is readable, but can
        be neither selected nor copied:</p>\n<p><span class=\"obfuscated-mail-address
        dont-touch\" data-user=\"john.doe\" data-domain=\"example.com\"><!--\n--><span>obfuscated
        email address</span></span></p>\n<p>The nested <code>&lt;span&gt;</code> and
        its styling could be omitted, without changing the presentation in most browsers.
        We use it to ensures that everything fails gracefully in browsers with limited
        CSS support. To see why this matters, have a look at this page in a text browser
        like <em>w3m</em> or <em>links</em>.</p>\n</section>\n<section id=\"drawbacks\"
        class=\"level2\">\n<h2 class=\"anchored\" data-anchor-id=\"drawbacks\">Drawbacks</h2>\n<p>The
        biggest advantage of this method is also it\u2019s biggest disadvantage: The
        semantics are broken. The classic markup-code</p>\n<div class=\"sourceCode\"
        id=\"cb3\" style=\"background: #f1f3f5;\"><pre class=\"sourceCode html code-with-copy\"><code
        class=\"sourceCode html\"><span id=\"cb3-1\"><span class=\"kw\" style=\"color:
        #003B4F;\">&lt;a</span> <span class=\"er\" style=\"color: #AD0000;\">href</span><span
        class=\"ot\" style=\"color: #003B4F;\">=</span><span class=\"st\" style=\"color:
        #20794D;\">\"mailto:me@example.com\"</span><span class=\"kw\" style=\"color:
        #003B4F;\">&gt;</span>John Doe<span class=\"kw\" style=\"color: #003B4F;\">&lt;/a&gt;</span></span></code></pre></div>\n<p>is
        rendered as <a href=\"mailto:me@example.com\">John Doe</a> and makes it very
        clear, to machines and humans alike, that <em>John Doe</em> can be reached
        at <em>me@example.com</em>. Address munging, like the above, preserves this
        meaning for humans, but takes it away for machines. For better and for worse,
        browsers, search engines, and spam bots will not be aware of the meaning of
        the obfuscated address.</p>\n<p>These effects can be alleviated by resolving
        to additional javascript:</p>\n<div class=\"sourceCode\" id=\"cb4\" style=\"background:
        #f1f3f5;\"><pre class=\"sourceCode javascript code-with-copy\"><code class=\"sourceCode
        javascript\"><span id=\"cb4-1\"><span class=\"co\" style=\"color: #5E5E5E;\">//
        convert obfuscated mail addresses into clickable \"mailto:\" links</span></span>\n<span
        id=\"cb4-2\"><span class=\"fu\" style=\"color: #4758AB;\">jQuery</span>(<span
        class=\"st\" style=\"color: #20794D;\">\"document\"</span>)<span class=\"op\"
        style=\"color: #5E5E5E;\">.</span><span class=\"fu\" style=\"color: #4758AB;\">ready</span>(<span
        class=\"kw\" style=\"color: #003B4F;\">function</span>($) {</span>\n<span
        id=\"cb4-3\">  <span class=\"kw\" style=\"color: #003B4F;\">var</span> mailAddressClass
        <span class=\"op\" style=\"color: #5E5E5E;\">=</span> <span class=\"st\" style=\"color:
        #20794D;\">\"obfuscated-mail-address\"</span><span class=\"op\" style=\"color:
        #5E5E5E;\">;</span></span>\n<span id=\"cb4-4\">  <span class=\"fu\" style=\"color:
        #4758AB;\">$</span>(<span class=\"st\" style=\"color: #20794D;\">\".\"</span><span
        class=\"op\" style=\"color: #5E5E5E;\">+</span>mailAddressClass)<span class=\"op\"
        style=\"color: #5E5E5E;\">.</span><span class=\"fu\" style=\"color: #4758AB;\">each</span>(<span
        class=\"kw\" style=\"color: #003B4F;\">function</span>() {</span>\n<span id=\"cb4-5\">
        \   <span class=\"kw\" style=\"color: #003B4F;\">var</span> address <span
        class=\"op\" style=\"color: #5E5E5E;\">=</span> <span class=\"fu\" style=\"color:
        #4758AB;\">$</span>(<span class=\"kw\" style=\"color: #003B4F;\">this</span>)<span
        class=\"op\" style=\"color: #5E5E5E;\">.</span><span class=\"fu\" style=\"color:
        #4758AB;\">attr</span>(<span class=\"st\" style=\"color: #20794D;\">\"data-user\"</span>)
        <span class=\"op\" style=\"color: #5E5E5E;\">+</span> <span class=\"st\" style=\"color:
        #20794D;\">\"@\"</span> <span class=\"op\" style=\"color: #5E5E5E;\">+</span>
        <span class=\"fu\" style=\"color: #4758AB;\">$</span>(<span class=\"kw\" style=\"color:
        #003B4F;\">this</span>)<span class=\"op\" style=\"color: #5E5E5E;\">.</span><span
        class=\"fu\" style=\"color: #4758AB;\">attr</span>(<span class=\"st\" style=\"color:
        #20794D;\">\"data-domain\"</span>)<span class=\"op\" style=\"color: #5E5E5E;\">;</span></span>\n<span
        id=\"cb4-6\">    <span class=\"fu\" style=\"color: #4758AB;\">$</span>(<span
        class=\"kw\" style=\"color: #003B4F;\">this</span>)<span class=\"op\" style=\"color:
        #5E5E5E;\">.</span><span class=\"fu\" style=\"color: #4758AB;\">html</span>(<span
        class=\"fu\" style=\"color: #4758AB;\">$</span>(<span class=\"st\" style=\"color:
        #20794D;\">\"&lt;a href=</span><span class=\"sc\" style=\"color: #5E5E5E;\">\\\"</span><span
        class=\"st\" style=\"color: #20794D;\">mailto:\"</span> <span class=\"op\"
        style=\"color: #5E5E5E;\">+</span> address <span class=\"op\" style=\"color:
        #5E5E5E;\">+</span> <span class=\"st\" style=\"color: #20794D;\">\"</span><span
        class=\"sc\" style=\"color: #5E5E5E;\">\\\"</span><span class=\"st\" style=\"color:
        #20794D;\">&gt;\"</span> <span class=\"op\" style=\"color: #5E5E5E;\">+</span>
        address <span class=\"op\" style=\"color: #5E5E5E;\">+</span> <span class=\"st\"
        style=\"color: #20794D;\">\"&lt;/a&gt;\"</span><span class=\"op\" style=\"color:
        #5E5E5E;\">,</span> {}))<span class=\"op\" style=\"color: #5E5E5E;\">;</span></span>\n<span
        id=\"cb4-7\">    <span class=\"fu\" style=\"color: #4758AB;\">$</span>(<span
        class=\"kw\" style=\"color: #003B4F;\">this</span>)<span class=\"op\" style=\"color:
        #5E5E5E;\">.</span><span class=\"fu\" style=\"color: #4758AB;\">removeClass</span>(mailAddressClass)<span
        class=\"op\" style=\"color: #5E5E5E;\">;</span></span>\n<span id=\"cb4-8\">
        \ })<span class=\"op\" style=\"color: #5E5E5E;\">;</span></span>\n<span id=\"cb4-9\">})<span
        class=\"op\" style=\"color: #5E5E5E;\">;</span></span></code></pre></div>\n<p>The
        webpage is still usable with JavaScript turned off, and even fails gracefully
        on text-only browsers. If JavaScript is available, the obfuscated links offer
        the same experience as properly coded <code>&lt;a href=\"mailto:...\"&gt;...&lt;/a&gt;</code>
        links: <span class=\"obfuscated-mail-address\" data-user=\"john.doe\" data-domain=\"example.com\">@</span>.
        I believe this to be a very good trade-off between usability and safety from
        harvesters.</p>\n\n\n</section>\n\n ]]></description>\n  <category>html</category>\n
        \ <category>css</category>\n  <category>javascript</category>\n  <guid>https://tarleb.com/posts/avoiding-spam/index.html</guid>\n
        \ <pubDate>Sun, 25 Aug 2013 00:00:00 GMT</pubDate>\n</item>\n</channel>\n</rss>\n"
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - '*'
      Age:
      - '1'
      Cache-Control:
      - max-age=600
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Length:
      - '39350'
      Content-Type:
      - application/xml
      Date:
      - Tue, 17 Oct 2023 19:11:14 GMT
      Etag:
      - W/"64205d75-291df"
      Expires:
      - Tue, 17 Oct 2023 19:17:50 GMT
      Last-Modified:
      - Sun, 26 Mar 2023 14:57:57 GMT
      Server:
      - GitHub.com
      Vary:
      - Accept-Encoding
      Via:
      - 1.1 varnish
      X-Cache:
      - HIT
      X-Cache-Hits:
      - '1'
      X-Fastly-Request-ID:
      - 8f503bb390a283c87ab182b27b1a8dceece7ae17
      X-GitHub-Request-Id:
      - C440:E42E:176744A:17AC74D:652EDB86
      X-Served-By:
      - cache-ams21060-AMS
      X-Timer:
      - S1697569875.972640,VS0,VE1
      x-proxy-cache:
      - MISS
    status:
      code: 200
      message: OK
version: 1
