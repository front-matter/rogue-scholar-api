interactions:
- request:
    body: '{"authors": [{"name": "Ma\u00eblle Salmon", "url": "https://orcid.org/0000-0002-2815-0399"},
      {"name": "Yanina Bellini Saibene", "url": "https://orcid.org/0000-0002-4522-7466"}],
      "blog_id": "e22ws68", "blog_name": "rOpenSci - open tools for open science",
      "blog_slug": "ropensci", "content_html": "<p>As part of our <a href=\"/multilingual-publishing/\">multilingual
      publishing project</a>, and with <a href=\"https://www.r-consortium.org/all-projects/awarded-projects/2022-group-2\">funding
      from the R Consortium</a>, we&rsquo;ve worked on the R package <a href=\"https://docs.ropensci.org/babeldown/\">babeldown</a>
      for translating Markdown-based content using the DeepL API.In this tech note,
      we&rsquo;ll show how you can use babeldown to translate a Hugo blog post!</p><h2
      id=\"motivation\">Motivation</h2><p>Translating a Markdown blog post from your
      R console is not only more comfortable (when you&rsquo;ve already written said
      blog post in R), but also less frustrating.With babeldown, compared to copy-pasting
      the content of a blog post into some translation service, the Markdown syntax
      won&rsquo;t be broken<sup id=\"fnref:1\"><a href=\"#fn:1\" class=\"footnote-ref\"
      role=\"doc-noteref\">1</a></sup>, and code chunks won&rsquo;t be translated.This
      works, because under the hood, babeldown uses <a href=\"https://docs.ropensci.org/tinkr\">tinkr</a>
      to produce XML which it then sends to the DeepL API, flagging some tags as not
      to be translated. It then converts the XML translated by DeepL back into Markdown
      again.</p><p>Now, as you might expect this machine-translated content isn&rsquo;t
      perfect yet!You will still need a human or two to review and amend the translation.Why
      not have the humans translate the post from scratch then?We have observed that
      editing an automatic translation is faster than translating the whole post,
      and that it frees up mental space for focusing on implementing translation rules
      such as gender-neutral phrasing.</p><h2 id=\"setup\">Setup</h2><h3 id=\"pre-requisites-on-the-hugo-website\">Pre-requisites
      on the Hugo website</h3><p><a href=\"https://docs.ropensci.org/babeldown/reference/deepl_translate_hugo.html\"><code>babeldown::deepl_translate_hugo()</code></a>
      assumes the Hugo website uses</p><ul><li>leaf bundles (each post in a folder,
      <code>content/path-to-leaf-bundle/index.md</code>);</li><li>multilingualism
      so that a post in (for example) Spanish lives in <code>content/path-to-leaf-bundle/index.es.md</code>.</li></ul><p>babeldown
      could be extended work with other Hugo multilingual setups. If you&rsquo;d be
      interested in using babeldown with a different setup, please open an issue in
      the <a href=\"https://github.com/ropensci-review-tools/babeldown/\">babeldown
      repository</a>!</p><p>Note that babeldown won&rsquo;t be able to determine the
      default language of your website<sup id=\"fnref:2\"><a href=\"#fn:2\" class=\"footnote-ref\"
      role=\"doc-noteref\">2</a></sup> so even if your website&rsquo;s default language
      is English, babeldown will place an English translation in a file called &ldquo;.en.md&rdquo;
      not &ldquo;.md&rdquo;.Hugo will recognize the new file all the same (at least
      in our setup).</p><h3 id=\"deepl-pre-requisites\">DeepL pre-requisites</h3><p>First
      check that your desired source and target languages are supported by the DeepL
      API!Look up the <a href=\"https://www.deepl.com/docs-api/translate-text\">docs
      of the <code>source_lang</code> and <code>target_lang</code> API parameters</a>
      for a full list.</p><p>Once you know you&rsquo;ll be able to take advantage
      of the DeepL API, you&rsquo;ll need to create an account for <a href=\"https://www.deepl.com/en/docs-api/\">DeepL&rsquo;s
      translation service API</a>.Note that even getting a free account requires registering
      a payment method with them.</p><h3 id=\"r-pre-requisites\">R pre-requisites</h3><p>You&rsquo;ll
      need to install babeldown from rOpenSci R-universe:</p><div class=\"highlight\"><pre
      tabindex=\"0\" class=\"chroma\"><code class=\"language-r\" data-lang=\"r\"><span
      class=\"line\"><span class=\"cl\"><span class=\"nf\">install.packages</span><span
      class=\"p\">(</span><span class=\"s\">&#39;babeldown&#39;</span><span class=\"p\">,</span>
      <span class=\"n\">repos</span> <span class=\"o\">=</span> <span class=\"nf\">c</span><span
      class=\"p\">(</span><span class=\"s\">&#39;https://ropensci.r-universe.dev&#39;</span><span
      class=\"p\">,</span> <span class=\"s\">&#39;https://cloud.r-project.org&#39;</span><span
      class=\"p\">))</span></span></span></code></pre></div><p>Then, in each R session,
      set your DeepL API key via the environment variable DEEPL_API_KEY. You could
      store it once and for all with the <a href=\"https://r-lib.github.io/keyring/index.html\">keyring</a>
      package and retrieve it in your scripts like so:</p><div class=\"highlight\"><pre
      tabindex=\"0\" class=\"chroma\"><code class=\"language-r\" data-lang=\"r\"><span
      class=\"line\"><span class=\"cl\"><span class=\"nf\">Sys.setenv</span><span
      class=\"p\">(</span><span class=\"n\">DEEPL_API_KEY</span> <span class=\"o\">=</span>
      <span class=\"n\">keyring</span><span class=\"o\">::</span><span class=\"nf\">key_get</span><span
      class=\"p\">(</span><span class=\"s\">&#34;deepl&#34;</span><span class=\"p\">))</span></span></span></code></pre></div><p>Lastly,
      the DeepL API URL depends on your API plan.babeldown uses the DeepL free API
      URL by default.If you use a Pro plan, set the API URL in each R session/script
      via</p><div class=\"highlight\"><pre tabindex=\"0\" class=\"chroma\"><code class=\"language-r\"
      data-lang=\"r\"><span class=\"line\"><span class=\"cl\"><span class=\"nf\">Sys.setenv</span><span
      class=\"p\">(</span><span class=\"s\">&#34;DEEPL_API_URL&#34;</span> <span class=\"o\">=</span>
      <span class=\"s\">&#34;https://api.deepl.com&#34;</span><span class=\"p\">)</span></span></span></code></pre></div><h2
      id=\"translation\">Translation!</h2><p>You could run the code below</p><div
      class=\"highlight\"><pre tabindex=\"0\" class=\"chroma\"><code class=\"language-r\"
      data-lang=\"r\"><span class=\"line\"><span class=\"cl\"><span class=\"n\">babeldown</span><span
      class=\"o\">::</span><span class=\"nf\">deepl_translate_hugo</span><span class=\"p\">(</span></span></span><span
      class=\"line\"><span class=\"cl\">  <span class=\"n\">post_path</span> <span
      class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">path</span><span
      class=\"o\">-</span><span class=\"n\">to</span><span class=\"o\">-</span><span
      class=\"n\">post</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>
      </span></span><span class=\"line\"><span class=\"cl\">  <span class=\"n\">source_lang</span>
      <span class=\"o\">=</span> <span class=\"s\">&#34;EN&#34;</span><span class=\"p\">,</span></span></span><span
      class=\"line\"><span class=\"cl\">  <span class=\"n\">target_lang</span> <span
      class=\"o\">=</span> <span class=\"s\">&#34;ES&#34;</span><span class=\"p\">,</span></span></span><span
      class=\"line\"><span class=\"cl\">  <span class=\"n\">formality</span> <span
      class=\"o\">=</span> <span class=\"s\">&#34;less&#34;</span> <span class=\"c1\">#
      that&#39;s how we roll here!</span></span></span><span class=\"line\"><span
      class=\"cl\"><span class=\"p\">)</span></span></span></code></pre></div><p>but
      we&rsquo;d recommend a tad more work for your own good.</p><h2 id=\"translation-using-a-gitgithub-workflow\">Translation
      using a Git/GitHub workflow</h2><p>If you use version control, having the translation
      as a diff is very handy!</p><h3 id=\"first-in-words-and-pictures\">First: In
      words and pictures</h3><ul><li>In the branch of your post (let&rsquo;s call
      it &ldquo;new-post&rdquo;) create a placeholder: save your original blog post
      (<code>index.es.md</code>) under the target blog post name (<code>index.en.md</code>)
      and commit it, then push.</li></ul><figure><img src=\"placeholder.png\"         alt=\"Diagram
      with on the left the leaf folder in the new-post branch with the post in Spanish
      with the text &#39;Hola&#39; and an image; on the right the leaf folder in the
      new-post branch with the post in Spanish with the text &#39;hola&#39;, the post
      with the English target filename with the text &#39;hola&#39;, and the image.\"/></figure><ul><li>Create
      a new branch, &ldquo;auto-translate&rdquo; for instance.</li><li>Run <code>babeldown::deepl_translate_hugo()</code>
      with <code>force = TRUE</code>.</li></ul><figure><img src=\"translate.png\"         alt=\"Diagram
      with on the left the leaf folder in the auto-translate branch with the post
      in Spanish with the text &#39;hola&#39;, the post with the English target filename
      with the text &#39;hola&#39;, and the image; on the right the only thing that
      changed is that the content of the post with the English target filename is
      now &#39;hello&#39;.\"/></figure><ul><li>Commit and push the result.</li><li>Open
      a PR from the <strong>&ldquo;translation-tech-note&rdquo;</strong> branch to
      the <strong>&ldquo;new-post&rdquo;</strong> branch.The only difference between
      the two branches is the automatic translation of your post. The diff for the
      target blog post will be the diff between the source and target languages! If
      you have the good habit to start a new line after each sentence / sentence part,
      it&rsquo;s even better.</li></ul><figure><img src=\"pr.png\"         alt=\"Drawing
      of the pull request from the auto-translate to the new-post branch where the
      difference is that the content of the post with the English target filename
      has now been translated to English.\"/></figure><ul><li>The human translators
      can then a open a second PR to the translation branch with their edits! Or they
      can add their edits as <a href=\"https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/commenting-on-a-pull-request#adding-comments-to-a-pull-request\">PR
      suggestions</a>.</li></ul><h3 id=\"again-in-code\">Again: In code</h3><p>Now
      let&rsquo;s go over this again, but with a coding workflow. Here, we&rsquo;ll
      use fs and gert (but you do you!), and we&rsquo;ll assume your current directory
      is the root of the website folder, and also the root of the git repository.</p><ul><li>In
      the post branch, (again, let&rsquo;s call it &ldquo;new-post&rdquo;), save your
      original blog post (<code>index.es.md</code>) under the target blog post name
      (<code>index.en.md</code>) and commit it, then push.</li></ul><div class=\"highlight\"><pre
      tabindex=\"0\" class=\"chroma\"><code class=\"language-r\" data-lang=\"r\"><span
      class=\"line\"><span class=\"cl\"><span class=\"n\">fs</span><span class=\"o\">::</span><span
      class=\"nf\">file_copy</span><span class=\"p\">(</span></span></span><span class=\"line\"><span
      class=\"cl\">  <span class=\"nf\">file.path</span><span class=\"p\">(</span><span
      class=\"s\">&#34;content&#34;</span><span class=\"p\">,</span> <span class=\"s\">&#34;blog&#34;</span><span
      class=\"p\">,</span> <span class=\"s\">&#34;2023-10-01-r-universe-interviews&#34;</span><span
      class=\"p\">,</span> <span class=\"s\">&#34;index.es.md&#34;</span><span class=\"p\">),</span></span></span><span
      class=\"line\"><span class=\"cl\">  <span class=\"nf\">file.path</span><span
      class=\"p\">(</span><span class=\"s\">&#34;content&#34;</span><span class=\"p\">,</span>
      <span class=\"s\">&#34;blog&#34;</span><span class=\"p\">,</span> <span class=\"s\">&#34;2023-10-01-r-universe-interviews&#34;</span><span
      class=\"p\">,</span> <span class=\"s\">&#34;index.en.md&#34;</span><span class=\"p\">)</span></span></span><span
      class=\"line\"><span class=\"cl\"><span class=\"p\">)</span></span></span><span
      class=\"line\"><span class=\"cl\"><span class=\"n\">gert</span><span class=\"o\">::</span><span
      class=\"nf\">git_add</span><span class=\"p\">(</span><span class=\"nf\">file.path</span><span
      class=\"p\">(</span><span class=\"s\">&#34;content&#34;</span><span class=\"p\">,</span>
      <span class=\"s\">&#34;blog&#34;</span><span class=\"p\">,</span> <span class=\"s\">&#34;2023-10-01-r-universe-interviews&#34;</span><span
      class=\"p\">,</span> <span class=\"s\">&#34;index.en.md&#34;</span><span class=\"p\">))</span></span></span><span
      class=\"line\"><span class=\"cl\"><span class=\"n\">gert</span><span class=\"o\">::</span><span
      class=\"nf\">git_commit</span><span class=\"p\">(</span><span class=\"s\">&#34;Add
      translation placeholder&#34;</span><span class=\"p\">)</span></span></span><span
      class=\"line\"><span class=\"cl\"><span class=\"n\">gert</span><span class=\"o\">::</span><span
      class=\"nf\">git_push</span><span class=\"p\">()</span></span></span></code></pre></div><ul><li>Create
      a new branch, &ldquo;auto-translate&rdquo; for instance.</li></ul><div class=\"highlight\"><pre
      tabindex=\"0\" class=\"chroma\"><code class=\"language-r\" data-lang=\"r\"><span
      class=\"line\"><span class=\"cl\"><span class=\"n\">gert</span><span class=\"o\">::</span><span
      class=\"nf\">git_branch_create</span><span class=\"p\">(</span><span class=\"s\">&#34;translation-tech-note&#34;</span><span
      class=\"p\">)</span></span></span></code></pre></div><ul><li>Run <code>babeldown::deepl_translate_hugo()</code>
      with <code>force = TRUE</code>.</li></ul><div class=\"highlight\"><pre tabindex=\"0\"
      class=\"chroma\"><code class=\"language-r\" data-lang=\"r\"><span class=\"line\"><span
      class=\"cl\"><span class=\"n\">babeldown</span><span class=\"o\">::</span><span
      class=\"nf\">deepl_translate_hugo</span><span class=\"p\">(</span></span></span><span
      class=\"line\"><span class=\"cl\">  <span class=\"n\">post_path</span> <span
      class=\"o\">=</span> <span class=\"nf\">file.path</span><span class=\"p\">(</span><span
      class=\"s\">&#34;content&#34;</span><span class=\"p\">,</span> <span class=\"s\">&#34;blog&#34;</span><span
      class=\"p\">,</span> <span class=\"s\">&#34;2023-10-01-r-universe-interviews&#34;</span><span
      class=\"p\">,</span> <span class=\"s\">&#34;index.es.md&#34;</span><span class=\"p\">),</span></span></span><span
      class=\"line\"><span class=\"cl\">  <span class=\"n\">force</span> <span class=\"o\">=</span>
      <span class=\"kc\">TRUE</span><span class=\"p\">,</span></span></span><span
      class=\"line\"><span class=\"cl\">  <span class=\"n\">yaml_fields</span> <span
      class=\"o\">=</span> <span class=\"nf\">c</span><span class=\"p\">(</span><span
      class=\"s\">&#34;title&#34;</span><span class=\"p\">,</span> <span class=\"s\">&#34;description&#34;</span><span
      class=\"p\">,</span> <span class=\"s\">&#34;tags&#34;</span><span class=\"p\">),</span></span></span><span
      class=\"line\"><span class=\"cl\">  <span class=\"n\">source_lang</span> <span
      class=\"o\">=</span> <span class=\"s\">&#34;ES&#34;</span><span class=\"p\">,</span></span></span><span
      class=\"line\"><span class=\"cl\">  <span class=\"n\">target_lang</span> <span
      class=\"o\">=</span> <span class=\"s\">&#34;EN-US&#34;</span></span></span><span
      class=\"line\"><span class=\"cl\"><span class=\"p\">)</span></span></span></code></pre></div><p>You
      can also omit the <code>post_path</code> argument if you&rsquo;re running the
      code from RStudio IDE and if the open and focused file (the one you see above
      your console) is the post to be translated.</p><div class=\"highlight\"><pre
      tabindex=\"0\" class=\"chroma\"><code class=\"language-r\" data-lang=\"r\"><span
      class=\"line\"><span class=\"cl\"><span class=\"n\">babeldown</span><span class=\"o\">::</span><span
      class=\"nf\">deepl_translate_hugo</span><span class=\"p\">(</span></span></span><span
      class=\"line\"><span class=\"cl\">  <span class=\"n\">force</span> <span class=\"o\">=</span>
      <span class=\"kc\">TRUE</span><span class=\"p\">,</span></span></span><span
      class=\"line\"><span class=\"cl\">  <span class=\"n\">yaml_fields</span> <span
      class=\"o\">=</span> <span class=\"nf\">c</span><span class=\"p\">(</span><span
      class=\"s\">&#34;title&#34;</span><span class=\"p\">,</span> <span class=\"s\">&#34;description&#34;</span><span
      class=\"p\">,</span> <span class=\"s\">&#34;tags&#34;</span><span class=\"p\">),</span></span></span><span
      class=\"line\"><span class=\"cl\">  <span class=\"n\">source_lang</span> <span
      class=\"o\">=</span> <span class=\"s\">&#34;ES&#34;</span><span class=\"p\">,</span></span></span><span
      class=\"line\"><span class=\"cl\">  <span class=\"n\">target_lang</span> <span
      class=\"o\">=</span> <span class=\"s\">&#34;EN-US&#34;</span></span></span><span
      class=\"line\"><span class=\"cl\"><span class=\"p\">)</span></span></span></code></pre></div><ul><li>Commit
      the result with the code below.</li></ul><div class=\"highlight\"><pre tabindex=\"0\"
      class=\"chroma\"><code class=\"language-r\" data-lang=\"r\"><span class=\"line\"><span
      class=\"cl\"><span class=\"n\">gert</span><span class=\"o\">::</span><span class=\"nf\">git_add</span><span
      class=\"p\">(</span><span class=\"nf\">file.path</span><span class=\"p\">(</span><span
      class=\"s\">&#34;content&#34;</span><span class=\"p\">,</span> <span class=\"s\">&#34;blog&#34;</span><span
      class=\"p\">,</span> <span class=\"s\">&#34;2023-10-01-r-universe-interviews&#34;</span><span
      class=\"p\">,</span> <span class=\"s\">&#34;index.en.md&#34;</span><span class=\"p\">))</span></span></span><span
      class=\"line\"><span class=\"cl\"><span class=\"n\">gert</span><span class=\"o\">::</span><span
      class=\"nf\">git_commit</span><span class=\"p\">(</span><span class=\"s\">&#34;Add
      translation&#34;</span><span class=\"p\">)</span></span></span><span class=\"line\"><span
      class=\"cl\"><span class=\"n\">gert</span><span class=\"o\">::</span><span class=\"nf\">git_push</span><span
      class=\"p\">()</span></span></span></code></pre></div><ul><li><p>Open a PR from
      the <strong>&ldquo;translation-tech-note&rdquo;</strong> branch to the <strong>&ldquo;new-post&rdquo;</strong>
      branch.The only difference between the two branches is the automatic translation
      of <code>&quot;content/blog/2023-10-01-r-universe-interviews/index.en.md&quot;</code>.</p></li><li><p>The
      human translators can then a open a <em>second</em> PR to the translation branch
      with their edits! Or they can add their edits as <a href=\"https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/commenting-on-a-pull-request#adding-comments-to-a-pull-request\">PR
      suggestions</a>.</p></li></ul><h3 id=\"summary-of-branches-and-prs\">Summary
      of branches and PRs</h3><p>In the end there should be two to three branches:</p><ul><li>branch
      A with blog post in Spanish and placeholder blog post for English (with Spanish
      content) &ndash; PR to main;</li><li>branch B with blog post automatically translated
      to English &ndash; PR to branch A;</li><li>Optionally branch C with blog post&rsquo;s
      English automatic translation edited by a human &ndash; PR to branch B. If branch
      C does not exist, edits by a human are made as PR review suggestions in the
      PR from B to A.</li></ul><p>The PR are merged in this order:</p><ul><li>PR to
      branch B;</li><li>PR to branch A;</li><li>PR to main.</li></ul><h3 id=\"real-example\">Real
      example</h3><ul><li><a href=\"https://github.com/ropensci/roweb3/pull/629\">PR
      adding a post to the rOpenSci blog</a>, notice it&rsquo;s a PR from the <strong>&ldquo;r-universe-interviews&rdquo;</strong>
      branch to the <strong>&ldquo;main&rdquo; (default)</strong> branch;</li><li><a
      href=\"https://github.com/ropensci/roweb3/pull/639\">PR adding the automatic
      translation</a>, notice it&rsquo;s a PR to the <strong>&ldquo;r-universe-interviews&rdquo;</strong>
      branch.</li></ul><figure><img src=\"pr-diff.png\"         alt=\"Screenshot of
      the files tab of the pull request adding the automatic translation, where we
      observe Spanish text in the YAML metadata and Markdown content has been translated
      to English.\"/></figure><p>Yanina tweaked the automatic translation by suggesting
      changes on the PR, then accepting them.</p><figure><img src=\"pr-comments.png\"         alt=\"Screenshot
      of the main tab of the pull request adding the automatic translation, where
      we observe a comment by Yanina replacing the word &#39;article&#39; with &#39;blog
      post&#39; and fixing the name of &#39;R-universe&#39;.\"/></figure><h3 id=\"yaml-fields\">YAML
      fields</h3><p>By default babeldown translates the YAML fields &ldquo;title&rdquo;
      and &ldquo;description&rdquo;.If you have text in more of them, use the <code>yaml_fields</code>
      argument of <code>babeldown::deepl_translate_hugo()</code>.</p><p>Note that
      if babeldown translates the title, it updates the slug.</p><h3 id=\"glossary\">Glossary</h3><p>Imagine
      you have a few preferences for some words &ndash; something you&rsquo;ll build
      up over time.</p><div class=\"highlight\"><pre tabindex=\"0\" class=\"chroma\"><code
      class=\"language-r\" data-lang=\"r\"><span class=\"line\"><span class=\"cl\"><span
      class=\"n\">readr</span><span class=\"o\">::</span><span class=\"nf\">read_csv</span><span
      class=\"p\">(</span></span></span><span class=\"line\"><span class=\"cl\">  <span
      class=\"nf\">system.file</span><span class=\"p\">(</span><span class=\"s\">&#34;example-es-en.csv&#34;</span><span
      class=\"p\">,</span> <span class=\"n\">package</span> <span class=\"o\">=</span>
      <span class=\"s\">&#34;babeldown&#34;</span><span class=\"p\">),</span> </span></span><span
      class=\"line\"><span class=\"cl\">  <span class=\"n\">show_col_types</span>
      <span class=\"o\">=</span> <span class=\"kc\">FALSE</span></span></span><span
      class=\"line\"><span class=\"cl\"><span class=\"p\">)</span></span></span></code></pre></div><pre
      tabindex=\"0\"><code>## # A tibble: 2 \u00d7 2##   Spanish     English   ##   &lt;chr&gt;       &lt;chr&gt;     ##
      1 paquete     package   ## 2 repositorio repository</code></pre><p>You can record
      these preferred translations in a glossary in your DeepL account</p><div class=\"highlight\"><pre
      tabindex=\"0\" class=\"chroma\"><code class=\"language-r\" data-lang=\"r\"><span
      class=\"line\"><span class=\"cl\"><span class=\"nf\">deepl_upsert_glossary</span><span
      class=\"p\">(</span></span></span><span class=\"line\"><span class=\"cl\">  <span
      class=\"o\">&lt;</span><span class=\"n\">path</span><span class=\"o\">-</span><span
      class=\"n\">to</span><span class=\"o\">-</span><span class=\"n\">csv</span><span
      class=\"o\">-</span><span class=\"n\">file</span><span class=\"o\">&gt;</span><span
      class=\"p\">,</span></span></span><span class=\"line\"><span class=\"cl\">  <span
      class=\"n\">glossary_name</span> <span class=\"o\">=</span> <span class=\"s\">&#34;rstats-glosario&#34;</span><span
      class=\"p\">,</span></span></span><span class=\"line\"><span class=\"cl\">  <span
      class=\"n\">target_lang</span> <span class=\"o\">=</span> <span class=\"s\">&#34;Spanish&#34;</span><span
      class=\"p\">,</span></span></span><span class=\"line\"><span class=\"cl\">  <span
      class=\"n\">source_lang</span> <span class=\"o\">=</span> <span class=\"s\">&#34;English&#34;</span></span></span><span
      class=\"line\"><span class=\"cl\"><span class=\"p\">)</span></span></span></code></pre></div><p>You&rsquo;d
      use the exact same code to <em>update</em> the glossary hence the name &ldquo;upsert&rdquo;
      for the function.You need one glossary per source language / target language
      pair: the English-Spanish glossary can&rsquo;t be used for Spanish to English
      for instance.</p><p>In your <code>babeldown::deepl_translate_hugo()</code> call
      you then use the glossary name (here &ldquo;rstats-glosario&rdquo;) for the
      <code>glossary</code> argument.</p><h3 id=\"formality\">Formality</h3><p><code>deepl_translate_hugo()</code>
      has a <code>formality</code> argument.Now, the DeepL API only supports this
      for some languages as explained in the <a href=\"https://www.deepl.com/docs-api/translate-text\">documentation
      of the <code>formality</code> API parameter</a>:</p><blockquote><p>Sets whether
      the translated text should lean towards formal or informal language. This feature
      currently only works for target languages DE (German), FR (French), IT (Italian),
      ES (Spanish), NL (Dutch), PL (Polish), PT-BR and PT-PT (Portuguese), JA (Japanese),
      and RU (Russian). (&hellip;) Setting this parameter with a target language that
      does not support formality will fail, unless one of the prefer_&hellip; options
      are used.</p></blockquote><p>Therefore to be sure a translation will work, instead
      of writing <code>formality = &quot;less&quot;</code> you can write <code>formality
      = &quot;prefer_less&quot;</code> which will only use formality if available.</p><h2
      id=\"conclusion\">Conclusion</h2><p>In this post we explained how to translate
      a Hugo blog post using babeldown.Although the gist is to use one call to <code>babeldown::deepl_translate_hugo()</code>,</p><ul><li>one
      needs to indicate the API URL and key,</li><li>one can improve results by using
      the function&rsquo;s different arguments,</li><li>we recommend pairing the translation
      with a Git + GitHub (or GitLab, gitea&hellip;) workflow.</li></ul><p>babeldown
      has <a href=\"https://docs.ropensci.org/babeldown/reference/index.html\">functions</a>
      for translating Quarto book chapters, any Markdown file, and any Markdown string,
      with similar arguments and recommended usage, so explore its reference!</p><p>We&rsquo;d
      be happy to hear about your <a href=\"/usecases/\">use cases</a>.</p><div class=\"footnotes\"
      role=\"doc-endnotes\"><hr><ol><li id=\"fn:1\"><p>But you should refer to <a
      href=\"https://docs.ropensci.org/tinkr/#loss-of-markdown-style\">tinkr docs</a>
      to see what might change in the Markdown syntax style.&#160;<a href=\"#fnref:1\"
      class=\"footnote-backref\" role=\"doc-backlink\">&#x21a9;&#xfe0e;</a></p></li><li
      id=\"fn:2\"><p>adding code to handle Hugo&rsquo;s <a href=\"https://github.com/r-lib/hugodown/issues/14#issuecomment-632850506\">&ldquo;bewildering
      array of possible config locations&rdquo;</a> and two possible formats (YAML
      and TOML) is out of scope for babeldown at this point.&#160;<a href=\"#fnref:2\"
      class=\"footnote-backref\" role=\"doc-backlink\">&#x21a9;&#xfe0e;</a></p></li></ol></div>",
      "content_text": "content_text", "images": [{"src": "placeholder.png", "alt":
      "Diagram with on the left the leaf folder in the new-post branch with the post
      in Spanish with the text ''Hola'' and an image; on the right the leaf folder
      in the new-post branch with the post in Spanish with the text ''hola'', the
      post with the English target filename with the text ''hola'', and the image."},
      {"src": "translate.png", "alt": "Diagram with on the left the leaf folder in
      the auto-translate branch with the post in Spanish with the text ''hola'', the
      post with the English target filename with the text ''hola'', and the image;
      on the right the only thing that changed is that the content of the post with
      the English target filename is now ''hello''."}, {"src": "pr.png", "alt": "Drawing
      of the pull request from the auto-translate to the new-post branch where the
      difference is that the content of the post with the English target filename
      has now been translated to English."}, {"src": "pr-diff.png", "alt": "Screenshot
      of the files tab of the pull request adding the automatic translation, where
      we observe Spanish text in the YAML metadata and Markdown content has been translated
      to English."}, {"src": "pr-comments.png", "alt": "Screenshot of the main tab
      of the pull request adding the automatic translation, where we observe a comment
      by Yanina replacing the word ''article'' with ''blog post'' and fixing the name
      of ''R-universe''."}], "updated_at": 1695713432, "published_at": 1695686400,
      "image": "placeholder.png", "language": "en", "reference": [], "relationships":
      [], "summary": "<p>As part of our <a href=\"/multilingual-publishing/\">multilingual
      publishing project</a>, and with <a href=\"https://www.r-consortium.org/all-projects/awarded-projects/2022-group-2\">funding
      from the R Consortium</a>, we&rsquo;ve worked on the R package <a href=\"https://docs.ropensci.org/babeldown/\">babeldown</a>
      for translating Markdown-based content using the DeepL API.In this tech note,
      we&rsquo;ll show how you can use babeldown to translate a Hugo blog post!",
      "tags": ["Tech Notes", "Multilingual"], "title": "How to Translate a Hugo Blog
      Post with Babeldown", "url": "https://ropensci.org/blog/2023/09/26/how-to-translate-a-hugo-blog-post-with-babeldown",
      "guid": null, "archive_url": null}'
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      accept-profile:
      - public
      connection:
      - keep-alive
      content-length:
      - '28059'
      content-profile:
      - public
      content-type:
      - application/json
      host:
      - db.rogue-scholar.org
      prefer:
      - return=representation,resolution=merge-duplicates
      user-agent:
      - python-httpx/0.24.1
      x-client-info:
      - supabase-py/1.2.0
    method: POST
    uri: https://db.rogue-scholar.org/rest/v1/posts?on_conflict=url
  response:
    content: '{"code":"42703","details":null,"hint":null,"message":"record \"new\"
      has no field \"uuid\""}'
    headers:
      Access-Control-Allow-Origin:
      - '*'
      CF-Cache-Status:
      - DYNAMIC
      CF-Ray:
      - 81ad9a7b8e84c49a-DUS
      Connection:
      - keep-alive
      Content-Type:
      - application/json; charset=utf-8
      Date:
      - Mon, 23 Oct 2023 23:01:42 GMT
      Server:
      - cloudflare
      Strict-Transport-Security:
      - max-age=2592000; includeSubDomains
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      Via:
      - kong/2.8.1
      X-Kong-Proxy-Latency:
      - '1'
      X-Kong-Upstream-Latency:
      - '3'
      alt-svc:
      - h3=":443"; ma=86400
      sb-gateway-version:
      - '1'
    http_version: HTTP/1.1
    status_code: 400
version: 1
