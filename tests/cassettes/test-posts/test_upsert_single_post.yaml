interactions:
- request:
    body: '{"authors": [{"name": "Ma\u00eblle Salmon", "url": "https://orcid.org/0000-0002-2815-0399"},
      {"name": "Yanina Bellini Saibene", "url": "https://orcid.org/0000-0002-4522-7466"}],
      "blog_name": "rOpenSci - open tools for open science", "blog_slug": "ropensci",
      "content_text": "As part of our [multilingual publishing\nproject](/multilingual-publishing/),
      and with [funding from the R\nConsortium](https://www.r-consortium.org/all-projects/awarded-projects/2022-group-2),\nwe''ve
      worked on the R package\n[babeldown](https://docs.ropensci.org/babeldown/) for
      translating\nMarkdown-based content using the DeepL API.In this tech note, we''ll
      show\nhow you can use babeldown to translate a Hugo blog post!\n\n## Motivation\n\nTranslating
      a Markdown blog post from your R console is not only more\ncomfortable (when
      you''ve already written said blog post in R), but also\nless frustrating.With
      babeldown, compared to copy-pasting the content of\na blog post into some translation
      service, the Markdown syntax won''t be\nbroken^[1](#fn:1){.footnote-ref role=\"doc-noteref\"}^,
      and code chunks\nwon''t be translated.This works, because under the hood, babeldown
      uses\n[tinkr](https://docs.ropensci.org/tinkr) to produce XML which it then\nsends
      to the DeepL API, flagging some tags as not to be translated. It\nthen converts
      the XML translated by DeepL back into Markdown again.\n\nNow, as you might expect
      this machine-translated content isn''t perfect\nyet!You will still need a human
      or two to review and amend the\ntranslation.Why not have the humans translate
      the post from scratch\nthen?We have observed that editing an automatic translation
      is faster\nthan translating the whole post, and that it frees up mental space
      for\nfocusing on implementing translation rules such as gender-neutral\nphrasing.\n\n##
      Setup\n\n### Pre-requisites on the Hugo website\n\n[`babeldown::deepl_translate_hugo()`](https://docs.ropensci.org/babeldown/reference/deepl_translate_hugo.html)\nassumes
      the Hugo website uses\n\n- leaf bundles (each post in a folder,\n  `content/path-to-leaf-bundle/index.md`);\n-
      multilingualism so that a post in (for example) Spanish lives in\n  `content/path-to-leaf-bundle/index.es.md`.\n\nbabeldown
      could be extended work with other Hugo multilingual setups. If\nyou''d be interested
      in using babeldown with a different setup, please\nopen an issue in the [babeldown\nrepository](https://github.com/ropensci-review-tools/babeldown/)!\n\nNote
      that babeldown won''t be able to determine the default language of\nyour website^[2](#fn:2){.footnote-ref
      role=\"doc-noteref\"}^ so even if\nyour website''s default language is English,
      babeldown will place an\nEnglish translation in a file called \".en.md\" not
      \".md\".Hugo will\nrecognize the new file all the same (at least in our setup).\n\n###
      DeepL pre-requisites\n\nFirst check that your desired source and target languages
      are supported\nby the DeepL API!Look up the [docs of the `source_lang` and\n`target_lang`
      API\nparameters](https://www.deepl.com/docs-api/translate-text) for a full\nlist.\n\nOnce
      you know you''ll be able to take advantage of the DeepL API, you''ll\nneed to
      create an account for [DeepL''s translation service\nAPI](https://www.deepl.com/en/docs-api/).Note
      that even getting a free\naccount requires registering a payment method with
      them.\n\n### R pre-requisites\n\nYou''ll need to install babeldown from rOpenSci
      R-universe:\n\n::: {.highlight}\n``` {.chroma tabindex=\"0\"}\ninstall.packages(''babeldown'',
      repos = c(''https://ropensci.r-universe.dev'', ''https://cloud.r-project.org''))\n```\n:::\n\nThen,
      in each R session, set your DeepL API key via the environment\nvariable DEEPL_API_KEY.
      You could store it once and for all with the\n[keyring](https://r-lib.github.io/keyring/index.html)
      package and\nretrieve it in your scripts like so:\n\n::: {.highlight}\n``` {.chroma
      tabindex=\"0\"}\nSys.setenv(DEEPL_API_KEY = keyring::key_get(\"deepl\"))\n```\n:::\n\nLastly,
      the DeepL API URL depends on your API plan.babeldown uses the\nDeepL free API
      URL by default.If you use a Pro plan, set the API URL in\neach R session/script
      via\n\n::: {.highlight}\n``` {.chroma tabindex=\"0\"}\nSys.setenv(\"DEEPL_API_URL\"
      = \"https://api.deepl.com\")\n```\n:::\n\n## Translation!\n\nYou could run the
      code below\n\n::: {.highlight}\n``` {.chroma tabindex=\"0\"}\nbabeldown::deepl_translate_hugo(  post_path
      = <path-to-post>,   source_lang = \"EN\",  target_lang = \"ES\",  formality
      = \"less\" # that''s how we roll here!)\n```\n:::\n\nbut we''d recommend a tad
      more work for your own good.\n\n## Translation using a Git/GitHub workflow\n\nIf
      you use version control, having the translation as a diff is very\nhandy!\n\n###
      First: In words and pictures\n\n- In the branch of your post (let''s call it
      \"new-post\") create a\n  placeholder: save your original blog post (`index.es.md`)
      under the\n  target blog post name (`index.en.md`) and commit it, then push.\n\n<figure>\n<img
      src=\"placeholder.png\"\nalt=\"Diagram with on the left the leaf folder in the
      new-post branch with the post in Spanish with the text &#39;Hola&#39; and an
      image; on the right the leaf folder in the new-post branch with the post in
      Spanish with the text &#39;hola&#39;, the post with the English target filename
      with the text &#39;hola&#39;, and the image.\" />\n</figure>\n\n- Create a new
      branch, \"auto-translate\" for instance.\n- Run `babeldown::deepl_translate_hugo()`
      with `force = TRUE`.\n\n<figure>\n<img src=\"translate.png\"\nalt=\"Diagram
      with on the left the leaf folder in the auto-translate branch with the post
      in Spanish with the text &#39;hola&#39;, the post with the English target filename
      with the text &#39;hola&#39;, and the image; on the right the only thing that
      changed is that the content of the post with the English target filename is
      now &#39;hello&#39;.\" />\n</figure>\n\n- Commit and push the result.\n- Open
      a PR from the **\"translation-tech-note\"** branch to the\n  **\"new-post\"**
      branch.The only difference between the two branches is\n  the automatic translation
      of your post. The diff for the target blog\n  post will be the diff between
      the source and target languages! If you\n  have the good habit to start a new
      line after each sentence / sentence\n  part, it''s even better.\n\n<figure>\n<img
      src=\"pr.png\"\nalt=\"Drawing of the pull request from the auto-translate to
      the new-post branch where the difference is that the content of the post with
      the English target filename has now been translated to English.\" />\n</figure>\n\n-
      The human translators can then a open a second PR to the translation\n  branch
      with their edits! Or they can add their edits as [PR\n  suggestions](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/commenting-on-a-pull-request#adding-comments-to-a-pull-request).\n\n###
      Again: In code\n\nNow let''s go over this again, but with a coding workflow.
      Here, we''ll\nuse fs and gert (but you do you!), and we''ll assume your current\ndirectory
      is the root of the website folder, and also the root of the\ngit repository.\n\n-
      In the post branch, (again, let''s call it \"new-post\"), save your\n  original
      blog post (`index.es.md`) under the target blog post name\n  (`index.en.md`)
      and commit it, then push.\n\n::: {.highlight}\n``` {.chroma tabindex=\"0\"}\nfs::file_copy(  file.path(\"content\",
      \"blog\", \"2023-10-01-r-universe-interviews\", \"index.es.md\"),  file.path(\"content\",
      \"blog\", \"2023-10-01-r-universe-interviews\", \"index.en.md\"))gert::git_add(file.path(\"content\",
      \"blog\", \"2023-10-01-r-universe-interviews\", \"index.en.md\"))gert::git_commit(\"Add
      translation placeholder\")gert::git_push()\n```\n:::\n\n- Create a new branch,
      \"auto-translate\" for instance.\n\n::: {.highlight}\n``` {.chroma tabindex=\"0\"}\ngert::git_branch_create(\"translation-tech-note\")\n```\n:::\n\n-
      Run `babeldown::deepl_translate_hugo()` with `force = TRUE`.\n\n::: {.highlight}\n```
      {.chroma tabindex=\"0\"}\nbabeldown::deepl_translate_hugo(  post_path = file.path(\"content\",
      \"blog\", \"2023-10-01-r-universe-interviews\", \"index.es.md\"),  force = TRUE,  yaml_fields
      = c(\"title\", \"description\", \"tags\"),  source_lang = \"ES\",  target_lang
      = \"EN-US\")\n```\n:::\n\nYou can also omit the `post_path` argument if you''re
      running the code\nfrom RStudio IDE and if the open and focused file (the one
      you see above\nyour console) is the post to be translated.\n\n::: {.highlight}\n```
      {.chroma tabindex=\"0\"}\nbabeldown::deepl_translate_hugo(  force = TRUE,  yaml_fields
      = c(\"title\", \"description\", \"tags\"),  source_lang = \"ES\",  target_lang
      = \"EN-US\")\n```\n:::\n\n- Commit the result with the code below.\n\n::: {.highlight}\n```
      {.chroma tabindex=\"0\"}\ngert::git_add(file.path(\"content\", \"blog\", \"2023-10-01-r-universe-interviews\",
      \"index.en.md\"))gert::git_commit(\"Add translation\")gert::git_push()\n```\n:::\n\n-
      Open a PR from the **\"translation-tech-note\"** branch to the\n  **\"new-post\"**
      branch.The only difference between the two branches is\n  the automatic translation
      of\n  `\"content/blog/2023-10-01-r-universe-interviews/index.en.md\"`.\n\n-
      The human translators can then a open a *second* PR to the translation\n  branch
      with their edits! Or they can add their edits as [PR\n  suggestions](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/commenting-on-a-pull-request#adding-comments-to-a-pull-request).\n\n###
      Summary of branches and PRs\n\nIn the end there should be two to three branches:\n\n-
      branch A with blog post in Spanish and placeholder blog post for\n  English
      (with Spanish content) -- PR to main;\n- branch B with blog post automatically
      translated to English -- PR to\n  branch A;\n- Optionally branch C with blog
      post''s English automatic translation\n  edited by a human -- PR to branch B.
      If branch C does not exist, edits\n  by a human are made as PR review suggestions
      in the PR from B to A.\n\nThe PR are merged in this order:\n\n- PR to branch
      B;\n- PR to branch A;\n- PR to main.\n\n### Real example\n\n- [PR adding a post
      to the rOpenSci\n  blog](https://github.com/ropensci/roweb3/pull/629), notice
      it''s a PR\n  from the **\"r-universe-interviews\"** branch to the **\"main\"\n  (default)**
      branch;\n- [PR adding the automatic\n  translation](https://github.com/ropensci/roweb3/pull/639),
      notice it''s\n  a PR to the **\"r-universe-interviews\"** branch.\n\n<figure>\n<img
      src=\"pr-diff.png\"\nalt=\"Screenshot of the files tab of the pull request adding
      the automatic translation, where we observe Spanish text in the YAML metadata
      and Markdown content has been translated to English.\" />\n</figure>\n\nYanina
      tweaked the automatic translation by suggesting changes on the\nPR, then accepting
      them.\n\n<figure>\n<img src=\"pr-comments.png\"\nalt=\"Screenshot of the main
      tab of the pull request adding the automatic translation, where we observe a
      comment by Yanina replacing the word &#39;article&#39; with &#39;blog post&#39;
      and fixing the name of &#39;R-universe&#39;.\" />\n</figure>\n\n### YAML fields\n\nBy
      default babeldown translates the YAML fields \"title\" and\n\"description\".If
      you have text in more of them, use the `yaml_fields`\nargument of `babeldown::deepl_translate_hugo()`.\n\nNote
      that if babeldown translates the title, it updates the slug.\n\n### Glossary\n\nImagine
      you have a few preferences for some words -- something you''ll\nbuild up over
      time.\n\n::: {.highlight}\n``` {.chroma tabindex=\"0\"}\nreadr::read_csv(  system.file(\"example-es-en.csv\",
      package = \"babeldown\"),   show_col_types = FALSE)\n```\n:::\n\n``` {tabindex=\"0\"}\n##
      # A tibble: 2 \u00d7 2##   Spanish     English   ##   <chr>       <chr>     ##
      1 paquete     package   ## 2 repositorio repository\n```\n\nYou can record these
      preferred translations in a glossary in your DeepL\naccount\n\n::: {.highlight}\n```
      {.chroma tabindex=\"0\"}\ndeepl_upsert_glossary(  <path-to-csv-file>,  glossary_name
      = \"rstats-glosario\",  target_lang = \"Spanish\",  source_lang = \"English\")\n```\n:::\n\nYou''d
      use the exact same code to *update* the glossary hence the name\n\"upsert\"
      for the function.You need one glossary per source language /\ntarget language
      pair: the English-Spanish glossary can''t be used for\nSpanish to English for
      instance.\n\nIn your `babeldown::deepl_translate_hugo()` call you then use the\nglossary
      name (here \"rstats-glosario\") for the `glossary` argument.\n\n### Formality\n\n`deepl_translate_hugo()`
      has a `formality` argument.Now, the DeepL API\nonly supports this for some languages
      as explained in the [documentation\nof the `formality` API\nparameter](https://www.deepl.com/docs-api/translate-text):\n\n>
      Sets whether the translated text should lean towards formal or\n> informal language.
      This feature currently only works for target\n> languages DE (German), FR (French),
      IT (Italian), ES (Spanish), NL\n> (Dutch), PL (Polish), PT-BR and PT-PT (Portuguese),
      JA (Japanese), and\n> RU (Russian). (...) Setting this parameter with a target
      language that\n> does not support formality will fail, unless one of the prefer\\_...\n>
      options are used.\n\nTherefore to be sure a translation will work, instead of
      writing\n`formality = \"less\"` you can write `formality = \"prefer_less\"`
      which\nwill only use formality if available.\n\n## Conclusion\n\nIn this post
      we explained how to translate a Hugo blog post using\nbabeldown.Although the
      gist is to use one call to\n`babeldown::deepl_translate_hugo()`,\n\n- one needs
      to indicate the API URL and key,\n- one can improve results by using the function''s
      different arguments,\n- we recommend pairing the translation with a Git + GitHub
      (or GitLab,\n  gitea...) workflow.\n\nbabeldown has\n[functions](https://docs.ropensci.org/babeldown/reference/index.html)\nfor
      translating Quarto book chapters, any Markdown file, and any\nMarkdown string,
      with similar arguments and recommended usage, so\nexplore its reference!\n\nWe''d
      be happy to hear about your [use cases](/usecases/).\n\n::: {.footnotes role=\"doc-endnotes\"}\n\n------------------------------------------------------------------------\n\n1.  :::
      {#fn:1}\n    But you should refer to [tinkr\n    docs](https://docs.ropensci.org/tinkr/#loss-of-markdown-style)
      to\n    see what might change in the Markdown syntax\n    style.\u00a0[\u21a9\ufe0e](#fnref:1){.footnote-backref
      role=\"doc-backlink\"}\n    :::\n\n2.  ::: {#fn:2}\n    adding code to handle
      Hugo''s [\"bewildering array of possible config\n    locations\"](https://github.com/r-lib/hugodown/issues/14#issuecomment-632850506)\n    and
      two possible formats (YAML and TOML) is out of scope for\n    babeldown at this
      point.\u00a0[\u21a9\ufe0e](#fnref:2){.footnote-backref\n    role=\"doc-backlink\"}\n    :::\n:::\n",
      "images": [{"src": "placeholder.png", "alt": "Diagram with on the left the leaf
      folder in the new-post branch with the post in Spanish with the text ''Hola''
      and an image; on the right the leaf folder in the new-post branch with the post
      in Spanish with the text ''hola'', the post with the English target filename
      with the text ''hola'', and the image."}, {"src": "translate.png", "alt": "Diagram
      with on the left the leaf folder in the auto-translate branch with the post
      in Spanish with the text ''hola'', the post with the English target filename
      with the text ''hola'', and the image; on the right the only thing that changed
      is that the content of the post with the English target filename is now ''hello''."},
      {"src": "pr.png", "alt": "Drawing of the pull request from the auto-translate
      to the new-post branch where the difference is that the content of the post
      with the English target filename has now been translated to English."}, {"src":
      "pr-diff.png", "alt": "Screenshot of the files tab of the pull request adding
      the automatic translation, where we observe Spanish text in the YAML metadata
      and Markdown content has been translated to English."}, {"src": "pr-comments.png",
      "alt": "Screenshot of the main tab of the pull request adding the automatic
      translation, where we observe a comment by Yanina replacing the word ''article''
      with ''blog post'' and fixing the name of ''R-universe''."}], "updated_at":
      1695713432, "published_at": 1695686400, "image": "placeholder.png", "language":
      "en", "category": null, "reference": [], "relationships": [], "summary": "<p>As
      part of our <a href=\"/multilingual-publishing/\">multilingual publishing project</a>,
      and with <a href=\"https://www.r-consortium.org/all-projects/awarded-projects/2022-group-2\">funding
      from the R Consortium</a>, we&rsquo;ve worked on the R package <a href=\"https://docs.ropensci.org/babeldown/\">babeldown</a>
      for translating Markdown-based content using the DeepL API.In this tech note,
      we&rsquo;ll show how you can use babeldown to translate a Hugo blog post!",
      "abstract": null, "tags": ["Tech Notes", "Multilingual"], "title": "How to Translate
      a Hugo Blog Post with Babeldown", "url": "https://ropensci.org/blog/2023/09/26/how-to-translate-a-hugo-blog-post-with-babeldown",
      "guid": "https://ropensci.org/blog/2023/09/26/how-to-translate-a-hugo-blog-post-with-babeldown/",
      "status": "active", "archive_url": null}'
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate, br
      accept-profile:
      - public
      baggage:
      - sentry-trace_id=929e4e8773a84e1c9e9b229b3c882984,sentry-environment=production,sentry-release=77d2e5fbc6625ef8ded815f1104616969f22f671,sentry-public_key=3ae354867bf244f48cf0281d7570123b
      connection:
      - keep-alive
      content-length:
      - '17204'
      content-profile:
      - public
      content-type:
      - application/json
      host:
      - db.rogue-scholar.org
      prefer:
      - return=representation,resolution=merge-duplicates
      sentry-trace:
      - 929e4e8773a84e1c9e9b229b3c882984-ab3deeb3404d97e5
      user-agent:
      - python-httpx/0.24.1
      x-client-info:
      - supabase-py/2.7.4
    method: POST
    uri: https://db.rogue-scholar.org/rest/v1/posts?on_conflict=guid
  response:
    body:
      string: "[{\"url\":\"https://ropensci.org/blog/2023/09/26/how-to-translate-a-hugo-blog-post-with-babeldown\",\"title\":\"How
        to Translate a Hugo Blog Post with Babeldown\",\"summary\":\"<p>As part of
        our <a href=\\\"/multilingual-publishing/\\\">multilingual publishing project</a>,
        and with <a href=\\\"https://www.r-consortium.org/all-projects/awarded-projects/2022-group-2\\\">funding
        from the R Consortium</a>, we&rsquo;ve worked on the R package <a href=\\\"https://docs.ropensci.org/babeldown/\\\">babeldown</a>
        for translating Markdown-based content using the DeepL API.In this tech note,
        we&rsquo;ll show how you can use babeldown to translate a Hugo blog post!\",\"image\":\"placeholder.png\",\"tags\":[\"Tech
        Notes\",\"Multilingual\"],\"language\":\"en\",\"authors\":[{\"url\": \"https://orcid.org/0000-0002-2815-0399\",
        \"name\": \"Ma\xEBlle Salmon\"}, {\"url\": \"https://orcid.org/0000-0002-4522-7466\",
        \"name\": \"Yanina Bellini Saibene\"}],\"doi\":\"https://doi.org/10.59350/evaf9-2qf48\",\"id\":\"78af77d1-72ba-4d9d-92aa-9dc258bbf00a\",\"reference\":[],\"updated_at\":1695713432,\"published_at\":1695686400,\"blog_name\":\"rOpenSci
        - open tools for open science\",\"indexed_at\":1709297857,\"indexed\":true,\"images\":[{\"alt\":
        \"Diagram with on the left the leaf folder in the new-post branch with the
        post in Spanish with the text 'Hola' and an image; on the right the leaf folder
        in the new-post branch with the post in Spanish with the text 'hola', the
        post with the English target filename with the text 'hola', and the image.\",
        \"src\": \"placeholder.png\"}, {\"alt\": \"Diagram with on the left the leaf
        folder in the auto-translate branch with the post in Spanish with the text
        'hola', the post with the English target filename with the text 'hola', and
        the image; on the right the only thing that changed is that the content of
        the post with the English target filename is now 'hello'.\", \"src\": \"translate.png\"},
        {\"alt\": \"Drawing of the pull request from the auto-translate to the new-post
        branch where the difference is that the content of the post with the English
        target filename has now been translated to English.\", \"src\": \"pr.png\"},
        {\"alt\": \"Screenshot of the files tab of the pull request adding the automatic
        translation, where we observe Spanish text in the YAML metadata and Markdown
        content has been translated to English.\", \"src\": \"pr-diff.png\"}, {\"alt\":
        \"Screenshot of the main tab of the pull request adding the automatic translation,
        where we observe a comment by Yanina replacing the word 'article' with 'blog
        post' and fixing the name of 'R-universe'.\", \"src\": \"pr-comments.png\"}],\"blog_slug\":\"ropensci\",\"content_text\":\"As
        part of our [multilingual publishing\\nproject](/multilingual-publishing/),
        and with [funding from the R\\nConsortium](https://www.r-consortium.org/all-projects/awarded-projects/2022-group-2),\\nwe've
        worked on the R package\\n[babeldown](https://docs.ropensci.org/babeldown/)
        for translating\\nMarkdown-based content using the DeepL API.In this tech
        note, we'll show\\nhow you can use babeldown to translate a Hugo blog post!\\n\\n##
        Motivation\\n\\nTranslating a Markdown blog post from your R console is not
        only more\\ncomfortable (when you've already written said blog post in R),
        but also\\nless frustrating.With babeldown, compared to copy-pasting the content
        of\\na blog post into some translation service, the Markdown syntax won't
        be\\nbroken^[1](#fn:1){.footnote-ref role=\\\"doc-noteref\\\"}^, and code
        chunks\\nwon't be translated.This works, because under the hood, babeldown
        uses\\n[tinkr](https://docs.ropensci.org/tinkr) to produce XML which it then\\nsends
        to the DeepL API, flagging some tags as not to be translated. It\\nthen converts
        the XML translated by DeepL back into Markdown again.\\n\\nNow, as you might
        expect this machine-translated content isn't perfect\\nyet!You will still
        need a human or two to review and amend the\\ntranslation.Why not have the
        humans translate the post from scratch\\nthen?We have observed that editing
        an automatic translation is faster\\nthan translating the whole post, and
        that it frees up mental space for\\nfocusing on implementing translation rules
        such as gender-neutral\\nphrasing.\\n\\n## Setup\\n\\n### Pre-requisites on
        the Hugo website\\n\\n[`babeldown::deepl_translate_hugo()`](https://docs.ropensci.org/babeldown/reference/deepl_translate_hugo.html)\\nassumes
        the Hugo website uses\\n\\n- leaf bundles (each post in a folder,\\n  `content/path-to-leaf-bundle/index.md`);\\n-
        multilingualism so that a post in (for example) Spanish lives in\\n  `content/path-to-leaf-bundle/index.es.md`.\\n\\nbabeldown
        could be extended work with other Hugo multilingual setups. If\\nyou'd be
        interested in using babeldown with a different setup, please\\nopen an issue
        in the [babeldown\\nrepository](https://github.com/ropensci-review-tools/babeldown/)!\\n\\nNote
        that babeldown won't be able to determine the default language of\\nyour website^[2](#fn:2){.footnote-ref
        role=\\\"doc-noteref\\\"}^ so even if\\nyour website's default language is
        English, babeldown will place an\\nEnglish translation in a file called \\\".en.md\\\"
        not \\\".md\\\".Hugo will\\nrecognize the new file all the same (at least
        in our setup).\\n\\n### DeepL pre-requisites\\n\\nFirst check that your desired
        source and target languages are supported\\nby the DeepL API!Look up the [docs
        of the `source_lang` and\\n`target_lang` API\\nparameters](https://www.deepl.com/docs-api/translate-text)
        for a full\\nlist.\\n\\nOnce you know you'll be able to take advantage of
        the DeepL API, you'll\\nneed to create an account for [DeepL's translation
        service\\nAPI](https://www.deepl.com/en/docs-api/).Note that even getting
        a free\\naccount requires registering a payment method with them.\\n\\n###
        R pre-requisites\\n\\nYou'll need to install babeldown from rOpenSci R-universe:\\n\\n:::
        {.highlight}\\n``` {.chroma tabindex=\\\"0\\\"}\\ninstall.packages('babeldown',
        repos = c('https://ropensci.r-universe.dev', 'https://cloud.r-project.org'))\\n```\\n:::\\n\\nThen,
        in each R session, set your DeepL API key via the environment\\nvariable DEEPL_API_KEY.
        You could store it once and for all with the\\n[keyring](https://r-lib.github.io/keyring/index.html)
        package and\\nretrieve it in your scripts like so:\\n\\n::: {.highlight}\\n```
        {.chroma tabindex=\\\"0\\\"}\\nSys.setenv(DEEPL_API_KEY = keyring::key_get(\\\"deepl\\\"))\\n```\\n:::\\n\\nLastly,
        the DeepL API URL depends on your API plan.babeldown uses the\\nDeepL free
        API URL by default.If you use a Pro plan, set the API URL in\\neach R session/script
        via\\n\\n::: {.highlight}\\n``` {.chroma tabindex=\\\"0\\\"}\\nSys.setenv(\\\"DEEPL_API_URL\\\"
        = \\\"https://api.deepl.com\\\")\\n```\\n:::\\n\\n## Translation!\\n\\nYou
        could run the code below\\n\\n::: {.highlight}\\n``` {.chroma tabindex=\\\"0\\\"}\\nbabeldown::deepl_translate_hugo(
        \ post_path = <path-to-post>,   source_lang = \\\"EN\\\",  target_lang = \\\"ES\\\",
        \ formality = \\\"less\\\" # that's how we roll here!)\\n```\\n:::\\n\\nbut
        we'd recommend a tad more work for your own good.\\n\\n## Translation using
        a Git/GitHub workflow\\n\\nIf you use version control, having the translation
        as a diff is very\\nhandy!\\n\\n### First: In words and pictures\\n\\n- In
        the branch of your post (let's call it \\\"new-post\\\") create a\\n  placeholder:
        save your original blog post (`index.es.md`) under the\\n  target blog post
        name (`index.en.md`) and commit it, then push.\\n\\n<figure>\\n<img src=\\\"placeholder.png\\\"\\nalt=\\\"Diagram
        with on the left the leaf folder in the new-post branch with the post in Spanish
        with the text &#39;Hola&#39; and an image; on the right the leaf folder in
        the new-post branch with the post in Spanish with the text &#39;hola&#39;,
        the post with the English target filename with the text &#39;hola&#39;, and
        the image.\\\" />\\n</figure>\\n\\n- Create a new branch, \\\"auto-translate\\\"
        for instance.\\n- Run `babeldown::deepl_translate_hugo()` with `force = TRUE`.\\n\\n<figure>\\n<img
        src=\\\"translate.png\\\"\\nalt=\\\"Diagram with on the left the leaf folder
        in the auto-translate branch with the post in Spanish with the text &#39;hola&#39;,
        the post with the English target filename with the text &#39;hola&#39;, and
        the image; on the right the only thing that changed is that the content of
        the post with the English target filename is now &#39;hello&#39;.\\\" />\\n</figure>\\n\\n-
        Commit and push the result.\\n- Open a PR from the **\\\"translation-tech-note\\\"**
        branch to the\\n  **\\\"new-post\\\"** branch.The only difference between
        the two branches is\\n  the automatic translation of your post. The diff for
        the target blog\\n  post will be the diff between the source and target languages!
        If you\\n  have the good habit to start a new line after each sentence / sentence\\n
        \ part, it's even better.\\n\\n<figure>\\n<img src=\\\"pr.png\\\"\\nalt=\\\"Drawing
        of the pull request from the auto-translate to the new-post branch where the
        difference is that the content of the post with the English target filename
        has now been translated to English.\\\" />\\n</figure>\\n\\n- The human translators
        can then a open a second PR to the translation\\n  branch with their edits!
        Or they can add their edits as [PR\\n  suggestions](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/commenting-on-a-pull-request#adding-comments-to-a-pull-request).\\n\\n###
        Again: In code\\n\\nNow let's go over this again, but with a coding workflow.
        Here, we'll\\nuse fs and gert (but you do you!), and we'll assume your current\\ndirectory
        is the root of the website folder, and also the root of the\\ngit repository.\\n\\n-
        In the post branch, (again, let's call it \\\"new-post\\\"), save your\\n
        \ original blog post (`index.es.md`) under the target blog post name\\n  (`index.en.md`)
        and commit it, then push.\\n\\n::: {.highlight}\\n``` {.chroma tabindex=\\\"0\\\"}\\nfs::file_copy(
        \ file.path(\\\"content\\\", \\\"blog\\\", \\\"2023-10-01-r-universe-interviews\\\",
        \\\"index.es.md\\\"),  file.path(\\\"content\\\", \\\"blog\\\", \\\"2023-10-01-r-universe-interviews\\\",
        \\\"index.en.md\\\"))gert::git_add(file.path(\\\"content\\\", \\\"blog\\\",
        \\\"2023-10-01-r-universe-interviews\\\", \\\"index.en.md\\\"))gert::git_commit(\\\"Add
        translation placeholder\\\")gert::git_push()\\n```\\n:::\\n\\n- Create a new
        branch, \\\"auto-translate\\\" for instance.\\n\\n::: {.highlight}\\n``` {.chroma
        tabindex=\\\"0\\\"}\\ngert::git_branch_create(\\\"translation-tech-note\\\")\\n```\\n:::\\n\\n-
        Run `babeldown::deepl_translate_hugo()` with `force = TRUE`.\\n\\n::: {.highlight}\\n```
        {.chroma tabindex=\\\"0\\\"}\\nbabeldown::deepl_translate_hugo(  post_path
        = file.path(\\\"content\\\", \\\"blog\\\", \\\"2023-10-01-r-universe-interviews\\\",
        \\\"index.es.md\\\"),  force = TRUE,  yaml_fields = c(\\\"title\\\", \\\"description\\\",
        \\\"tags\\\"),  source_lang = \\\"ES\\\",  target_lang = \\\"EN-US\\\")\\n```\\n:::\\n\\nYou
        can also omit the `post_path` argument if you're running the code\\nfrom RStudio
        IDE and if the open and focused file (the one you see above\\nyour console)
        is the post to be translated.\\n\\n::: {.highlight}\\n``` {.chroma tabindex=\\\"0\\\"}\\nbabeldown::deepl_translate_hugo(
        \ force = TRUE,  yaml_fields = c(\\\"title\\\", \\\"description\\\", \\\"tags\\\"),
        \ source_lang = \\\"ES\\\",  target_lang = \\\"EN-US\\\")\\n```\\n:::\\n\\n-
        Commit the result with the code below.\\n\\n::: {.highlight}\\n``` {.chroma
        tabindex=\\\"0\\\"}\\ngert::git_add(file.path(\\\"content\\\", \\\"blog\\\",
        \\\"2023-10-01-r-universe-interviews\\\", \\\"index.en.md\\\"))gert::git_commit(\\\"Add
        translation\\\")gert::git_push()\\n```\\n:::\\n\\n- Open a PR from the **\\\"translation-tech-note\\\"**
        branch to the\\n  **\\\"new-post\\\"** branch.The only difference between
        the two branches is\\n  the automatic translation of\\n  `\\\"content/blog/2023-10-01-r-universe-interviews/index.en.md\\\"`.\\n\\n-
        The human translators can then a open a *second* PR to the translation\\n
        \ branch with their edits! Or they can add their edits as [PR\\n  suggestions](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/commenting-on-a-pull-request#adding-comments-to-a-pull-request).\\n\\n###
        Summary of branches and PRs\\n\\nIn the end there should be two to three branches:\\n\\n-
        branch A with blog post in Spanish and placeholder blog post for\\n  English
        (with Spanish content) -- PR to main;\\n- branch B with blog post automatically
        translated to English -- PR to\\n  branch A;\\n- Optionally branch C with
        blog post's English automatic translation\\n  edited by a human -- PR to branch
        B. If branch C does not exist, edits\\n  by a human are made as PR review
        suggestions in the PR from B to A.\\n\\nThe PR are merged in this order:\\n\\n-
        PR to branch B;\\n- PR to branch A;\\n- PR to main.\\n\\n### Real example\\n\\n-
        [PR adding a post to the rOpenSci\\n  blog](https://github.com/ropensci/roweb3/pull/629),
        notice it's a PR\\n  from the **\\\"r-universe-interviews\\\"** branch to
        the **\\\"main\\\"\\n  (default)** branch;\\n- [PR adding the automatic\\n
        \ translation](https://github.com/ropensci/roweb3/pull/639), notice it's\\n
        \ a PR to the **\\\"r-universe-interviews\\\"** branch.\\n\\n<figure>\\n<img
        src=\\\"pr-diff.png\\\"\\nalt=\\\"Screenshot of the files tab of the pull
        request adding the automatic translation, where we observe Spanish text in
        the YAML metadata and Markdown content has been translated to English.\\\"
        />\\n</figure>\\n\\nYanina tweaked the automatic translation by suggesting
        changes on the\\nPR, then accepting them.\\n\\n<figure>\\n<img src=\\\"pr-comments.png\\\"\\nalt=\\\"Screenshot
        of the main tab of the pull request adding the automatic translation, where
        we observe a comment by Yanina replacing the word &#39;article&#39; with &#39;blog
        post&#39; and fixing the name of &#39;R-universe&#39;.\\\" />\\n</figure>\\n\\n###
        YAML fields\\n\\nBy default babeldown translates the YAML fields \\\"title\\\"
        and\\n\\\"description\\\".If you have text in more of them, use the `yaml_fields`\\nargument
        of `babeldown::deepl_translate_hugo()`.\\n\\nNote that if babeldown translates
        the title, it updates the slug.\\n\\n### Glossary\\n\\nImagine you have a
        few preferences for some words -- something you'll\\nbuild up over time.\\n\\n:::
        {.highlight}\\n``` {.chroma tabindex=\\\"0\\\"}\\nreadr::read_csv(  system.file(\\\"example-es-en.csv\\\",
        package = \\\"babeldown\\\"),   show_col_types = FALSE)\\n```\\n:::\\n\\n```
        {tabindex=\\\"0\\\"}\\n## # A tibble: 2 \xD7 2##   Spanish     English   ##
        \  <chr>       <chr>     ## 1 paquete     package   ## 2 repositorio repository\\n```\\n\\nYou
        can record these preferred translations in a glossary in your DeepL\\naccount\\n\\n:::
        {.highlight}\\n``` {.chroma tabindex=\\\"0\\\"}\\ndeepl_upsert_glossary(  <path-to-csv-file>,
        \ glossary_name = \\\"rstats-glosario\\\",  target_lang = \\\"Spanish\\\",
        \ source_lang = \\\"English\\\")\\n```\\n:::\\n\\nYou'd use the exact same
        code to *update* the glossary hence the name\\n\\\"upsert\\\" for the function.You
        need one glossary per source language /\\ntarget language pair: the English-Spanish
        glossary can't be used for\\nSpanish to English for instance.\\n\\nIn your
        `babeldown::deepl_translate_hugo()` call you then use the\\nglossary name
        (here \\\"rstats-glosario\\\") for the `glossary` argument.\\n\\n### Formality\\n\\n`deepl_translate_hugo()`
        has a `formality` argument.Now, the DeepL API\\nonly supports this for some
        languages as explained in the [documentation\\nof the `formality` API\\nparameter](https://www.deepl.com/docs-api/translate-text):\\n\\n>
        Sets whether the translated text should lean towards formal or\\n> informal
        language. This feature currently only works for target\\n> languages DE (German),
        FR (French), IT (Italian), ES (Spanish), NL\\n> (Dutch), PL (Polish), PT-BR
        and PT-PT (Portuguese), JA (Japanese), and\\n> RU (Russian). (...) Setting
        this parameter with a target language that\\n> does not support formality
        will fail, unless one of the prefer\\\\_...\\n> options are used.\\n\\nTherefore
        to be sure a translation will work, instead of writing\\n`formality = \\\"less\\\"`
        you can write `formality = \\\"prefer_less\\\"` which\\nwill only use formality
        if available.\\n\\n## Conclusion\\n\\nIn this post we explained how to translate
        a Hugo blog post using\\nbabeldown.Although the gist is to use one call to\\n`babeldown::deepl_translate_hugo()`,\\n\\n-
        one needs to indicate the API URL and key,\\n- one can improve results by
        using the function's different arguments,\\n- we recommend pairing the translation
        with a Git + GitHub (or GitLab,\\n  gitea...) workflow.\\n\\nbabeldown has\\n[functions](https://docs.ropensci.org/babeldown/reference/index.html)\\nfor
        translating Quarto book chapters, any Markdown file, and any\\nMarkdown string,
        with similar arguments and recommended usage, so\\nexplore its reference!\\n\\nWe'd
        be happy to hear about your [use cases](/usecases/).\\n\\n::: {.footnotes
        role=\\\"doc-endnotes\\\"}\\n\\n------------------------------------------------------------------------\\n\\n1.
        \ ::: {#fn:1}\\n    But you should refer to [tinkr\\n    docs](https://docs.ropensci.org/tinkr/#loss-of-markdown-style)
        to\\n    see what might change in the Markdown syntax\\n    style.\_[\u21A9\uFE0E](#fnref:1){.footnote-backref
        role=\\\"doc-backlink\\\"}\\n    :::\\n\\n2.  ::: {#fn:2}\\n    adding code
        to handle Hugo's [\\\"bewildering array of possible config\\n    locations\\\"](https://github.com/r-lib/hugodown/issues/14#issuecomment-632850506)\\n
        \   and two possible formats (YAML and TOML) is out of scope for\\n    babeldown
        at this point.\_[\u21A9\uFE0E](#fnref:2){.footnote-backref\\n    role=\\\"doc-backlink\\\"}\\n
        \   :::\\n:::\\n\",\"relationships\":[],\"archive_url\":null,\"guid\":\"https://ropensci.org/blog/2023/09/26/how-to-translate-a-hugo-blog-post-with-babeldown/\",\"updated\":false,\"category\":null,\"abstract\":null,\"status\":\"active\"}]"
    headers:
      cf-cache-status:
      - DYNAMIC
      cf-ray:
      - 8c8a0dc5c8b6717b-DUS
      content-profile:
      - public
      content-range:
      - '*/*'
      content-type:
      - application/json; charset=utf-8
      date:
      - Wed, 25 Sep 2024 09:40:37 GMT
      preference-applied:
      - resolution=merge-duplicates
      sb-gateway-version:
      - '1'
      server:
      - cloudflare
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-envoy-upstream-service-time:
      - '11'
    status:
      code: 201
      message: Created
- request:
    body: '{"indexed": true}'
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate, br
      accept-profile:
      - public
      baggage:
      - sentry-trace_id=929e4e8773a84e1c9e9b229b3c882984,sentry-environment=production,sentry-release=77d2e5fbc6625ef8ded815f1104616969f22f671,sentry-public_key=3ae354867bf244f48cf0281d7570123b
      connection:
      - keep-alive
      content-length:
      - '17'
      content-profile:
      - public
      content-type:
      - application/json
      host:
      - db.rogue-scholar.org
      prefer:
      - return=representation
      sentry-trace:
      - 929e4e8773a84e1c9e9b229b3c882984-ab3deeb3404d97e5
      user-agent:
      - python-httpx/0.24.1
      x-client-info:
      - supabase-py/2.7.4
    method: PATCH
    uri: https://db.rogue-scholar.org/rest/v1/posts?id=eq.78af77d1-72ba-4d9d-92aa-9dc258bbf00a
  response:
    body:
      string: !!binary |
        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
        PjnosQ/UyEZ1h46CxWt2j1cD
    headers:
      cf-cache-status:
      - DYNAMIC
      cf-ray:
      - 8c8a0dc689c2717b-DUS
      content-encoding:
      - br
      content-profile:
      - public
      content-range:
      - 0-0/*
      content-type:
      - application/json; charset=utf-8
      date:
      - Wed, 25 Sep 2024 09:40:37 GMT
      sb-gateway-version:
      - '1'
      server:
      - cloudflare
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-envoy-upstream-service-time:
      - '9'
    status:
      code: 200
      message: OK
version: 1
